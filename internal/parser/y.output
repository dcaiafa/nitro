
state 0
	$accept: .program $end 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	program  goto 1
	opt_stmts  goto 2
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  opt_stmts.    (1)

	.  reduce 1 (src line 48)


state 3
	opt_stmts:  stmts.    (2)
	stmts:  stmts.stmt ';' 
	stmts:  stmts.';' 

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 34
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 2 (src line 50)

	stmt  goto 33
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 4
	stmts:  stmt.';' 

	';'  shift 35
	.  error


state 5
	stmts:  ';'.    (7)

	.  reduce 7 (src line 56)


state 6
	stmt:  assignment_stmt.    (8)

	.  reduce 8 (src line 58)


state 7
	stmt:  var_decl_stmt.    (9)

	.  reduce 9 (src line 59)


state 8
	stmt:  expr.    (10)
	assignment_stmt:  expr.'=' expr 

	'='  shift 36
	.  reduce 10 (src line 60)


state 9
	stmt:  for_stmt.    (11)

	.  reduce 11 (src line 61)


state 10
	stmt:  if_stmt.    (12)

	.  reduce 12 (src line 62)


state 11
	stmt:  func_stmt.    (13)

	.  reduce 13 (src line 63)


state 12
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 37
	.  error


state 13
	expr:  bin_expr.'|' bin_expr 
	expr:  bin_expr.    (31)
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	kAND  shift 49
	kOR  shift 50
	'<'  shift 43
	LE  shift 44
	'>'  shift 45
	GE  shift 46
	EQ  shift 47
	NE  shift 48
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	'|'  shift 38
	.  reduce 31 (src line 108)


state 14
	for_stmt:  kFOR.for_args kIN expr kDO opt_stmts kEND 

	ID  shift 52
	.  error

	for_args  goto 51

state 15
	if_stmt:  kIF.expr kTHEN opt_stmts elifs_opt else_opt kEND 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 53
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 16
	func_stmt:  kFN.ID '(' param_list_opt ')' opt_stmts kEND 
	func_expr:  kFN.'(' param_list_opt ')' opt_stmts kEND 

	ID  shift 55
	'('  shift 56
	.  error


state 17
	bin_expr:  unary_expr.    (32)

	.  reduce 32 (src line 110)


state 18
	unary_expr:  kNOT.unary_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	unary_expr  goto 57
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 19
	unary_expr:  '+'.unary_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	unary_expr  goto 58
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 20
	unary_expr:  '-'.unary_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	unary_expr  goto 59
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 21
	unary_expr:  primary_expr.    (48)
	primary_expr:  primary_expr.'[' expr ']' 
	primary_expr:  primary_expr.'.' ID 
	primary_expr:  primary_expr.'(' arg_list_opt ')' 

	'('  shift 62
	'['  shift 60
	'.'  shift 61
	.  reduce 48 (src line 127)


state 22
	primary_expr:  STRING.    (49)

	.  reduce 49 (src line 129)


state 23
	primary_expr:  NUMBER.    (50)

	.  reduce 50 (src line 130)


state 24
	primary_expr:  ID.    (51)

	.  reduce 51 (src line 131)


state 25
	primary_expr:  kTRUE.    (52)

	.  reduce 52 (src line 132)


state 26
	primary_expr:  kFALSE.    (53)

	.  reduce 53 (src line 133)


state 27
	primary_expr:  array_literal.    (54)

	.  reduce 54 (src line 134)


state 28
	primary_expr:  object_literal.    (55)

	.  reduce 55 (src line 135)


state 29
	primary_expr:  func_expr.    (59)

	.  reduce 59 (src line 139)


state 30
	primary_expr:  '('.expr ')' 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 63
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 31
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (90)

	kFALSE  shift 26
	kIF  shift 69
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 90 (src line 199)

	expr  goto 67
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29
	array_elems_opt  goto 64
	array_elems  goto 65
	array_elem  goto 66
	array_if  goto 68

state 32
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (72)

	kIF  shift 76
	ID  shift 73
	'['  shift 74
	.  reduce 72 (src line 162)

	object_fields_opt  goto 70
	object_fields  goto 71
	object_field  goto 72
	object_if  goto 75

state 33
	stmts:  stmts stmt.';' 

	';'  shift 77
	.  error


state 34
	stmts:  stmts ';'.    (5)

	.  reduce 5 (src line 54)


state 35
	stmts:  stmt ';'.    (6)

	.  reduce 6 (src line 55)


state 36
	assignment_stmt:  expr '='.expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 78
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 37
	var_decl_stmt:  kVAR ID.    (28)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 79
	.  reduce 28 (src line 104)


state 38
	expr:  bin_expr '|'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 80
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 39
	bin_expr:  bin_expr '+'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 81
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 40
	bin_expr:  bin_expr '-'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 82
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 41
	bin_expr:  bin_expr '*'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 83
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 42
	bin_expr:  bin_expr '/'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 84
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 43
	bin_expr:  bin_expr '<'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 85
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 44
	bin_expr:  bin_expr LE.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 86
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 45
	bin_expr:  bin_expr '>'.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 87
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 46
	bin_expr:  bin_expr GE.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 88
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 47
	bin_expr:  bin_expr EQ.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 89
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 48
	bin_expr:  bin_expr NE.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 90
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 49
	bin_expr:  bin_expr kAND.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 91
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 50
	bin_expr:  bin_expr kOR.bin_expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	bin_expr  goto 92
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 51
	for_stmt:  kFOR for_args.kIN expr kDO opt_stmts kEND 
	for_args:  for_args.',' ID 

	kIN  shift 93
	','  shift 94
	.  error


state 52
	for_args:  ID.    (26)

	.  reduce 26 (src line 100)


state 53
	if_stmt:  kIF expr.kTHEN opt_stmts elifs_opt else_opt kEND 

	kTHEN  shift 95
	.  error


state 54
	func_expr:  kFN.'(' param_list_opt ')' opt_stmts kEND 

	'('  shift 56
	.  error


state 55
	func_stmt:  kFN ID.'(' param_list_opt ')' opt_stmts kEND 

	'('  shift 96
	.  error


state 56
	func_expr:  kFN '('.param_list_opt ')' opt_stmts kEND 
	param_list_opt: .    (63)

	ID  shift 99
	.  reduce 63 (src line 148)

	param_list_opt  goto 97
	param_list  goto 98

state 57
	unary_expr:  kNOT unary_expr.    (45)

	.  reduce 45 (src line 124)


state 58
	unary_expr:  '+' unary_expr.    (46)

	.  reduce 46 (src line 125)


state 59
	unary_expr:  '-' unary_expr.    (47)

	.  reduce 47 (src line 126)


state 60
	primary_expr:  primary_expr '['.expr ']' 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 100
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 61
	primary_expr:  primary_expr '.'.ID 

	ID  shift 101
	.  error


state 62
	primary_expr:  primary_expr '('.arg_list_opt ')' 
	arg_list_opt: .    (67)

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 67 (src line 154)

	expr  goto 104
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	arg_list_opt  goto 102
	func_expr  goto 29
	arg_list  goto 103

state 63
	primary_expr:  '(' expr.')' 

	')'  shift 105
	.  error


state 64
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 106
	.  error


state 65
	array_elems_opt:  array_elems.trailing_seps 
	array_elems:  array_elems.',' array_elem 
	array_elems:  array_elems.';' array_elem 
	trailing_seps: .    (105)

	';'  shift 109
	','  shift 108
	.  reduce 105 (src line 232)

	trailing_seps  goto 107
	trailing_seps1  goto 110

state 66
	array_elems:  array_elem.    (93)

	.  reduce 93 (src line 203)


state 67
	array_elem:  expr.    (94)

	.  reduce 94 (src line 205)


state 68
	array_elem:  array_if.    (95)

	.  reduce 95 (src line 206)


state 69
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 111
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 70
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 112
	.  error


state 71
	object_fields_opt:  object_fields.trailing_seps 
	object_fields:  object_fields.',' object_field 
	object_fields:  object_fields.';' object_field 
	trailing_seps: .    (105)

	';'  shift 115
	','  shift 114
	.  reduce 105 (src line 232)

	trailing_seps  goto 113
	trailing_seps1  goto 110

state 72
	object_fields:  object_field.    (75)

	.  reduce 75 (src line 166)


state 73
	object_field:  ID.':' expr 

	':'  shift 116
	.  error


state 74
	object_field:  '['.expr ']' ':' expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 117
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 75
	object_field:  object_if.    (78)

	.  reduce 78 (src line 170)


state 76
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 118
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 77
	stmts:  stmts stmt ';'.    (4)

	.  reduce 4 (src line 53)


state 78
	assignment_stmt:  expr '=' expr.    (27)

	.  reduce 27 (src line 102)


state 79
	var_decl_stmt:  kVAR ID '='.expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 119
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 80
	expr:  bin_expr '|' bin_expr.    (30)
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	kAND  shift 49
	kOR  shift 50
	'<'  shift 43
	LE  shift 44
	'>'  shift 45
	GE  shift 46
	EQ  shift 47
	NE  shift 48
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 30 (src line 107)


state 81
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr '+' bin_expr.    (33)
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'*'  shift 41
	'/'  shift 42
	.  reduce 33 (src line 111)


state 82
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr '-' bin_expr.    (34)
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'*'  shift 41
	'/'  shift 42
	.  reduce 34 (src line 112)


state 83
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr '*' bin_expr.    (35)
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	.  reduce 35 (src line 113)


state 84
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr '/' bin_expr.    (36)
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	.  reduce 36 (src line 114)


state 85
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr '<' bin_expr.    (37)
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 37 (src line 115)


state 86
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr LE bin_expr.    (38)
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 38 (src line 116)


state 87
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr '>' bin_expr.    (39)
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 39 (src line 117)


state 88
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr GE bin_expr.    (40)
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 40 (src line 118)


state 89
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr EQ bin_expr.    (41)
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 41 (src line 119)


state 90
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr NE bin_expr.    (42)
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 42 (src line 120)


state 91
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr kAND bin_expr.    (43)
	bin_expr:  bin_expr.kOR bin_expr 

	'<'  shift 43
	LE  shift 44
	'>'  shift 45
	GE  shift 46
	EQ  shift 47
	NE  shift 48
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 43 (src line 121)


state 92
	bin_expr:  bin_expr.'+' bin_expr 
	bin_expr:  bin_expr.'-' bin_expr 
	bin_expr:  bin_expr.'*' bin_expr 
	bin_expr:  bin_expr.'/' bin_expr 
	bin_expr:  bin_expr.'<' bin_expr 
	bin_expr:  bin_expr.LE bin_expr 
	bin_expr:  bin_expr.'>' bin_expr 
	bin_expr:  bin_expr.GE bin_expr 
	bin_expr:  bin_expr.EQ bin_expr 
	bin_expr:  bin_expr.NE bin_expr 
	bin_expr:  bin_expr.kAND bin_expr 
	bin_expr:  bin_expr.kOR bin_expr 
	bin_expr:  bin_expr kOR bin_expr.    (44)

	kAND  shift 49
	'<'  shift 43
	LE  shift 44
	'>'  shift 45
	GE  shift 46
	EQ  shift 47
	NE  shift 48
	'+'  shift 39
	'-'  shift 40
	'*'  shift 41
	'/'  shift 42
	.  reduce 44 (src line 122)


state 93
	for_stmt:  kFOR for_args kIN.expr kDO opt_stmts kEND 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 120
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 94
	for_args:  for_args ','.ID 

	ID  shift 121
	.  error


state 95
	if_stmt:  kIF expr kTHEN.opt_stmts elifs_opt else_opt kEND 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	opt_stmts  goto 122
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 96
	func_stmt:  kFN ID '('.param_list_opt ')' opt_stmts kEND 
	param_list_opt: .    (63)

	ID  shift 99
	.  reduce 63 (src line 148)

	param_list_opt  goto 123
	param_list  goto 98

state 97
	func_expr:  kFN '(' param_list_opt.')' opt_stmts kEND 

	')'  shift 124
	.  error


state 98
	param_list_opt:  param_list.    (62)
	param_list:  param_list.',' ID 

	','  shift 125
	.  reduce 62 (src line 147)


state 99
	param_list:  ID.    (65)

	.  reduce 65 (src line 151)


state 100
	primary_expr:  primary_expr '[' expr.']' 

	']'  shift 126
	.  error


state 101
	primary_expr:  primary_expr '.' ID.    (57)

	.  reduce 57 (src line 137)


state 102
	primary_expr:  primary_expr '(' arg_list_opt.')' 

	')'  shift 127
	.  error


state 103
	arg_list_opt:  arg_list.trailing_comma 
	arg_list:  arg_list.',' expr 
	trailing_comma: .    (112)

	','  shift 129
	.  reduce 112 (src line 239)

	trailing_comma  goto 128

state 104
	arg_list:  expr.    (69)

	.  reduce 69 (src line 157)


state 105
	primary_expr:  '(' expr ')'.    (60)

	.  reduce 60 (src line 140)


state 106
	array_literal:  '[' array_elems_opt ']'.    (88)

	.  reduce 88 (src line 196)


state 107
	array_elems_opt:  array_elems trailing_seps.    (89)

	.  reduce 89 (src line 198)


state 108
	array_elems:  array_elems ','.array_elem 
	trailing_seps1:  ','.    (110)

	kFALSE  shift 26
	kIF  shift 69
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 110 (src line 237)

	expr  goto 67
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29
	array_elem  goto 130
	array_if  goto 68

state 109
	array_elems:  array_elems ';'.array_elem 
	trailing_seps1:  ';'.    (109)

	kFALSE  shift 26
	kIF  shift 69
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 109 (src line 236)

	expr  goto 67
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29
	array_elem  goto 131
	array_if  goto 68

state 110
	trailing_seps:  trailing_seps1.    (106)
	trailing_seps1:  trailing_seps1.';' 
	trailing_seps1:  trailing_seps1.',' 

	';'  shift 132
	','  shift 133
	.  reduce 106 (src line 232)


state 111
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kTHEN  shift 134
	.  error


state 112
	object_literal:  '{' object_fields_opt '}'.    (70)

	.  reduce 70 (src line 159)


state 113
	object_fields_opt:  object_fields trailing_seps.    (71)

	.  reduce 71 (src line 161)


state 114
	object_fields:  object_fields ','.object_field 
	trailing_seps1:  ','.    (110)

	kIF  shift 76
	ID  shift 73
	'['  shift 74
	.  reduce 110 (src line 237)

	object_field  goto 135
	object_if  goto 75

state 115
	object_fields:  object_fields ';'.object_field 
	trailing_seps1:  ';'.    (109)

	kIF  shift 76
	ID  shift 73
	'['  shift 74
	.  reduce 109 (src line 236)

	object_field  goto 136
	object_if  goto 75

state 116
	object_field:  ID ':'.expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 137
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 117
	object_field:  '[' expr.']' ':' expr 

	']'  shift 138
	.  error


state 118
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kTHEN  shift 139
	.  error


state 119
	var_decl_stmt:  kVAR ID '=' expr.    (29)

	.  reduce 29 (src line 105)


state 120
	for_stmt:  kFOR for_args kIN expr.kDO opt_stmts kEND 

	kDO  shift 140
	.  error


state 121
	for_args:  for_args ',' ID.    (25)

	.  reduce 25 (src line 99)


state 122
	if_stmt:  kIF expr kTHEN opt_stmts.elifs_opt else_opt kEND 
	elifs_opt: .    (17)

	kELIF  shift 144
	.  reduce 17 (src line 78)

	elifs_opt  goto 141
	elifs  goto 142
	elif  goto 143

state 123
	func_stmt:  kFN ID '(' param_list_opt.')' opt_stmts kEND 

	')'  shift 145
	.  error


state 124
	func_expr:  kFN '(' param_list_opt ')'.opt_stmts kEND 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	opt_stmts  goto 146
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 125
	param_list:  param_list ','.ID 

	ID  shift 147
	.  error


state 126
	primary_expr:  primary_expr '[' expr ']'.    (56)

	.  reduce 56 (src line 136)


state 127
	primary_expr:  primary_expr '(' arg_list_opt ')'.    (58)

	.  reduce 58 (src line 138)


state 128
	arg_list_opt:  arg_list trailing_comma.    (66)

	.  reduce 66 (src line 153)


state 129
	arg_list:  arg_list ','.expr 
	trailing_comma:  ','.    (111)

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 111 (src line 239)

	expr  goto 148
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 130
	array_elems:  array_elems ',' array_elem.    (91)

	.  reduce 91 (src line 201)


state 131
	array_elems:  array_elems ';' array_elem.    (92)

	.  reduce 92 (src line 202)


state 132
	trailing_seps1:  trailing_seps1 ';'.    (107)

	.  reduce 107 (src line 234)


state 133
	trailing_seps1:  trailing_seps1 ','.    (108)

	.  reduce 108 (src line 235)


state 134
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (90)

	kFALSE  shift 26
	kIF  shift 69
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 90 (src line 199)

	expr  goto 67
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29
	array_elems_opt  goto 149
	array_elems  goto 65
	array_elem  goto 66
	array_if  goto 68

state 135
	object_fields:  object_fields ',' object_field.    (73)

	.  reduce 73 (src line 164)


state 136
	object_fields:  object_fields ';' object_field.    (74)

	.  reduce 74 (src line 165)


state 137
	object_field:  ID ':' expr.    (76)

	.  reduce 76 (src line 168)


state 138
	object_field:  '[' expr ']'.':' expr 

	':'  shift 150
	.  error


state 139
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (72)

	kIF  shift 76
	ID  shift 73
	'['  shift 74
	.  reduce 72 (src line 162)

	object_fields_opt  goto 151
	object_fields  goto 71
	object_field  goto 72
	object_if  goto 75

state 140
	for_stmt:  kFOR for_args kIN expr kDO.opt_stmts kEND 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	opt_stmts  goto 152
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 141
	if_stmt:  kIF expr kTHEN opt_stmts elifs_opt.else_opt kEND 
	else_opt: .    (22)

	kELSE  shift 155
	.  reduce 22 (src line 88)

	else_opt  goto 153
	else  goto 154

state 142
	elifs_opt:  elifs.    (16)
	elifs:  elifs.elif 

	kELIF  shift 144
	.  reduce 16 (src line 77)

	elif  goto 156

state 143
	elifs:  elif.    (19)

	.  reduce 19 (src line 81)


state 144
	elif:  kELIF.expr kTHEN opt_stmts 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 157
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 145
	func_stmt:  kFN ID '(' param_list_opt ')'.opt_stmts kEND 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	opt_stmts  goto 158
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 146
	func_expr:  kFN '(' param_list_opt ')' opt_stmts.kEND 

	kEND  shift 159
	.  error


state 147
	param_list:  param_list ',' ID.    (64)

	.  reduce 64 (src line 150)


state 148
	arg_list:  arg_list ',' expr.    (68)

	.  reduce 68 (src line 156)


state 149
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (98)

	kELIF  shift 163
	.  reduce 98 (src line 216)

	array_elifs_opt  goto 160
	array_elifs  goto 161
	array_elif  goto 162

state 150
	object_field:  '[' expr ']' ':'.expr 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 164
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 151
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (81)

	kELIF  shift 168
	.  reduce 81 (src line 180)

	object_elifs_opt  goto 165
	object_elifs  goto 166
	object_elif  goto 167

state 152
	for_stmt:  kFOR for_args kIN expr kDO opt_stmts.kEND 

	kEND  shift 169
	.  error


state 153
	if_stmt:  kIF expr kTHEN opt_stmts elifs_opt else_opt.kEND 

	kEND  shift 170
	.  error


state 154
	else_opt:  else.    (21)

	.  reduce 21 (src line 87)


state 155
	else:  kELSE.opt_stmts 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	opt_stmts  goto 171
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 156
	elifs:  elifs elif.    (18)

	.  reduce 18 (src line 80)


state 157
	elif:  kELIF expr.kTHEN opt_stmts 

	kTHEN  shift 172
	.  error


state 158
	func_stmt:  kFN ID '(' param_list_opt ')' opt_stmts.kEND 

	kEND  shift 173
	.  error


state 159
	func_expr:  kFN '(' param_list_opt ')' opt_stmts kEND.    (61)

	.  reduce 61 (src line 142)


state 160
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (103)

	kELSE  shift 176
	.  reduce 103 (src line 226)

	array_else_opt  goto 174
	array_else  goto 175

state 161
	array_elifs_opt:  array_elifs.    (97)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 163
	.  reduce 97 (src line 215)

	array_elif  goto 177

state 162
	array_elifs:  array_elif.    (100)

	.  reduce 100 (src line 219)


state 163
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 178
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 164
	object_field:  '[' expr ']' ':' expr.    (77)

	.  reduce 77 (src line 169)


state 165
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (86)

	kELSE  shift 181
	.  reduce 86 (src line 190)

	object_else_opt  goto 179
	object_else  goto 180

state 166
	object_elifs_opt:  object_elifs.    (80)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 168
	.  reduce 80 (src line 179)

	object_elif  goto 182

state 167
	object_elifs:  object_elif.    (83)

	.  reduce 83 (src line 183)


state 168
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kFALSE  shift 26
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  error

	expr  goto 183
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 169
	for_stmt:  kFOR for_args kIN expr kDO opt_stmts kEND.    (24)

	.  reduce 24 (src line 94)


state 170
	if_stmt:  kIF expr kTHEN opt_stmts elifs_opt else_opt kEND.    (15)

	.  reduce 15 (src line 70)


state 171
	else:  kELSE opt_stmts.    (23)

	.  reduce 23 (src line 90)


state 172
	elif:  kELIF expr kTHEN.opt_stmts 
	opt_stmts: .    (3)

	kVAR  shift 12
	kFALSE  shift 26
	kFOR  shift 14
	kIF  shift 15
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 16
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	';'  shift 5
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 3 (src line 51)

	opt_stmts  goto 184
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_stmt  goto 10
	func_stmt  goto 11
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29

state 173
	func_stmt:  kFN ID '(' param_list_opt ')' opt_stmts kEND.    (14)

	.  reduce 14 (src line 65)


state 174
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 185
	.  error


state 175
	array_else_opt:  array_else.    (102)

	.  reduce 102 (src line 225)


state 176
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (90)

	kFALSE  shift 26
	kIF  shift 69
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 90 (src line 199)

	expr  goto 67
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29
	array_elems_opt  goto 186
	array_elems  goto 65
	array_elem  goto 66
	array_if  goto 68

state 177
	array_elifs:  array_elifs array_elif.    (99)

	.  reduce 99 (src line 218)


state 178
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kTHEN  shift 187
	.  error


state 179
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 188
	.  error


state 180
	object_else_opt:  object_else.    (85)

	.  reduce 85 (src line 189)


state 181
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (72)

	kIF  shift 76
	ID  shift 73
	'['  shift 74
	.  reduce 72 (src line 162)

	object_fields_opt  goto 189
	object_fields  goto 71
	object_field  goto 72
	object_if  goto 75

state 182
	object_elifs:  object_elifs object_elif.    (82)

	.  reduce 82 (src line 182)


state 183
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kTHEN  shift 190
	.  error


state 184
	elif:  kELIF expr kTHEN opt_stmts.    (20)

	.  reduce 20 (src line 83)


state 185
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (96)

	.  reduce 96 (src line 208)


state 186
	array_else:  kELSE array_elems_opt.    (104)

	.  reduce 104 (src line 228)


state 187
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (90)

	kFALSE  shift 26
	kIF  shift 69
	kNOT  shift 18
	kTRUE  shift 25
	kFN  shift 54
	NUMBER  shift 23
	STRING  shift 22
	ID  shift 24
	'+'  shift 19
	'-'  shift 20
	'('  shift 30
	'['  shift 31
	'{'  shift 32
	.  reduce 90 (src line 199)

	expr  goto 67
	bin_expr  goto 13
	unary_expr  goto 17
	primary_expr  goto 21
	array_literal  goto 27
	object_literal  goto 28
	func_expr  goto 29
	array_elems_opt  goto 191
	array_elems  goto 65
	array_elem  goto 66
	array_if  goto 68

state 188
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (79)

	.  reduce 79 (src line 172)


state 189
	object_else:  kELSE object_fields_opt.    (87)

	.  reduce 87 (src line 192)


state 190
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (72)

	kIF  shift 76
	ID  shift 73
	'['  shift 74
	.  reduce 72 (src line 162)

	object_fields_opt  goto 192
	object_fields  goto 71
	object_field  goto 72
	object_if  goto 75

state 191
	array_elif:  kELIF expr kTHEN array_elems_opt.    (101)

	.  reduce 101 (src line 221)


state 192
	object_elif:  kELIF expr kTHEN object_fields_opt.    (84)

	.  reduce 84 (src line 185)


46 terminals, 48 nonterminals
113 grammar rules, 193/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
97 working sets used
memory: parser 493/120000
115 extra closures
742 shift entries, 37 exceptions
107 goto entries
329 entries saved by goto default
Optimizer space used: output 334/120000
334 table entries, 59 zero
maximum spread: 46, maximum offset: 190
