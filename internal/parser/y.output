
state 0
	$accept: .program $end 
	opt_stmts: .    (3)

	kVAR  shift 11
	kFALSE  shift 23
	kFOR  shift 13
	kIF  shift 14
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	';'  shift 5
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 3 (src line 50)

	program  goto 1
	opt_stmts  goto 2
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_expr  goto 10
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  opt_stmts.    (1)

	.  reduce 1 (src line 47)


state 3
	opt_stmts:  stmts.    (2)
	stmts:  stmts.stmt ';' 
	stmts:  stmts.';' 

	kVAR  shift 11
	kFALSE  shift 23
	kFOR  shift 13
	kIF  shift 14
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	';'  shift 30
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 2 (src line 49)

	stmt  goto 29
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_expr  goto 10
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 4
	stmts:  stmt.';' 

	';'  shift 31
	.  error


state 5
	stmts:  ';'.    (7)

	.  reduce 7 (src line 55)


state 6
	stmt:  assignment_stmt.    (8)

	.  reduce 8 (src line 57)


state 7
	stmt:  var_decl_stmt.    (9)

	.  reduce 9 (src line 58)


state 8
	stmt:  expr.    (10)
	assignment_stmt:  expr.'=' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	'='  shift 32
	.  reduce 10 (src line 59)


state 9
	stmt:  for_stmt.    (11)

	.  reduce 11 (src line 60)


state 10
	stmt:  if_expr.    (12)

	.  reduce 12 (src line 61)


state 11
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 45
	.  error


state 12
	expr:  unary_expr.    (28)

	.  reduce 28 (src line 100)


state 13
	for_stmt:  kFOR.for_args kIN expr kDO opt_stmts kEND 

	ID  shift 47
	.  error

	for_args  goto 46

state 14
	if_expr:  kIF.expr kTHEN opt_stmts elifs_opt else_opt kEND 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 48
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 15
	unary_expr:  kNOT.unary_expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	unary_expr  goto 49
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 16
	unary_expr:  '+'.unary_expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	unary_expr  goto 50
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 17
	unary_expr:  '-'.unary_expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	unary_expr  goto 51
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 18
	unary_expr:  expr3.    (44)
	expr3:  expr3.'[' expr ']' 
	expr3:  expr3.'.' ID 
	expr3:  expr3.'(' ')' 

	'['  shift 52
	'.'  shift 53
	'('  shift 54
	.  reduce 44 (src line 117)


state 19
	expr3:  STRING.    (45)

	.  reduce 45 (src line 119)


state 20
	expr3:  NUMBER.    (46)

	.  reduce 46 (src line 120)


state 21
	expr3:  ID.    (47)

	.  reduce 47 (src line 121)


state 22
	expr3:  kTRUE.    (48)

	.  reduce 48 (src line 122)


state 23
	expr3:  kFALSE.    (49)

	.  reduce 49 (src line 123)


state 24
	expr3:  array_literal.    (50)

	.  reduce 50 (src line 124)


state 25
	expr3:  object_literal.    (51)

	.  reduce 51 (src line 125)


state 26
	expr3:  '('.expr ')' 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 55
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 27
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (76)

	kFALSE  shift 23
	kIF  shift 61
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 76 (src line 171)

	expr  goto 59
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25
	array_elems_opt  goto 56
	array_elems  goto 57
	array_elem  goto 58
	array_if  goto 60

state 28
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (58)

	kIF  shift 68
	ID  shift 65
	'['  shift 66
	.  reduce 58 (src line 134)

	object_fields_opt  goto 62
	object_fields  goto 63
	object_field  goto 64
	object_if  goto 67

state 29
	stmts:  stmts stmt.';' 

	';'  shift 69
	.  error


state 30
	stmts:  stmts ';'.    (5)

	.  reduce 5 (src line 53)


state 31
	stmts:  stmt ';'.    (6)

	.  reduce 6 (src line 54)


state 32
	assignment_stmt:  expr '='.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 70
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 33
	expr:  expr '+'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 71
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 34
	expr:  expr '-'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 72
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 35
	expr:  expr '*'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 73
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 36
	expr:  expr '/'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 74
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 37
	expr:  expr '<'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 75
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 38
	expr:  expr LE.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 76
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 39
	expr:  expr '>'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 77
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 40
	expr:  expr GE.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 78
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 41
	expr:  expr EQ.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 79
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 42
	expr:  expr NE.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 80
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 43
	expr:  expr kAND.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 81
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 44
	expr:  expr kOR.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 82
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 45
	var_decl_stmt:  kVAR ID.    (26)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 83
	.  reduce 26 (src line 97)


state 46
	for_stmt:  kFOR for_args.kIN expr kDO opt_stmts kEND 
	for_args:  for_args.',' ID 

	kIN  shift 84
	','  shift 85
	.  error


state 47
	for_args:  ID.    (24)

	.  reduce 24 (src line 93)


state 48
	if_expr:  kIF expr.kTHEN opt_stmts elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 86
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 49
	unary_expr:  kNOT unary_expr.    (41)

	.  reduce 41 (src line 114)


state 50
	unary_expr:  '+' unary_expr.    (42)

	.  reduce 42 (src line 115)


state 51
	unary_expr:  '-' unary_expr.    (43)

	.  reduce 43 (src line 116)


state 52
	expr3:  expr3 '['.expr ']' 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 87
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 53
	expr3:  expr3 '.'.ID 

	ID  shift 88
	.  error


state 54
	expr3:  expr3 '('.')' 

	')'  shift 89
	.  error


state 55
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr3:  '(' expr.')' 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	')'  shift 90
	.  error


state 56
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 91
	.  error


state 57
	array_elems_opt:  array_elems.trailing_seps 
	array_elems:  array_elems.',' array_elem 
	array_elems:  array_elems.';' array_elem 
	trailing_seps: .    (91)

	';'  shift 94
	','  shift 93
	.  reduce 91 (src line 204)

	trailing_seps  goto 92
	trailing_seps1  goto 95

state 58
	array_elems:  array_elem.    (79)

	.  reduce 79 (src line 175)


state 59
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elem:  expr.    (80)

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 80 (src line 177)


state 60
	array_elem:  array_if.    (81)

	.  reduce 81 (src line 178)


state 61
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 96
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 62
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 97
	.  error


state 63
	object_fields_opt:  object_fields.trailing_seps 
	object_fields:  object_fields.',' object_field 
	object_fields:  object_fields.';' object_field 
	trailing_seps: .    (91)

	';'  shift 100
	','  shift 99
	.  reduce 91 (src line 204)

	trailing_seps  goto 98
	trailing_seps1  goto 95

state 64
	object_fields:  object_field.    (61)

	.  reduce 61 (src line 138)


state 65
	object_field:  ID.':' expr 

	':'  shift 101
	.  error


state 66
	object_field:  '['.expr ']' ':' expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 102
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 67
	object_field:  object_if.    (64)

	.  reduce 64 (src line 142)


state 68
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 103
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 69
	stmts:  stmts stmt ';'.    (4)

	.  reduce 4 (src line 52)


state 70
	assignment_stmt:  expr '=' expr.    (25)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 25 (src line 95)


state 71
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (29)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 35
	'/'  shift 36
	.  reduce 29 (src line 101)


state 72
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (30)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 35
	'/'  shift 36
	.  reduce 30 (src line 102)


state 73
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (31)
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 31 (src line 103)


state 74
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (32)
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 32 (src line 104)


state 75
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (33)
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 33 (src line 105)


state 76
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (34)
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 34 (src line 106)


state 77
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr '>' expr.    (35)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 35 (src line 107)


state 78
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (36)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 36 (src line 108)


state 79
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (37)
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 37 (src line 109)


state 80
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (38)
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 38 (src line 110)


state 81
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr kAND expr.    (39)
	expr:  expr.kOR expr 

	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 39 (src line 111)


state 82
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr:  expr kOR expr.    (40)

	kAND  shift 43
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 40 (src line 112)


state 83
	var_decl_stmt:  kVAR ID '='.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 104
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 84
	for_stmt:  kFOR for_args kIN.expr kDO opt_stmts kEND 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 105
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 85
	for_args:  for_args ','.ID 

	ID  shift 106
	.  error


state 86
	if_expr:  kIF expr kTHEN.opt_stmts elifs_opt else_opt kEND 
	opt_stmts: .    (3)

	kVAR  shift 11
	kFALSE  shift 23
	kFOR  shift 13
	kIF  shift 14
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	';'  shift 5
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 3 (src line 50)

	opt_stmts  goto 107
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_expr  goto 10
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 87
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr3:  expr3 '[' expr.']' 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	']'  shift 108
	.  error


state 88
	expr3:  expr3 '.' ID.    (53)

	.  reduce 53 (src line 127)


state 89
	expr3:  expr3 '(' ')'.    (54)

	.  reduce 54 (src line 128)


state 90
	expr3:  '(' expr ')'.    (55)

	.  reduce 55 (src line 129)


state 91
	array_literal:  '[' array_elems_opt ']'.    (74)

	.  reduce 74 (src line 168)


state 92
	array_elems_opt:  array_elems trailing_seps.    (75)

	.  reduce 75 (src line 170)


state 93
	array_elems:  array_elems ','.array_elem 
	trailing_seps1:  ','.    (96)

	kFALSE  shift 23
	kIF  shift 61
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 96 (src line 209)

	expr  goto 59
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25
	array_elem  goto 109
	array_if  goto 60

state 94
	array_elems:  array_elems ';'.array_elem 
	trailing_seps1:  ';'.    (95)

	kFALSE  shift 23
	kIF  shift 61
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 95 (src line 208)

	expr  goto 59
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25
	array_elem  goto 110
	array_if  goto 60

state 95
	trailing_seps:  trailing_seps1.    (92)
	trailing_seps1:  trailing_seps1.';' 
	trailing_seps1:  trailing_seps1.',' 

	';'  shift 111
	','  shift 112
	.  reduce 92 (src line 204)


state 96
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 113
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 97
	object_literal:  '{' object_fields_opt '}'.    (56)

	.  reduce 56 (src line 131)


state 98
	object_fields_opt:  object_fields trailing_seps.    (57)

	.  reduce 57 (src line 133)


state 99
	object_fields:  object_fields ','.object_field 
	trailing_seps1:  ','.    (96)

	kIF  shift 68
	ID  shift 65
	'['  shift 66
	.  reduce 96 (src line 209)

	object_field  goto 114
	object_if  goto 67

state 100
	object_fields:  object_fields ';'.object_field 
	trailing_seps1:  ';'.    (95)

	kIF  shift 68
	ID  shift 65
	'['  shift 66
	.  reduce 95 (src line 208)

	object_field  goto 115
	object_if  goto 67

state 101
	object_field:  ID ':'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 116
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 102
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr.']' ':' expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	']'  shift 117
	.  error


state 103
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 118
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 104
	var_decl_stmt:  kVAR ID '=' expr.    (27)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 27 (src line 98)


state 105
	for_stmt:  kFOR for_args kIN expr.kDO opt_stmts kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kDO  shift 119
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 106
	for_args:  for_args ',' ID.    (23)

	.  reduce 23 (src line 92)


state 107
	if_expr:  kIF expr kTHEN opt_stmts.elifs_opt else_opt kEND 
	elifs_opt: .    (15)

	kELIF  shift 123
	.  reduce 15 (src line 71)

	elifs_opt  goto 120
	elifs  goto 121
	elif  goto 122

state 108
	expr3:  expr3 '[' expr ']'.    (52)

	.  reduce 52 (src line 126)


state 109
	array_elems:  array_elems ',' array_elem.    (77)

	.  reduce 77 (src line 173)


state 110
	array_elems:  array_elems ';' array_elem.    (78)

	.  reduce 78 (src line 174)


state 111
	trailing_seps1:  trailing_seps1 ';'.    (93)

	.  reduce 93 (src line 206)


state 112
	trailing_seps1:  trailing_seps1 ','.    (94)

	.  reduce 94 (src line 207)


state 113
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (76)

	kFALSE  shift 23
	kIF  shift 61
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 76 (src line 171)

	expr  goto 59
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25
	array_elems_opt  goto 124
	array_elems  goto 57
	array_elem  goto 58
	array_if  goto 60

state 114
	object_fields:  object_fields ',' object_field.    (59)

	.  reduce 59 (src line 136)


state 115
	object_fields:  object_fields ';' object_field.    (60)

	.  reduce 60 (src line 137)


state 116
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  ID ':' expr.    (62)

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 62 (src line 140)


state 117
	object_field:  '[' expr ']'.':' expr 

	':'  shift 125
	.  error


state 118
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (58)

	kIF  shift 68
	ID  shift 65
	'['  shift 66
	.  reduce 58 (src line 134)

	object_fields_opt  goto 126
	object_fields  goto 63
	object_field  goto 64
	object_if  goto 67

state 119
	for_stmt:  kFOR for_args kIN expr kDO.opt_stmts kEND 
	opt_stmts: .    (3)

	kVAR  shift 11
	kFALSE  shift 23
	kFOR  shift 13
	kIF  shift 14
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	';'  shift 5
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 3 (src line 50)

	opt_stmts  goto 127
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_expr  goto 10
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 120
	if_expr:  kIF expr kTHEN opt_stmts elifs_opt.else_opt kEND 
	else_opt: .    (20)

	kELSE  shift 130
	.  reduce 20 (src line 81)

	else_opt  goto 128
	else  goto 129

state 121
	elifs_opt:  elifs.    (14)
	elifs:  elifs.elif 

	kELIF  shift 123
	.  reduce 14 (src line 70)

	elif  goto 131

state 122
	elifs:  elif.    (17)

	.  reduce 17 (src line 74)


state 123
	elif:  kELIF.expr kTHEN opt_stmts 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 132
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 124
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (84)

	kELIF  shift 136
	.  reduce 84 (src line 188)

	array_elifs_opt  goto 133
	array_elifs  goto 134
	array_elif  goto 135

state 125
	object_field:  '[' expr ']' ':'.expr 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 137
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 126
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (67)

	kELIF  shift 141
	.  reduce 67 (src line 152)

	object_elifs_opt  goto 138
	object_elifs  goto 139
	object_elif  goto 140

state 127
	for_stmt:  kFOR for_args kIN expr kDO opt_stmts.kEND 

	kEND  shift 142
	.  error


state 128
	if_expr:  kIF expr kTHEN opt_stmts elifs_opt else_opt.kEND 

	kEND  shift 143
	.  error


state 129
	else_opt:  else.    (19)

	.  reduce 19 (src line 80)


state 130
	else:  kELSE.opt_stmts 
	opt_stmts: .    (3)

	kVAR  shift 11
	kFALSE  shift 23
	kFOR  shift 13
	kIF  shift 14
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	';'  shift 5
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 3 (src line 50)

	opt_stmts  goto 144
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_expr  goto 10
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 131
	elifs:  elifs elif.    (16)

	.  reduce 16 (src line 73)


state 132
	elif:  kELIF expr.kTHEN opt_stmts 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 145
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 133
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (89)

	kELSE  shift 148
	.  reduce 89 (src line 198)

	array_else_opt  goto 146
	array_else  goto 147

state 134
	array_elifs_opt:  array_elifs.    (83)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 136
	.  reduce 83 (src line 187)

	array_elif  goto 149

state 135
	array_elifs:  array_elif.    (86)

	.  reduce 86 (src line 191)


state 136
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 150
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 137
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr ']' ':' expr.    (63)

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 63 (src line 141)


state 138
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (72)

	kELSE  shift 153
	.  reduce 72 (src line 162)

	object_else_opt  goto 151
	object_else  goto 152

state 139
	object_elifs_opt:  object_elifs.    (66)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 141
	.  reduce 66 (src line 151)

	object_elif  goto 154

state 140
	object_elifs:  object_elif.    (69)

	.  reduce 69 (src line 155)


state 141
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kFALSE  shift 23
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  error

	expr  goto 155
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 142
	for_stmt:  kFOR for_args kIN expr kDO opt_stmts kEND.    (22)

	.  reduce 22 (src line 87)


state 143
	if_expr:  kIF expr kTHEN opt_stmts elifs_opt else_opt kEND.    (13)

	.  reduce 13 (src line 63)


state 144
	else:  kELSE opt_stmts.    (21)

	.  reduce 21 (src line 83)


state 145
	elif:  kELIF expr kTHEN.opt_stmts 
	opt_stmts: .    (3)

	kVAR  shift 11
	kFALSE  shift 23
	kFOR  shift 13
	kIF  shift 14
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	';'  shift 5
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 3 (src line 50)

	opt_stmts  goto 156
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 6
	var_decl_stmt  goto 7
	expr  goto 8
	for_stmt  goto 9
	if_expr  goto 10
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25

state 146
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 157
	.  error


state 147
	array_else_opt:  array_else.    (88)

	.  reduce 88 (src line 197)


state 148
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (76)

	kFALSE  shift 23
	kIF  shift 61
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 76 (src line 171)

	expr  goto 59
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25
	array_elems_opt  goto 158
	array_elems  goto 57
	array_elem  goto 58
	array_if  goto 60

state 149
	array_elifs:  array_elifs array_elif.    (85)

	.  reduce 85 (src line 190)


state 150
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 159
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 151
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 160
	.  error


state 152
	object_else_opt:  object_else.    (71)

	.  reduce 71 (src line 161)


state 153
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (58)

	kIF  shift 68
	ID  shift 65
	'['  shift 66
	.  reduce 58 (src line 134)

	object_fields_opt  goto 161
	object_fields  goto 63
	object_field  goto 64
	object_if  goto 67

state 154
	object_elifs:  object_elifs object_elif.    (68)

	.  reduce 68 (src line 154)


state 155
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 162
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 156
	elif:  kELIF expr kTHEN opt_stmts.    (18)

	.  reduce 18 (src line 76)


state 157
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (82)

	.  reduce 82 (src line 180)


state 158
	array_else:  kELSE array_elems_opt.    (90)

	.  reduce 90 (src line 200)


state 159
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (76)

	kFALSE  shift 23
	kIF  shift 61
	kNOT  shift 15
	kTRUE  shift 22
	NUMBER  shift 20
	STRING  shift 19
	ID  shift 21
	'+'  shift 16
	'-'  shift 17
	'['  shift 27
	'('  shift 26
	'{'  shift 28
	.  reduce 76 (src line 171)

	expr  goto 59
	unary_expr  goto 12
	expr3  goto 18
	array_literal  goto 24
	object_literal  goto 25
	array_elems_opt  goto 163
	array_elems  goto 57
	array_elem  goto 58
	array_if  goto 60

state 160
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (65)

	.  reduce 65 (src line 144)


state 161
	object_else:  kELSE object_fields_opt.    (73)

	.  reduce 73 (src line 164)


state 162
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (58)

	kIF  shift 68
	ID  shift 65
	'['  shift 66
	.  reduce 58 (src line 134)

	object_fields_opt  goto 164
	object_fields  goto 63
	object_field  goto 64
	object_if  goto 67

state 163
	array_elif:  kELIF expr kTHEN array_elems_opt.    (87)

	.  reduce 87 (src line 193)


state 164
	object_elif:  kELIF expr kTHEN object_fields_opt.    (70)

	.  reduce 70 (src line 157)


44 terminals, 40 nonterminals
97 grammar rules, 165/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
89 working sets used
memory: parser 346/120000
128 extra closures
787 shift entries, 37 exceptions
93 goto entries
213 entries saved by goto default
Optimizer space used: output 574/120000
574 table entries, 210 zero
maximum spread: 44, maximum offset: 162
