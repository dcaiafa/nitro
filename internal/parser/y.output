
state 0
	$accept: .S $end 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	module  goto 2
	stmts_opt  goto 3
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	S  goto 1

state 1
	$accept:  S.$end 

	$end  accept
	.  error


state 2
	S:  module.    (1)

	.  reduce 1 (src line 107)


state 3
	module:  stmts_opt.    (2)

	.  reduce 2 (src line 109)


state 4
	stmts_opt:  stmts.    (3)
	stmts:  stmts.stmt ';' 
	stmts:  stmts.';' 

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 39
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 3 (src line 117)

	stmt  goto 38
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 5
	stmts_opt:  stmt.    (4)
	stmts:  stmt.';' 

	';'  shift 40
	.  reduce 4 (src line 118)


state 6
	stmts:  ';'.    (9)

	.  reduce 9 (src line 124)


state 7
	stmt:  assignment_stmt.    (10)

	.  reduce 10 (src line 126)


state 8
	stmt:  var_decl_stmt.    (11)

	.  reduce 11 (src line 127)


state 9
	stmt:  for_stmt.    (12)

	.  reduce 12 (src line 128)


state 10
	stmt:  if_stmt.    (13)

	.  reduce 13 (src line 129)


state 11
	stmt:  func_stmt.    (14)

	.  reduce 14 (src line 130)


state 12
	stmt:  return_stmt.    (15)

	.  reduce 15 (src line 131)


state 13
	stmt:  while_stmt.    (16)

	.  reduce 16 (src line 132)


state 14
	stmt:  expr.    (17)
	assignment_stmt:  expr.'=' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	'='  shift 41
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 17 (src line 133)


state 15
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 55
	.  error


state 16
	for_stmt:  kFOR.for_vars kIN expr kDO stmts_opt kEND 

	ID  shift 57
	.  error

	for_vars  goto 56

state 17
	if_stmt:  kIF.expr kTHEN stmts_opt elifs_opt else_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 58
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 18
	func_stmt:  kFN.ID '(' param_list_opt ')' stmts_opt kEND 
	lambda_expr:  kFN.'(' param_list_opt ')' stmts_opt kEND 

	ID  shift 60
	'('  shift 61
	.  error


state 19
	return_stmt:  kRETURN.return_list 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	return_list  goto 62
	expr  goto 63
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 20
	while_stmt:  kWHILE.expr kDO stmts_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 64
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 21
	expr:  unary_expr.    (38)

	.  reduce 38 (src line 267)


state 22
	unary_expr:  kNOT.unary_expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	unary_expr  goto 65
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 23
	unary_expr:  '+'.unary_expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	unary_expr  goto 66
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 24
	unary_expr:  '-'.unary_expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	unary_expr  goto 67
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 25
	unary_expr:  primary_expr.    (55)
	primary_expr:  primary_expr.'.' ID 
	primary_expr:  primary_expr.'(' arg_list_opt ')' 
	index_expr:  primary_expr.'[' expr ']' 
	index_expr:  primary_expr.'[' expr ':' ']' 
	index_expr:  primary_expr.'[' ':' expr ']' 
	index_expr:  primary_expr.'[' expr ':' expr ']' 

	'('  shift 69
	'['  shift 70
	'.'  shift 68
	.  reduce 55 (src line 349)


state 26
	primary_expr:  STRING.    (56)

	.  reduce 56 (src line 351)


state 27
	primary_expr:  NUMBER.    (57)

	.  reduce 57 (src line 356)


state 28
	primary_expr:  ID.    (58)

	.  reduce 58 (src line 361)


state 29
	primary_expr:  kTRUE.    (59)

	.  reduce 59 (src line 366)


state 30
	primary_expr:  kFALSE.    (60)

	.  reduce 60 (src line 371)


state 31
	primary_expr:  '('.expr ')' 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 71
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 32
	primary_expr:  index_expr.    (64)

	.  reduce 64 (src line 390)


state 33
	primary_expr:  lambda_expr.    (65)

	.  reduce 65 (src line 391)


state 34
	primary_expr:  array_literal.    (66)

	.  reduce 66 (src line 392)


state 35
	primary_expr:  object_literal.    (67)

	.  reduce 67 (src line 393)


state 36
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (103)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 103 (src line 563)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elems_opt  goto 72
	array_elems  goto 73
	array_elem  goto 74
	array_if  goto 76
	array_for  goto 77

state 37
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (83)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 83 (src line 467)

	object_fields_opt  goto 80
	object_fields  goto 81
	object_field  goto 82
	object_if  goto 85
	object_for  goto 86

state 38
	stmts:  stmts stmt.';' 

	';'  shift 89
	.  error


state 39
	stmts:  stmts ';'.    (7)

	.  reduce 7 (src line 122)


state 40
	stmts:  stmt ';'.    (8)

	.  reduce 8 (src line 123)


state 41
	assignment_stmt:  expr '='.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 90
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 42
	expr:  expr '+'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 91
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 43
	expr:  expr '-'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 92
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 44
	expr:  expr '*'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 93
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 45
	expr:  expr '/'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 94
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 46
	expr:  expr '%'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 95
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 47
	expr:  expr '<'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 96
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 48
	expr:  expr LE.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 97
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 49
	expr:  expr '>'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 98
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 50
	expr:  expr GE.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 99
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 51
	expr:  expr EQ.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 100
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 52
	expr:  expr NE.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 101
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 53
	expr:  expr kAND.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 102
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 54
	expr:  expr kOR.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 103
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 55
	var_decl_stmt:  kVAR ID.    (36)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 104
	.  reduce 36 (src line 256)


state 56
	for_stmt:  kFOR for_vars.kIN expr kDO stmts_opt kEND 
	for_vars:  for_vars.',' ID 

	kIN  shift 105
	','  shift 106
	.  error


state 57
	for_vars:  ID.    (34)

	.  reduce 34 (src line 242)


state 58
	if_stmt:  kIF expr.kTHEN stmts_opt elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	kTHEN  shift 107
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 59
	lambda_expr:  kFN.'(' param_list_opt ')' stmts_opt kEND 

	'('  shift 61
	.  error


state 60
	func_stmt:  kFN ID.'(' param_list_opt ')' stmts_opt kEND 

	'('  shift 108
	.  error


state 61
	lambda_expr:  kFN '('.param_list_opt ')' stmts_opt kEND 
	param_list_opt: .    (74)

	ID  shift 111
	.  reduce 74 (src line 428)

	param_list_opt  goto 109
	param_list  goto 110

state 62
	return_stmt:  kRETURN return_list.    (19)
	return_list:  return_list.',' expr 

	','  shift 112
	.  reduce 19 (src line 147)


state 63
	return_list:  expr.    (21)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 21 (src line 158)


state 64
	while_stmt:  kWHILE expr.kDO stmts_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kDO  shift 113
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 65
	unary_expr:  kNOT unary_expr.    (52)

	.  reduce 52 (src line 334)


state 66
	unary_expr:  '+' unary_expr.    (53)

	.  reduce 53 (src line 339)


state 67
	unary_expr:  '-' unary_expr.    (54)

	.  reduce 54 (src line 344)


state 68
	primary_expr:  primary_expr '.'.ID 

	ID  shift 114
	.  error


state 69
	primary_expr:  primary_expr '('.arg_list_opt ')' 
	arg_list_opt: .    (78)

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 78 (src line 446)

	expr  goto 117
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	arg_list_opt  goto 115
	arg_list  goto 116
	object_literal  goto 35
	array_literal  goto 34

state 70
	index_expr:  primary_expr '['.expr ']' 
	index_expr:  primary_expr '['.expr ':' ']' 
	index_expr:  primary_expr '['.':' expr ']' 
	index_expr:  primary_expr '['.expr ':' expr ']' 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	':'  shift 119
	'{'  shift 37
	.  error

	expr  goto 118
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 71
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	primary_expr:  '(' expr.')' 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	')'  shift 120
	'%'  shift 46
	.  error


state 72
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 121
	.  error


state 73
	array_elems_opt:  array_elems.trailing_seps 
	array_elems:  array_elems.',' array_elem 
	array_elems:  array_elems.';' array_elem 
	trailing_seps: .    (121)

	';'  shift 124
	','  shift 123
	.  reduce 121 (src line 650)

	trailing_seps  goto 122
	trailing_seps1  goto 125

state 74
	array_elems:  array_elem.    (106)

	.  reduce 106 (src line 576)


state 75
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elem:  expr.    (107)

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 107 (src line 581)


state 76
	array_elem:  array_if.    (108)

	.  reduce 108 (src line 586)


state 77
	array_elem:  array_for.    (109)

	.  reduce 109 (src line 587)


state 78
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 126
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 79
	array_for:  kFOR.for_vars kIN expr kDO array_elems_opt kEND 

	ID  shift 57
	.  error

	for_vars  goto 127

state 80
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 128
	.  error


state 81
	object_fields_opt:  object_fields.trailing_seps 
	object_fields:  object_fields.',' object_field 
	object_fields:  object_fields.';' object_field 
	trailing_seps: .    (121)

	';'  shift 131
	','  shift 130
	.  reduce 121 (src line 650)

	trailing_seps  goto 129
	trailing_seps1  goto 125

state 82
	object_fields:  object_field.    (86)

	.  reduce 86 (src line 480)


state 83
	object_field:  ID.':' expr 

	':'  shift 132
	.  error


state 84
	object_field:  '['.expr ']' ':' expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 133
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 85
	object_field:  object_if.    (89)

	.  reduce 89 (src line 493)


state 86
	object_field:  object_for.    (90)

	.  reduce 90 (src line 494)


state 87
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 134
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 88
	object_for:  kFOR.for_vars kIN expr kDO object_fields_opt kEND 

	ID  shift 57
	.  error

	for_vars  goto 135

state 89
	stmts:  stmts stmt ';'.    (6)

	.  reduce 6 (src line 121)


state 90
	assignment_stmt:  expr '=' expr.    (35)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 35 (src line 248)


state 91
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (39)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 39 (src line 268)


state 92
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (40)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 40 (src line 273)


state 93
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (41)
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 41 (src line 278)


state 94
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (42)
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 42 (src line 283)


state 95
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (43)
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 43 (src line 288)


state 96
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (44)
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 44 (src line 293)


state 97
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (45)
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 45 (src line 298)


state 98
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr '>' expr.    (46)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 46 (src line 303)


state 99
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (47)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 47 (src line 308)


state 100
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (48)
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 48 (src line 313)


state 101
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (49)
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 49 (src line 318)


state 102
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr kAND expr.    (50)
	expr:  expr.kOR expr 

	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 50 (src line 323)


state 103
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr:  expr kOR expr.    (51)

	kAND  shift 53
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 51 (src line 328)


state 104
	var_decl_stmt:  kVAR ID '='.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 136
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 105
	for_stmt:  kFOR for_vars kIN.expr kDO stmts_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 137
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 106
	for_vars:  for_vars ','.ID 

	ID  shift 138
	.  error


state 107
	if_stmt:  kIF expr kTHEN.stmts_opt elifs_opt else_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 139
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 108
	func_stmt:  kFN ID '('.param_list_opt ')' stmts_opt kEND 
	param_list_opt: .    (74)

	ID  shift 111
	.  reduce 74 (src line 428)

	param_list_opt  goto 140
	param_list  goto 110

state 109
	lambda_expr:  kFN '(' param_list_opt.')' stmts_opt kEND 

	')'  shift 141
	.  error


state 110
	param_list_opt:  param_list.    (73)
	param_list:  param_list.',' ID 

	','  shift 142
	.  reduce 73 (src line 427)


state 111
	param_list:  ID.    (76)

	.  reduce 76 (src line 439)


state 112
	return_list:  return_list ','.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 143
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 113
	while_stmt:  kWHILE expr kDO.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 144
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 114
	primary_expr:  primary_expr '.' ID.    (61)

	.  reduce 61 (src line 376)


state 115
	primary_expr:  primary_expr '(' arg_list_opt.')' 

	')'  shift 145
	.  error


state 116
	arg_list_opt:  arg_list.trailing_comma 
	arg_list:  arg_list.',' expr 
	trailing_comma: .    (127)

	','  shift 147
	.  reduce 127 (src line 657)

	trailing_comma  goto 146

state 117
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	arg_list:  expr.    (80)

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 80 (src line 455)


state 118
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	index_expr:  primary_expr '[' expr.']' 
	index_expr:  primary_expr '[' expr.':' ']' 
	index_expr:  primary_expr '[' expr.':' expr ']' 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	':'  shift 149
	']'  shift 148
	'%'  shift 46
	.  error


state 119
	index_expr:  primary_expr '[' ':'.expr ']' 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 150
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 120
	primary_expr:  '(' expr ')'.    (63)

	.  reduce 63 (src line 386)


state 121
	array_literal:  '[' array_elems_opt ']'.    (101)

	.  reduce 101 (src line 557)


state 122
	array_elems_opt:  array_elems trailing_seps.    (102)

	.  reduce 102 (src line 562)


state 123
	array_elems:  array_elems ','.array_elem 
	trailing_seps1:  ','.    (125)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 125 (src line 655)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elem  goto 151
	array_if  goto 76
	array_for  goto 77

state 124
	array_elems:  array_elems ';'.array_elem 
	trailing_seps1:  ';'.    (124)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 124 (src line 654)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elem  goto 152
	array_if  goto 76
	array_for  goto 77

state 125
	trailing_seps:  trailing_seps1.    (120)
	trailing_seps1:  trailing_seps1.';' 
	trailing_seps1:  trailing_seps1.',' 

	';'  shift 153
	','  shift 154
	.  reduce 120 (src line 650)


state 126
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kAND  shift 53
	kOR  shift 54
	kTHEN  shift 155
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 127
	for_vars:  for_vars.',' ID 
	array_for:  kFOR for_vars.kIN expr kDO array_elems_opt kEND 

	kIN  shift 156
	','  shift 106
	.  error


state 128
	object_literal:  '{' object_fields_opt '}'.    (81)

	.  reduce 81 (src line 460)


state 129
	object_fields_opt:  object_fields trailing_seps.    (82)

	.  reduce 82 (src line 466)


state 130
	object_fields:  object_fields ','.object_field 
	trailing_seps1:  ','.    (125)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 125 (src line 655)

	object_field  goto 157
	object_if  goto 85
	object_for  goto 86

state 131
	object_fields:  object_fields ';'.object_field 
	trailing_seps1:  ';'.    (124)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 124 (src line 654)

	object_field  goto 158
	object_if  goto 85
	object_for  goto 86

state 132
	object_field:  ID ':'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 159
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 133
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr.']' ':' expr 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	']'  shift 160
	'%'  shift 46
	.  error


state 134
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kAND  shift 53
	kOR  shift 54
	kTHEN  shift 161
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 135
	for_vars:  for_vars.',' ID 
	object_for:  kFOR for_vars.kIN expr kDO object_fields_opt kEND 

	kIN  shift 162
	','  shift 106
	.  error


state 136
	var_decl_stmt:  kVAR ID '=' expr.    (37)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 37 (src line 261)


state 137
	for_stmt:  kFOR for_vars kIN expr.kDO stmts_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kDO  shift 163
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 138
	for_vars:  for_vars ',' ID.    (33)

	.  reduce 33 (src line 238)


state 139
	if_stmt:  kIF expr kTHEN stmts_opt.elifs_opt else_opt kEND 
	elifs_opt: .    (25)

	kELIF  shift 167
	.  reduce 25 (src line 195)

	elifs_opt  goto 164
	elifs  goto 165
	elif  goto 166

state 140
	func_stmt:  kFN ID '(' param_list_opt.')' stmts_opt kEND 

	')'  shift 168
	.  error


state 141
	lambda_expr:  kFN '(' param_list_opt ')'.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 169
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 142
	param_list:  param_list ','.ID 

	ID  shift 170
	.  error


state 143
	return_list:  return_list ',' expr.    (20)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 20 (src line 153)


state 144
	while_stmt:  kWHILE expr kDO stmts_opt.kEND 

	kEND  shift 171
	.  error


state 145
	primary_expr:  primary_expr '(' arg_list_opt ')'.    (62)

	.  reduce 62 (src line 381)


state 146
	arg_list_opt:  arg_list trailing_comma.    (77)

	.  reduce 77 (src line 445)


state 147
	arg_list:  arg_list ','.expr 
	trailing_comma:  ','.    (126)

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 126 (src line 657)

	expr  goto 172
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 148
	index_expr:  primary_expr '[' expr ']'.    (68)

	.  reduce 68 (src line 395)


state 149
	index_expr:  primary_expr '[' expr ':'.']' 
	index_expr:  primary_expr '[' expr ':'.expr ']' 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	']'  shift 173
	.  error

	expr  goto 174
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 150
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	index_expr:  primary_expr '[' ':' expr.']' 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	']'  shift 175
	'%'  shift 46
	.  error


state 151
	array_elems:  array_elems ',' array_elem.    (104)

	.  reduce 104 (src line 568)


state 152
	array_elems:  array_elems ';' array_elem.    (105)

	.  reduce 105 (src line 572)


state 153
	trailing_seps1:  trailing_seps1 ';'.    (122)

	.  reduce 122 (src line 652)


state 154
	trailing_seps1:  trailing_seps1 ','.    (123)

	.  reduce 123 (src line 653)


state 155
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (103)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 103 (src line 563)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elems_opt  goto 176
	array_elems  goto 73
	array_elem  goto 74
	array_if  goto 76
	array_for  goto 77

state 156
	array_for:  kFOR for_vars kIN.expr kDO array_elems_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 177
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 157
	object_fields:  object_fields ',' object_field.    (84)

	.  reduce 84 (src line 472)


state 158
	object_fields:  object_fields ';' object_field.    (85)

	.  reduce 85 (src line 476)


state 159
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  ID ':' expr.    (87)

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 87 (src line 485)


state 160
	object_field:  '[' expr ']'.':' expr 

	':'  shift 178
	.  error


state 161
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (83)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 83 (src line 467)

	object_fields_opt  goto 179
	object_fields  goto 81
	object_field  goto 82
	object_if  goto 85
	object_for  goto 86

state 162
	object_for:  kFOR for_vars kIN.expr kDO object_fields_opt kEND 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 180
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 163
	for_stmt:  kFOR for_vars kIN expr kDO.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 181
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 164
	if_stmt:  kIF expr kTHEN stmts_opt elifs_opt.else_opt kEND 
	else_opt: .    (30)

	kELSE  shift 184
	.  reduce 30 (src line 218)

	else_opt  goto 182
	else  goto 183

state 165
	elifs_opt:  elifs.    (24)
	elifs:  elifs.elif 

	kELIF  shift 167
	.  reduce 24 (src line 194)

	elif  goto 185

state 166
	elifs:  elif.    (27)

	.  reduce 27 (src line 205)


state 167
	elif:  kELIF.expr kTHEN stmts_opt 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 186
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 168
	func_stmt:  kFN ID '(' param_list_opt ')'.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 187
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 169
	lambda_expr:  kFN '(' param_list_opt ')' stmts_opt.kEND 

	kEND  shift 188
	.  error


state 170
	param_list:  param_list ',' ID.    (75)

	.  reduce 75 (src line 433)


state 171
	while_stmt:  kWHILE expr kDO stmts_opt kEND.    (18)

	.  reduce 18 (src line 139)


state 172
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	arg_list:  arg_list ',' expr.    (79)

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 79 (src line 451)


state 173
	index_expr:  primary_expr '[' expr ':' ']'.    (69)

	.  reduce 69 (src line 400)


state 174
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	index_expr:  primary_expr '[' expr ':' expr.']' 

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	']'  shift 189
	'%'  shift 46
	.  error


state 175
	index_expr:  primary_expr '[' ':' expr ']'.    (70)

	.  reduce 70 (src line 405)


state 176
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (113)

	kELIF  shift 193
	.  reduce 113 (src line 616)

	array_elifs_opt  goto 190
	array_elifs  goto 191
	array_elif  goto 192

state 177
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_for:  kFOR for_vars kIN expr.kDO array_elems_opt kEND 

	kAND  shift 53
	kDO  shift 194
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 178
	object_field:  '[' expr ']' ':'.expr 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 195
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 179
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (94)

	kELIF  shift 199
	.  reduce 94 (src line 523)

	object_elifs_opt  goto 196
	object_elifs  goto 197
	object_elif  goto 198

state 180
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_for:  kFOR for_vars kIN expr.kDO object_fields_opt kEND 

	kAND  shift 53
	kDO  shift 200
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 181
	for_stmt:  kFOR for_vars kIN expr kDO stmts_opt.kEND 

	kEND  shift 201
	.  error


state 182
	if_stmt:  kIF expr kTHEN stmts_opt elifs_opt else_opt.kEND 

	kEND  shift 202
	.  error


state 183
	else_opt:  else.    (29)

	.  reduce 29 (src line 217)


state 184
	else:  kELSE.stmts_opt 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 203
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 185
	elifs:  elifs elif.    (26)

	.  reduce 26 (src line 200)


state 186
	elif:  kELIF expr.kTHEN stmts_opt 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 53
	kOR  shift 54
	kTHEN  shift 204
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 187
	func_stmt:  kFN ID '(' param_list_opt ')' stmts_opt.kEND 

	kEND  shift 205
	.  error


state 188
	lambda_expr:  kFN '(' param_list_opt ')' stmts_opt kEND.    (72)

	.  reduce 72 (src line 416)


state 189
	index_expr:  primary_expr '[' expr ':' expr ']'.    (71)

	.  reduce 71 (src line 410)


state 190
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (118)

	kELSE  shift 208
	.  reduce 118 (src line 638)

	array_else_opt  goto 206
	array_else  goto 207

state 191
	array_elifs_opt:  array_elifs.    (112)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 193
	.  reduce 112 (src line 615)

	array_elif  goto 209

state 192
	array_elifs:  array_elif.    (115)

	.  reduce 115 (src line 625)


state 193
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 210
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 194
	array_for:  kFOR for_vars kIN expr kDO.array_elems_opt kEND 
	array_elems_opt: .    (103)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 103 (src line 563)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elems_opt  goto 211
	array_elems  goto 73
	array_elem  goto 74
	array_if  goto 76
	array_for  goto 77

state 195
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr ']' ':' expr.    (88)

	kAND  shift 53
	kOR  shift 54
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  reduce 88 (src line 489)


state 196
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (99)

	kELSE  shift 214
	.  reduce 99 (src line 545)

	object_else_opt  goto 212
	object_else  goto 213

state 197
	object_elifs_opt:  object_elifs.    (93)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 199
	.  reduce 93 (src line 522)

	object_elif  goto 215

state 198
	object_elifs:  object_elif.    (96)

	.  reduce 96 (src line 532)


state 199
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kFALSE  shift 30
	kFN  shift 59
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  error

	expr  goto 216
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 200
	object_for:  kFOR for_vars kIN expr kDO.object_fields_opt kEND 
	object_fields_opt: .    (83)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 83 (src line 467)

	object_fields_opt  goto 217
	object_fields  goto 81
	object_field  goto 82
	object_if  goto 85
	object_for  goto 86

state 201
	for_stmt:  kFOR for_vars kIN expr kDO stmts_opt kEND.    (32)

	.  reduce 32 (src line 230)


state 202
	if_stmt:  kIF expr kTHEN stmts_opt elifs_opt else_opt kEND.    (23)

	.  reduce 23 (src line 176)


state 203
	else:  kELSE stmts_opt.    (31)

	.  reduce 31 (src line 223)


state 204
	elif:  kELIF expr kTHEN.stmts_opt 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 5 (src line 119)

	stmts_opt  goto 218
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34

state 205
	func_stmt:  kFN ID '(' param_list_opt ')' stmts_opt kEND.    (22)

	.  reduce 22 (src line 164)


state 206
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 219
	.  error


state 207
	array_else_opt:  array_else.    (117)

	.  reduce 117 (src line 637)


state 208
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (103)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 103 (src line 563)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elems_opt  goto 220
	array_elems  goto 73
	array_elem  goto 74
	array_if  goto 76
	array_for  goto 77

state 209
	array_elifs:  array_elifs array_elif.    (114)

	.  reduce 114 (src line 621)


state 210
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kAND  shift 53
	kOR  shift 54
	kTHEN  shift 221
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 211
	array_for:  kFOR for_vars kIN expr kDO array_elems_opt.kEND 

	kEND  shift 222
	.  error


state 212
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 223
	.  error


state 213
	object_else_opt:  object_else.    (98)

	.  reduce 98 (src line 544)


state 214
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (83)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 83 (src line 467)

	object_fields_opt  goto 224
	object_fields  goto 81
	object_field  goto 82
	object_if  goto 85
	object_for  goto 86

state 215
	object_elifs:  object_elifs object_elif.    (95)

	.  reduce 95 (src line 528)


state 216
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kAND  shift 53
	kOR  shift 54
	kTHEN  shift 225
	EQ  shift 51
	NE  shift 52
	'<'  shift 47
	LE  shift 48
	'>'  shift 49
	GE  shift 50
	'+'  shift 42
	'-'  shift 43
	'*'  shift 44
	'/'  shift 45
	'%'  shift 46
	.  error


state 217
	object_for:  kFOR for_vars kIN expr kDO object_fields_opt.kEND 

	kEND  shift 226
	.  error


state 218
	elif:  kELIF expr kTHEN stmts_opt.    (28)

	.  reduce 28 (src line 210)


state 219
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (110)

	.  reduce 110 (src line 589)


state 220
	array_else:  kELSE array_elems_opt.    (119)

	.  reduce 119 (src line 643)


state 221
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (103)

	kFALSE  shift 30
	kFN  shift 59
	kFOR  shift 79
	kIF  shift 78
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 36
	'{'  shift 37
	.  reduce 103 (src line 563)

	expr  goto 75
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 33
	index_expr  goto 32
	object_literal  goto 35
	array_literal  goto 34
	array_elems_opt  goto 227
	array_elems  goto 73
	array_elem  goto 74
	array_if  goto 76
	array_for  goto 77

state 222
	array_for:  kFOR for_vars kIN expr kDO array_elems_opt kEND.    (111)

	.  reduce 111 (src line 607)


state 223
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (91)

	.  reduce 91 (src line 496)


state 224
	object_else:  kELSE object_fields_opt.    (100)

	.  reduce 100 (src line 550)


state 225
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (83)

	kFOR  shift 88
	kIF  shift 87
	ID  shift 83
	'['  shift 84
	.  reduce 83 (src line 467)

	object_fields_opt  goto 228
	object_fields  goto 81
	object_field  goto 82
	object_if  goto 85
	object_for  goto 86

state 226
	object_for:  kFOR for_vars kIN expr kDO object_fields_opt kEND.    (92)

	.  reduce 92 (src line 514)


state 227
	array_elif:  kELIF expr kTHEN array_elems_opt.    (116)

	.  reduce 116 (src line 630)


state 228
	object_elif:  kELIF expr kTHEN object_fields_opt.    (97)

	.  reduce 97 (src line 537)


48 terminals, 54 nonterminals
128 grammar rules, 229/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
103 working sets used
memory: parser 821/120000
183 extra closures
1218 shift entries, 37 exceptions
126 goto entries
441 entries saved by goto default
Optimizer space used: output 842/120000
842 table entries, 302 zero
maximum spread: 48, maximum offset: 225
