
state 0
	$accept: .program $end 

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	program  goto 1
	stmts  goto 2
	stmt  goto 3
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  stmts.    (1)
	stmts:  stmts.stmt 

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 1 (src line 47)

	stmt  goto 21
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 3
	stmts:  stmt.    (3)

	.  reduce 3 (src line 50)


state 4
	stmt:  object_literal_stmt.    (6)

	.  reduce 6 (src line 55)


state 5
	stmt:  assignment_stmt.    (7)

	.  reduce 7 (src line 56)


state 6
	stmt:  var_decl_stmt.    (8)

	.  reduce 8 (src line 57)


state 7
	stmt:  if_stmt.    (9)

	.  reduce 9 (src line 58)


state 8
	stmt:  for_stmt.    (10)

	.  reduce 10 (src line 59)


state 9
	object_literal_stmt:  object_literal.    (23)
	term_no_number:  object_literal.    (50)

	'.'  reduce 50 (src line 128)
	.  reduce 23 (src line 93)


state 10
	assignment_stmt:  symbol_ref.'=' expr 
	term_no_number:  symbol_ref.    (51)

	'='  shift 22
	.  reduce 51 (src line 129)


state 11
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 23
	.  error


state 12
	if_stmt:  kIF.expr kTHEN stmts elifs_opt else_opt kEND 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 24
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 13
	for_stmt:  kFOR.for_args kIN expr kDO stmts kEND 

	ID  shift 35
	.  error

	for_args  goto 34

state 14
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (55)

	kIF  shift 42
	ID  shift 39
	'['  shift 40
	.  reduce 55 (src line 137)

	object_fields_opt  goto 36
	object_fields  goto 37
	object_field  goto 38
	object_if  goto 41

state 15
	symbol_ref:  term_no_number.'.' ID 

	'.'  shift 43
	.  error


state 16
	symbol_ref:  ID.    (41)

	.  reduce 41 (src line 115)


state 17
	term_no_number:  STRING.    (48)

	.  reduce 48 (src line 126)


state 18
	term_no_number:  array_literal.    (49)

	.  reduce 49 (src line 127)


state 19
	term_no_number:  '('.expr ')' 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 44
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 20
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (73)

	kIF  shift 50
	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 73 (src line 174)

	expr  goto 47
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18
	array_elems_opt  goto 45
	array_elems  goto 46
	array_elem  goto 48
	array_if  goto 49

state 21
	stmts:  stmts stmt.    (2)

	.  reduce 2 (src line 49)


state 22
	assignment_stmt:  symbol_ref '='.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 51
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 23
	var_decl_stmt:  kVAR ID.    (25)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 52
	.  reduce 25 (src line 97)


state 24
	if_stmt:  kIF expr.kTHEN stmts elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 64
	kOR  shift 65
	kTHEN  shift 53
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 25
	expr:  unary_expr.    (27)

	.  reduce 27 (src line 100)


state 26
	unary_expr:  kNOT.term 

	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	object_literal  goto 32
	symbol_ref  goto 33
	term_no_number  goto 29
	term  goto 66
	number  goto 28
	array_literal  goto 18

state 27
	unary_expr:  term.    (43)

	.  reduce 43 (src line 118)


state 28
	term:  number.    (44)

	.  reduce 44 (src line 120)


state 29
	symbol_ref:  term_no_number.'.' ID 
	term:  term_no_number.    (45)

	'.'  shift 43
	.  reduce 45 (src line 121)


state 30
	number:  '-'.NUMBER 

	NUMBER  shift 67
	.  error


state 31
	number:  NUMBER.    (47)

	.  reduce 47 (src line 124)


state 32
	term_no_number:  object_literal.    (50)

	.  reduce 50 (src line 128)


state 33
	term_no_number:  symbol_ref.    (51)

	.  reduce 51 (src line 129)


state 34
	for_stmt:  kFOR for_args.kIN expr kDO stmts kEND 
	for_args:  for_args.',' ID 

	kIN  shift 68
	','  shift 69
	.  error


state 35
	for_args:  ID.    (22)

	.  reduce 22 (src line 91)


state 36
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 70
	.  error


state 37
	object_fields_opt:  object_fields.    (54)
	object_fields:  object_fields.object_field 

	kIF  shift 42
	ID  shift 39
	'['  shift 40
	.  reduce 54 (src line 136)

	object_field  goto 71
	object_if  goto 41

state 38
	object_fields:  object_field.    (57)

	.  reduce 57 (src line 140)


state 39
	object_field:  ID.':' expr comma_opt 

	':'  shift 72
	.  error


state 40
	object_field:  '['.expr ']' ':' expr comma_opt 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 73
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 41
	object_field:  object_if.comma_opt 
	comma_opt: .    (5)

	','  shift 75
	.  reduce 5 (src line 53)

	comma_opt  goto 74

state 42
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 76
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 43
	symbol_ref:  term_no_number '.'.ID 

	ID  shift 77
	.  error


state 44
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	term_no_number:  '(' expr.')' 

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	')'  shift 78
	.  error


state 45
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 79
	.  error


state 46
	array_elems_opt:  array_elems.expr_opt 
	array_elems:  array_elems.array_elem 
	expr_opt: .    (80)

	kIF  shift 50
	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 80 (src line 190)

	expr  goto 82
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18
	expr_opt  goto 80
	array_elem  goto 81
	array_if  goto 49

state 47
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elems_opt:  expr.    (72)
	array_elem:  expr.',' 

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	','  shift 83
	.  reduce 72 (src line 173)


state 48
	array_elems:  array_elem.    (75)

	.  reduce 75 (src line 177)


state 49
	array_elem:  array_if.    (77)

	.  reduce 77 (src line 180)


state 50
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 84
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 51
	assignment_stmt:  symbol_ref '=' expr.    (24)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 24 (src line 95)


state 52
	var_decl_stmt:  kVAR ID '='.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 85
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 53
	if_stmt:  kIF expr kTHEN.stmts elifs_opt else_opt kEND 

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	stmts  goto 86
	stmt  goto 3
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 54
	expr:  expr '+'.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 87
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 55
	expr:  expr '-'.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 88
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 56
	expr:  expr '*'.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 89
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 57
	expr:  expr '/'.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 90
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 58
	expr:  expr '<'.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 91
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 59
	expr:  expr LE.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 92
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 60
	expr:  expr '>'.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 93
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 61
	expr:  expr GE.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 94
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 62
	expr:  expr EQ.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 95
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 63
	expr:  expr NE.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 96
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 64
	expr:  expr kAND.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 97
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 65
	expr:  expr kOR.expr 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 98
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 66
	unary_expr:  kNOT term.    (42)

	.  reduce 42 (src line 117)


state 67
	number:  '-' NUMBER.    (46)

	.  reduce 46 (src line 123)


state 68
	for_stmt:  kFOR for_args kIN.expr kDO stmts kEND 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 99
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 69
	for_args:  for_args ','.ID 

	ID  shift 100
	.  error


state 70
	object_literal:  '{' object_fields_opt '}'.    (53)

	.  reduce 53 (src line 134)


state 71
	object_fields:  object_fields object_field.    (56)

	.  reduce 56 (src line 139)


state 72
	object_field:  ID ':'.expr comma_opt 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 101
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 73
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr.']' ':' expr comma_opt 

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	']'  shift 102
	.  error


state 74
	object_field:  object_if comma_opt.    (60)

	.  reduce 60 (src line 144)


state 75
	comma_opt:  ','.    (4)

	.  reduce 4 (src line 52)


state 76
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kAND  shift 64
	kOR  shift 65
	kTHEN  shift 103
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 77
	symbol_ref:  term_no_number '.' ID.    (40)

	.  reduce 40 (src line 114)


state 78
	term_no_number:  '(' expr ')'.    (52)

	.  reduce 52 (src line 130)


state 79
	array_literal:  '[' array_elems_opt ']'.    (70)

	.  reduce 70 (src line 170)


state 80
	array_elems_opt:  array_elems expr_opt.    (71)

	.  reduce 71 (src line 172)


state 81
	array_elems:  array_elems array_elem.    (74)

	.  reduce 74 (src line 176)


state 82
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elem:  expr.',' 
	expr_opt:  expr.    (79)

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	','  shift 83
	.  reduce 79 (src line 189)


state 83
	array_elem:  expr ','.    (76)

	.  reduce 76 (src line 179)


state 84
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kAND  shift 64
	kOR  shift 65
	kTHEN  shift 104
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 85
	var_decl_stmt:  kVAR ID '=' expr.    (26)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 26 (src line 98)


state 86
	stmts:  stmts.stmt 
	if_stmt:  kIF expr kTHEN stmts.elifs_opt else_opt kEND 
	elifs_opt: .    (13)

	kVAR  shift 11
	kELIF  shift 108
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 13 (src line 69)

	stmt  goto 21
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	elifs_opt  goto 105
	elifs  goto 106
	elif  goto 107
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 87
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (28)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 56
	'/'  shift 57
	.  reduce 28 (src line 101)


state 88
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (29)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 56
	'/'  shift 57
	.  reduce 29 (src line 102)


state 89
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (30)
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 30 (src line 103)


state 90
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (31)
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 31 (src line 104)


state 91
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (32)
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 32 (src line 105)


state 92
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (33)
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 33 (src line 106)


state 93
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr '>' expr.    (34)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 34 (src line 107)


state 94
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (35)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 35 (src line 108)


state 95
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (36)
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 36 (src line 109)


state 96
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (37)
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 37 (src line 110)


state 97
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr kAND expr.    (38)
	expr:  expr.kOR expr 

	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 38 (src line 111)


state 98
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr:  expr kOR expr.    (39)

	kAND  shift 64
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  reduce 39 (src line 112)


state 99
	for_stmt:  kFOR for_args kIN expr.kDO stmts kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 64
	kDO  shift 109
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 100
	for_args:  for_args ',' ID.    (21)

	.  reduce 21 (src line 90)


state 101
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  ID ':' expr.comma_opt 
	comma_opt: .    (5)

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	','  shift 75
	.  reduce 5 (src line 53)

	comma_opt  goto 110

state 102
	object_field:  '[' expr ']'.':' expr comma_opt 

	':'  shift 111
	.  error


state 103
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (55)

	kIF  shift 42
	ID  shift 39
	'['  shift 40
	.  reduce 55 (src line 137)

	object_fields_opt  goto 112
	object_fields  goto 37
	object_field  goto 38
	object_if  goto 41

state 104
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (73)

	kIF  shift 50
	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 73 (src line 174)

	expr  goto 47
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18
	array_elems_opt  goto 113
	array_elems  goto 46
	array_elem  goto 48
	array_if  goto 49

state 105
	if_stmt:  kIF expr kTHEN stmts elifs_opt.else_opt kEND 
	else_opt: .    (18)

	kELSE  shift 116
	.  reduce 18 (src line 79)

	else_opt  goto 114
	else  goto 115

state 106
	elifs_opt:  elifs.    (12)
	elifs:  elifs.elif 

	kELIF  shift 108
	.  reduce 12 (src line 68)

	elif  goto 117

state 107
	elifs:  elif.    (15)

	.  reduce 15 (src line 72)


state 108
	elif:  kELIF.expr kTHEN stmts 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 118
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 109
	for_stmt:  kFOR for_args kIN expr kDO.stmts kEND 

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	stmts  goto 119
	stmt  goto 3
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 110
	object_field:  ID ':' expr comma_opt.    (58)

	.  reduce 58 (src line 142)


state 111
	object_field:  '[' expr ']' ':'.expr comma_opt 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 120
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 112
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (63)

	kELIF  shift 124
	.  reduce 63 (src line 154)

	object_elifs_opt  goto 121
	object_elifs  goto 122
	object_elif  goto 123

state 113
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (82)

	kELIF  shift 128
	.  reduce 82 (src line 193)

	array_elifs_opt  goto 125
	array_elifs  goto 126
	array_elif  goto 127

state 114
	if_stmt:  kIF expr kTHEN stmts elifs_opt else_opt.kEND 

	kEND  shift 129
	.  error


state 115
	else_opt:  else.    (17)

	.  reduce 17 (src line 78)


state 116
	else:  kELSE.expr stmts 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 130
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 117
	elifs:  elifs elif.    (14)

	.  reduce 14 (src line 71)


state 118
	elif:  kELIF expr.kTHEN stmts 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 64
	kOR  shift 65
	kTHEN  shift 131
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 119
	stmts:  stmts.stmt 
	for_stmt:  kFOR for_args kIN expr kDO stmts.kEND 

	kVAR  shift 11
	kEND  shift 132
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	stmt  goto 21
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 120
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr ']' ':' expr.comma_opt 
	comma_opt: .    (5)

	kAND  shift 64
	kOR  shift 65
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	','  shift 75
	.  reduce 5 (src line 53)

	comma_opt  goto 133

state 121
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (68)

	kELSE  shift 136
	.  reduce 68 (src line 164)

	object_else_opt  goto 134
	object_else  goto 135

state 122
	object_elifs_opt:  object_elifs.    (62)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 124
	.  reduce 62 (src line 153)

	object_elif  goto 137

state 123
	object_elifs:  object_elif.    (65)

	.  reduce 65 (src line 157)


state 124
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 138
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 125
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (87)

	kELSE  shift 141
	.  reduce 87 (src line 203)

	array_else_opt  goto 139
	array_else  goto 140

state 126
	array_elifs_opt:  array_elifs.    (81)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 128
	.  reduce 81 (src line 192)

	array_elif  goto 142

state 127
	array_elifs:  array_elif.    (84)

	.  reduce 84 (src line 196)


state 128
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	expr  goto 143
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18

state 129
	if_stmt:  kIF expr kTHEN stmts elifs_opt else_opt kEND.    (11)

	.  reduce 11 (src line 61)


state 130
	else:  kELSE expr.stmts 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kVAR  shift 11
	kAND  shift 64
	kFOR  shift 13
	kIF  shift 12
	kOR  shift 65
	STRING  shift 17
	ID  shift 16
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	stmts  goto 144
	stmt  goto 3
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 131
	elif:  kELIF expr kTHEN.stmts 

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  error

	stmts  goto 145
	stmt  goto 3
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 132
	for_stmt:  kFOR for_args kIN expr kDO stmts kEND.    (20)

	.  reduce 20 (src line 85)


state 133
	object_field:  '[' expr ']' ':' expr comma_opt.    (59)

	.  reduce 59 (src line 143)


state 134
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 146
	.  error


state 135
	object_else_opt:  object_else.    (67)

	.  reduce 67 (src line 163)


state 136
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (55)

	kIF  shift 42
	ID  shift 39
	'['  shift 40
	.  reduce 55 (src line 137)

	object_fields_opt  goto 147
	object_fields  goto 37
	object_field  goto 38
	object_if  goto 41

state 137
	object_elifs:  object_elifs object_elif.    (64)

	.  reduce 64 (src line 156)


state 138
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kAND  shift 64
	kOR  shift 65
	kTHEN  shift 148
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 139
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 149
	.  error


state 140
	array_else_opt:  array_else.    (86)

	.  reduce 86 (src line 202)


state 141
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (73)

	kIF  shift 50
	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 73 (src line 174)

	expr  goto 47
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18
	array_elems_opt  goto 150
	array_elems  goto 46
	array_elem  goto 48
	array_if  goto 49

state 142
	array_elifs:  array_elifs array_elif.    (83)

	.  reduce 83 (src line 195)


state 143
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kAND  shift 64
	kOR  shift 65
	kTHEN  shift 151
	'<'  shift 58
	LE  shift 59
	'>'  shift 60
	GE  shift 61
	EQ  shift 62
	NE  shift 63
	'+'  shift 54
	'-'  shift 55
	'*'  shift 56
	'/'  shift 57
	.  error


state 144
	stmts:  stmts.stmt 
	else:  kELSE expr stmts.    (19)

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 19 (src line 81)

	stmt  goto 21
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 145
	stmts:  stmts.stmt 
	elif:  kELIF expr kTHEN stmts.    (16)

	kVAR  shift 11
	kFOR  shift 13
	kIF  shift 12
	STRING  shift 17
	ID  shift 16
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 16 (src line 74)

	stmt  goto 21
	object_literal_stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	if_stmt  goto 7
	for_stmt  goto 8
	object_literal  goto 9
	symbol_ref  goto 10
	term_no_number  goto 15
	array_literal  goto 18

state 146
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (61)

	.  reduce 61 (src line 146)


state 147
	object_else:  kELSE object_fields_opt.    (69)

	.  reduce 69 (src line 166)


state 148
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (55)

	kIF  shift 42
	ID  shift 39
	'['  shift 40
	.  reduce 55 (src line 137)

	object_fields_opt  goto 152
	object_fields  goto 37
	object_field  goto 38
	object_if  goto 41

state 149
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (78)

	.  reduce 78 (src line 182)


state 150
	array_else:  kELSE array_elems_opt.    (88)

	.  reduce 88 (src line 205)


state 151
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (73)

	kIF  shift 50
	kNOT  shift 26
	NUMBER  shift 31
	STRING  shift 17
	ID  shift 16
	'-'  shift 30
	'('  shift 19
	'{'  shift 14
	'['  shift 20
	.  reduce 73 (src line 174)

	expr  goto 47
	object_literal  goto 32
	symbol_ref  goto 33
	unary_expr  goto 25
	term_no_number  goto 29
	term  goto 27
	number  goto 28
	array_literal  goto 18
	array_elems_opt  goto 153
	array_elems  goto 46
	array_elem  goto 48
	array_if  goto 49

state 152
	object_elif:  kELIF expr kTHEN object_fields_opt.    (66)

	.  reduce 66 (src line 159)


state 153
	array_elif:  kELIF expr kTHEN array_elems_opt.    (85)

	.  reduce 85 (src line 198)


43 terminals, 43 nonterminals
89 grammar rules, 154/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
92 working sets used
memory: parser 590/120000
116 extra closures
638 shift entries, 38 exceptions
122 goto entries
297 entries saved by goto default
Optimizer space used: output 572/120000
572 table entries, 171 zero
maximum spread: 43, maximum offset: 151
