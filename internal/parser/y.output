
state 0
	$accept: .S $end 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	module  goto 2
	stmts_opt  goto 3
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	S  goto 1

state 1
	$accept:  S.$end 

	$end  accept
	.  error


state 2
	S:  module.    (1)

	.  reduce 1 (src line 106)


state 3
	module:  stmts_opt.    (2)

	.  reduce 2 (src line 108)


state 4
	stmts_opt:  stmts.    (3)
	stmts:  stmts.stmt ';' 
	stmts:  stmts.';' 

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 38
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 3 (src line 116)

	stmt  goto 37
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 5
	stmts_opt:  stmt.    (4)
	stmts:  stmt.';' 

	';'  shift 39
	.  reduce 4 (src line 117)


state 6
	stmts:  ';'.    (9)

	.  reduce 9 (src line 123)


state 7
	stmt:  assignment_stmt.    (10)

	.  reduce 10 (src line 125)


state 8
	stmt:  var_decl_stmt.    (11)

	.  reduce 11 (src line 126)


state 9
	stmt:  for_stmt.    (12)

	.  reduce 12 (src line 127)


state 10
	stmt:  if_stmt.    (13)

	.  reduce 13 (src line 128)


state 11
	stmt:  func_stmt.    (14)

	.  reduce 14 (src line 129)


state 12
	stmt:  return_stmt.    (15)

	.  reduce 15 (src line 130)


state 13
	stmt:  while_stmt.    (16)

	.  reduce 16 (src line 131)


state 14
	stmt:  expr.    (17)
	assignment_stmt:  expr.'=' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	'='  shift 40
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 17 (src line 132)


state 15
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 54
	.  error


state 16
	for_stmt:  kFOR.for_vars kIN expr kDO stmts_opt kEND 

	ID  shift 56
	.  error

	for_vars  goto 55

state 17
	if_stmt:  kIF.expr kTHEN stmts_opt elifs_opt else_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 57
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 18
	func_stmt:  kFN.ID '(' param_list_opt ')' stmts_opt kEND 
	lambda_expr:  kFN.'(' param_list_opt ')' stmts_opt kEND 

	ID  shift 59
	'('  shift 60
	.  error


state 19
	return_stmt:  kRETURN.return_list 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	return_list  goto 61
	expr  goto 62
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 20
	while_stmt:  kWHILE.expr kDO stmts_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 63
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 21
	expr:  unary_expr.    (38)

	.  reduce 38 (src line 266)


state 22
	unary_expr:  kNOT.unary_expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	unary_expr  goto 64
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 23
	unary_expr:  '+'.unary_expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	unary_expr  goto 65
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 24
	unary_expr:  '-'.unary_expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	unary_expr  goto 66
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 25
	unary_expr:  primary_expr.    (55)
	primary_expr:  primary_expr.'[' expr ']' 
	primary_expr:  primary_expr.'.' ID 
	primary_expr:  primary_expr.'(' arg_list_opt ')' 

	'('  shift 69
	'['  shift 67
	'.'  shift 68
	.  reduce 55 (src line 348)


state 26
	primary_expr:  STRING.    (56)

	.  reduce 56 (src line 350)


state 27
	primary_expr:  NUMBER.    (57)

	.  reduce 57 (src line 355)


state 28
	primary_expr:  ID.    (58)

	.  reduce 58 (src line 360)


state 29
	primary_expr:  kTRUE.    (59)

	.  reduce 59 (src line 365)


state 30
	primary_expr:  kFALSE.    (60)

	.  reduce 60 (src line 370)


state 31
	primary_expr:  '('.expr ')' 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 70
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 32
	primary_expr:  lambda_expr.    (65)

	.  reduce 65 (src line 394)


state 33
	primary_expr:  array_literal.    (66)

	.  reduce 66 (src line 395)


state 34
	primary_expr:  object_literal.    (67)

	.  reduce 67 (src line 396)


state 35
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (99)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 99 (src line 542)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elems_opt  goto 71
	array_elems  goto 72
	array_elem  goto 73
	array_if  goto 75
	array_for  goto 76

state 36
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (79)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 79 (src line 446)

	object_fields_opt  goto 79
	object_fields  goto 80
	object_field  goto 81
	object_if  goto 84
	object_for  goto 85

state 37
	stmts:  stmts stmt.';' 

	';'  shift 88
	.  error


state 38
	stmts:  stmts ';'.    (7)

	.  reduce 7 (src line 121)


state 39
	stmts:  stmt ';'.    (8)

	.  reduce 8 (src line 122)


state 40
	assignment_stmt:  expr '='.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 89
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 41
	expr:  expr '+'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 90
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 42
	expr:  expr '-'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 91
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 43
	expr:  expr '*'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 92
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 44
	expr:  expr '/'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 93
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 45
	expr:  expr '%'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 94
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 46
	expr:  expr '<'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 95
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 47
	expr:  expr LE.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 96
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 48
	expr:  expr '>'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 97
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 49
	expr:  expr GE.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 98
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 50
	expr:  expr EQ.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 99
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 51
	expr:  expr NE.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 100
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 52
	expr:  expr kAND.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 101
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 53
	expr:  expr kOR.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 102
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 54
	var_decl_stmt:  kVAR ID.    (36)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 103
	.  reduce 36 (src line 255)


state 55
	for_stmt:  kFOR for_vars.kIN expr kDO stmts_opt kEND 
	for_vars:  for_vars.',' ID 

	kIN  shift 104
	','  shift 105
	.  error


state 56
	for_vars:  ID.    (34)

	.  reduce 34 (src line 241)


state 57
	if_stmt:  kIF expr.kTHEN stmts_opt elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	kTHEN  shift 106
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 58
	lambda_expr:  kFN.'(' param_list_opt ')' stmts_opt kEND 

	'('  shift 60
	.  error


state 59
	func_stmt:  kFN ID.'(' param_list_opt ')' stmts_opt kEND 

	'('  shift 107
	.  error


state 60
	lambda_expr:  kFN '('.param_list_opt ')' stmts_opt kEND 
	param_list_opt: .    (70)

	ID  shift 110
	.  reduce 70 (src line 407)

	param_list_opt  goto 108
	param_list  goto 109

state 61
	return_stmt:  kRETURN return_list.    (19)
	return_list:  return_list.',' expr 

	','  shift 111
	.  reduce 19 (src line 146)


state 62
	return_list:  expr.    (21)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 21 (src line 157)


state 63
	while_stmt:  kWHILE expr.kDO stmts_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kDO  shift 112
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 64
	unary_expr:  kNOT unary_expr.    (52)

	.  reduce 52 (src line 333)


state 65
	unary_expr:  '+' unary_expr.    (53)

	.  reduce 53 (src line 338)


state 66
	unary_expr:  '-' unary_expr.    (54)

	.  reduce 54 (src line 343)


state 67
	primary_expr:  primary_expr '['.expr ']' 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 113
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 68
	primary_expr:  primary_expr '.'.ID 

	ID  shift 114
	.  error


state 69
	primary_expr:  primary_expr '('.arg_list_opt ')' 
	arg_list_opt: .    (74)

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 74 (src line 425)

	expr  goto 117
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	arg_list_opt  goto 115
	arg_list  goto 116
	object_literal  goto 34
	array_literal  goto 33

state 70
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	primary_expr:  '(' expr.')' 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	')'  shift 118
	'%'  shift 45
	.  error


state 71
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 119
	.  error


state 72
	array_elems_opt:  array_elems.trailing_seps 
	array_elems:  array_elems.',' array_elem 
	array_elems:  array_elems.';' array_elem 
	trailing_seps: .    (117)

	';'  shift 122
	','  shift 121
	.  reduce 117 (src line 629)

	trailing_seps  goto 120
	trailing_seps1  goto 123

state 73
	array_elems:  array_elem.    (102)

	.  reduce 102 (src line 555)


state 74
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elem:  expr.    (103)

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 103 (src line 560)


state 75
	array_elem:  array_if.    (104)

	.  reduce 104 (src line 565)


state 76
	array_elem:  array_for.    (105)

	.  reduce 105 (src line 566)


state 77
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 124
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 78
	array_for:  kFOR.for_vars kIN expr kDO array_elems_opt kEND 

	ID  shift 56
	.  error

	for_vars  goto 125

state 79
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 126
	.  error


state 80
	object_fields_opt:  object_fields.trailing_seps 
	object_fields:  object_fields.',' object_field 
	object_fields:  object_fields.';' object_field 
	trailing_seps: .    (117)

	';'  shift 129
	','  shift 128
	.  reduce 117 (src line 629)

	trailing_seps  goto 127
	trailing_seps1  goto 123

state 81
	object_fields:  object_field.    (82)

	.  reduce 82 (src line 459)


state 82
	object_field:  ID.':' expr 

	':'  shift 130
	.  error


state 83
	object_field:  '['.expr ']' ':' expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 131
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 84
	object_field:  object_if.    (85)

	.  reduce 85 (src line 472)


state 85
	object_field:  object_for.    (86)

	.  reduce 86 (src line 473)


state 86
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 132
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 87
	object_for:  kFOR.for_vars kIN expr kDO object_fields_opt kEND 

	ID  shift 56
	.  error

	for_vars  goto 133

state 88
	stmts:  stmts stmt ';'.    (6)

	.  reduce 6 (src line 120)


state 89
	assignment_stmt:  expr '=' expr.    (35)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 35 (src line 247)


state 90
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (39)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 39 (src line 267)


state 91
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (40)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 40 (src line 272)


state 92
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (41)
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 41 (src line 277)


state 93
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (42)
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 42 (src line 282)


state 94
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (43)
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 43 (src line 287)


state 95
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (44)
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 44 (src line 292)


state 96
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (45)
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 45 (src line 297)


state 97
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr '>' expr.    (46)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 46 (src line 302)


state 98
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (47)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 47 (src line 307)


state 99
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (48)
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 48 (src line 312)


state 100
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (49)
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	EQ  error
	NE  error
	'<'  error
	LE  error
	'>'  error
	GE  error
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 49 (src line 317)


state 101
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr kAND expr.    (50)
	expr:  expr.kOR expr 

	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 50 (src line 322)


state 102
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr:  expr kOR expr.    (51)

	kAND  shift 52
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 51 (src line 327)


state 103
	var_decl_stmt:  kVAR ID '='.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 134
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 104
	for_stmt:  kFOR for_vars kIN.expr kDO stmts_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 135
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 105
	for_vars:  for_vars ','.ID 

	ID  shift 136
	.  error


state 106
	if_stmt:  kIF expr kTHEN.stmts_opt elifs_opt else_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 137
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 107
	func_stmt:  kFN ID '('.param_list_opt ')' stmts_opt kEND 
	param_list_opt: .    (70)

	ID  shift 110
	.  reduce 70 (src line 407)

	param_list_opt  goto 138
	param_list  goto 109

state 108
	lambda_expr:  kFN '(' param_list_opt.')' stmts_opt kEND 

	')'  shift 139
	.  error


state 109
	param_list_opt:  param_list.    (69)
	param_list:  param_list.',' ID 

	','  shift 140
	.  reduce 69 (src line 406)


state 110
	param_list:  ID.    (72)

	.  reduce 72 (src line 418)


state 111
	return_list:  return_list ','.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 141
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 112
	while_stmt:  kWHILE expr kDO.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 142
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 113
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	primary_expr:  primary_expr '[' expr.']' 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	']'  shift 143
	'%'  shift 45
	.  error


state 114
	primary_expr:  primary_expr '.' ID.    (62)

	.  reduce 62 (src line 380)


state 115
	primary_expr:  primary_expr '(' arg_list_opt.')' 

	')'  shift 144
	.  error


state 116
	arg_list_opt:  arg_list.trailing_comma 
	arg_list:  arg_list.',' expr 
	trailing_comma: .    (123)

	','  shift 146
	.  reduce 123 (src line 636)

	trailing_comma  goto 145

state 117
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	arg_list:  expr.    (76)

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 76 (src line 434)


state 118
	primary_expr:  '(' expr ')'.    (64)

	.  reduce 64 (src line 390)


state 119
	array_literal:  '[' array_elems_opt ']'.    (97)

	.  reduce 97 (src line 536)


state 120
	array_elems_opt:  array_elems trailing_seps.    (98)

	.  reduce 98 (src line 541)


state 121
	array_elems:  array_elems ','.array_elem 
	trailing_seps1:  ','.    (121)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 121 (src line 634)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elem  goto 147
	array_if  goto 75
	array_for  goto 76

state 122
	array_elems:  array_elems ';'.array_elem 
	trailing_seps1:  ';'.    (120)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 120 (src line 633)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elem  goto 148
	array_if  goto 75
	array_for  goto 76

state 123
	trailing_seps:  trailing_seps1.    (116)
	trailing_seps1:  trailing_seps1.';' 
	trailing_seps1:  trailing_seps1.',' 

	';'  shift 149
	','  shift 150
	.  reduce 116 (src line 629)


state 124
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kAND  shift 52
	kOR  shift 53
	kTHEN  shift 151
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 125
	for_vars:  for_vars.',' ID 
	array_for:  kFOR for_vars.kIN expr kDO array_elems_opt kEND 

	kIN  shift 152
	','  shift 105
	.  error


state 126
	object_literal:  '{' object_fields_opt '}'.    (77)

	.  reduce 77 (src line 439)


state 127
	object_fields_opt:  object_fields trailing_seps.    (78)

	.  reduce 78 (src line 445)


state 128
	object_fields:  object_fields ','.object_field 
	trailing_seps1:  ','.    (121)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 121 (src line 634)

	object_field  goto 153
	object_if  goto 84
	object_for  goto 85

state 129
	object_fields:  object_fields ';'.object_field 
	trailing_seps1:  ';'.    (120)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 120 (src line 633)

	object_field  goto 154
	object_if  goto 84
	object_for  goto 85

state 130
	object_field:  ID ':'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 155
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 131
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr.']' ':' expr 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	']'  shift 156
	'%'  shift 45
	.  error


state 132
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kAND  shift 52
	kOR  shift 53
	kTHEN  shift 157
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 133
	for_vars:  for_vars.',' ID 
	object_for:  kFOR for_vars.kIN expr kDO object_fields_opt kEND 

	kIN  shift 158
	','  shift 105
	.  error


state 134
	var_decl_stmt:  kVAR ID '=' expr.    (37)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 37 (src line 260)


state 135
	for_stmt:  kFOR for_vars kIN expr.kDO stmts_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kDO  shift 159
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 136
	for_vars:  for_vars ',' ID.    (33)

	.  reduce 33 (src line 237)


state 137
	if_stmt:  kIF expr kTHEN stmts_opt.elifs_opt else_opt kEND 
	elifs_opt: .    (25)

	kELIF  shift 163
	.  reduce 25 (src line 194)

	elifs_opt  goto 160
	elifs  goto 161
	elif  goto 162

state 138
	func_stmt:  kFN ID '(' param_list_opt.')' stmts_opt kEND 

	')'  shift 164
	.  error


state 139
	lambda_expr:  kFN '(' param_list_opt ')'.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 165
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 140
	param_list:  param_list ','.ID 

	ID  shift 166
	.  error


state 141
	return_list:  return_list ',' expr.    (20)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 20 (src line 152)


state 142
	while_stmt:  kWHILE expr kDO stmts_opt.kEND 

	kEND  shift 167
	.  error


state 143
	primary_expr:  primary_expr '[' expr ']'.    (61)

	.  reduce 61 (src line 375)


state 144
	primary_expr:  primary_expr '(' arg_list_opt ')'.    (63)

	.  reduce 63 (src line 385)


state 145
	arg_list_opt:  arg_list trailing_comma.    (73)

	.  reduce 73 (src line 424)


state 146
	arg_list:  arg_list ','.expr 
	trailing_comma:  ','.    (122)

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 122 (src line 636)

	expr  goto 168
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 147
	array_elems:  array_elems ',' array_elem.    (100)

	.  reduce 100 (src line 547)


state 148
	array_elems:  array_elems ';' array_elem.    (101)

	.  reduce 101 (src line 551)


state 149
	trailing_seps1:  trailing_seps1 ';'.    (118)

	.  reduce 118 (src line 631)


state 150
	trailing_seps1:  trailing_seps1 ','.    (119)

	.  reduce 119 (src line 632)


state 151
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (99)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 99 (src line 542)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elems_opt  goto 169
	array_elems  goto 72
	array_elem  goto 73
	array_if  goto 75
	array_for  goto 76

state 152
	array_for:  kFOR for_vars kIN.expr kDO array_elems_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 170
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 153
	object_fields:  object_fields ',' object_field.    (80)

	.  reduce 80 (src line 451)


state 154
	object_fields:  object_fields ';' object_field.    (81)

	.  reduce 81 (src line 455)


state 155
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  ID ':' expr.    (83)

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 83 (src line 464)


state 156
	object_field:  '[' expr ']'.':' expr 

	':'  shift 171
	.  error


state 157
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (79)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 79 (src line 446)

	object_fields_opt  goto 172
	object_fields  goto 80
	object_field  goto 81
	object_if  goto 84
	object_for  goto 85

state 158
	object_for:  kFOR for_vars kIN.expr kDO object_fields_opt kEND 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 173
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 159
	for_stmt:  kFOR for_vars kIN expr kDO.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 174
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 160
	if_stmt:  kIF expr kTHEN stmts_opt elifs_opt.else_opt kEND 
	else_opt: .    (30)

	kELSE  shift 177
	.  reduce 30 (src line 217)

	else_opt  goto 175
	else  goto 176

state 161
	elifs_opt:  elifs.    (24)
	elifs:  elifs.elif 

	kELIF  shift 163
	.  reduce 24 (src line 193)

	elif  goto 178

state 162
	elifs:  elif.    (27)

	.  reduce 27 (src line 204)


state 163
	elif:  kELIF.expr kTHEN stmts_opt 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 179
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 164
	func_stmt:  kFN ID '(' param_list_opt ')'.stmts_opt kEND 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 180
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 165
	lambda_expr:  kFN '(' param_list_opt ')' stmts_opt.kEND 

	kEND  shift 181
	.  error


state 166
	param_list:  param_list ',' ID.    (71)

	.  reduce 71 (src line 412)


state 167
	while_stmt:  kWHILE expr kDO stmts_opt kEND.    (18)

	.  reduce 18 (src line 138)


state 168
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	arg_list:  arg_list ',' expr.    (75)

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 75 (src line 430)


state 169
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (109)

	kELIF  shift 185
	.  reduce 109 (src line 595)

	array_elifs_opt  goto 182
	array_elifs  goto 183
	array_elif  goto 184

state 170
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_for:  kFOR for_vars kIN expr.kDO array_elems_opt kEND 

	kAND  shift 52
	kDO  shift 186
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 171
	object_field:  '[' expr ']' ':'.expr 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 187
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 172
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (90)

	kELIF  shift 191
	.  reduce 90 (src line 502)

	object_elifs_opt  goto 188
	object_elifs  goto 189
	object_elif  goto 190

state 173
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_for:  kFOR for_vars kIN expr.kDO object_fields_opt kEND 

	kAND  shift 52
	kDO  shift 192
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 174
	for_stmt:  kFOR for_vars kIN expr kDO stmts_opt.kEND 

	kEND  shift 193
	.  error


state 175
	if_stmt:  kIF expr kTHEN stmts_opt elifs_opt else_opt.kEND 

	kEND  shift 194
	.  error


state 176
	else_opt:  else.    (29)

	.  reduce 29 (src line 216)


state 177
	else:  kELSE.stmts_opt 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 195
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 178
	elifs:  elifs elif.    (26)

	.  reduce 26 (src line 199)


state 179
	elif:  kELIF expr.kTHEN stmts_opt 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 52
	kOR  shift 53
	kTHEN  shift 196
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 180
	func_stmt:  kFN ID '(' param_list_opt ')' stmts_opt.kEND 

	kEND  shift 197
	.  error


state 181
	lambda_expr:  kFN '(' param_list_opt ')' stmts_opt kEND.    (68)

	.  reduce 68 (src line 398)


state 182
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (114)

	kELSE  shift 200
	.  reduce 114 (src line 617)

	array_else_opt  goto 198
	array_else  goto 199

state 183
	array_elifs_opt:  array_elifs.    (108)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 185
	.  reduce 108 (src line 594)

	array_elif  goto 201

state 184
	array_elifs:  array_elif.    (111)

	.  reduce 111 (src line 604)


state 185
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 202
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 186
	array_for:  kFOR for_vars kIN expr kDO.array_elems_opt kEND 
	array_elems_opt: .    (99)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 99 (src line 542)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elems_opt  goto 203
	array_elems  goto 72
	array_elem  goto 73
	array_if  goto 75
	array_for  goto 76

state 187
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr ']' ':' expr.    (84)

	kAND  shift 52
	kOR  shift 53
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  reduce 84 (src line 468)


state 188
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (95)

	kELSE  shift 206
	.  reduce 95 (src line 524)

	object_else_opt  goto 204
	object_else  goto 205

state 189
	object_elifs_opt:  object_elifs.    (89)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 191
	.  reduce 89 (src line 501)

	object_elif  goto 207

state 190
	object_elifs:  object_elif.    (92)

	.  reduce 92 (src line 511)


state 191
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kFALSE  shift 30
	kFN  shift 58
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  error

	expr  goto 208
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 192
	object_for:  kFOR for_vars kIN expr kDO.object_fields_opt kEND 
	object_fields_opt: .    (79)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 79 (src line 446)

	object_fields_opt  goto 209
	object_fields  goto 80
	object_field  goto 81
	object_if  goto 84
	object_for  goto 85

state 193
	for_stmt:  kFOR for_vars kIN expr kDO stmts_opt kEND.    (32)

	.  reduce 32 (src line 229)


state 194
	if_stmt:  kIF expr kTHEN stmts_opt elifs_opt else_opt kEND.    (23)

	.  reduce 23 (src line 175)


state 195
	else:  kELSE stmts_opt.    (31)

	.  reduce 31 (src line 222)


state 196
	elif:  kELIF expr kTHEN.stmts_opt 
	stmts_opt: .    (5)

	kFALSE  shift 30
	kFN  shift 18
	kFOR  shift 16
	kIF  shift 17
	kNOT  shift 22
	kRETURN  shift 19
	kTRUE  shift 29
	kVAR  shift 15
	kWHILE  shift 20
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	';'  shift 6
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 5 (src line 118)

	stmts_opt  goto 210
	stmts  goto 4
	stmt  goto 5
	while_stmt  goto 13
	return_stmt  goto 12
	func_stmt  goto 11
	if_stmt  goto 10
	for_stmt  goto 9
	assignment_stmt  goto 7
	var_decl_stmt  goto 8
	expr  goto 14
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33

state 197
	func_stmt:  kFN ID '(' param_list_opt ')' stmts_opt kEND.    (22)

	.  reduce 22 (src line 163)


state 198
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 211
	.  error


state 199
	array_else_opt:  array_else.    (113)

	.  reduce 113 (src line 616)


state 200
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (99)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 99 (src line 542)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elems_opt  goto 212
	array_elems  goto 72
	array_elem  goto 73
	array_if  goto 75
	array_for  goto 76

state 201
	array_elifs:  array_elifs array_elif.    (110)

	.  reduce 110 (src line 600)


state 202
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kAND  shift 52
	kOR  shift 53
	kTHEN  shift 213
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 203
	array_for:  kFOR for_vars kIN expr kDO array_elems_opt.kEND 

	kEND  shift 214
	.  error


state 204
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 215
	.  error


state 205
	object_else_opt:  object_else.    (94)

	.  reduce 94 (src line 523)


state 206
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (79)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 79 (src line 446)

	object_fields_opt  goto 216
	object_fields  goto 80
	object_field  goto 81
	object_if  goto 84
	object_for  goto 85

state 207
	object_elifs:  object_elifs object_elif.    (91)

	.  reduce 91 (src line 507)


state 208
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kAND  shift 52
	kOR  shift 53
	kTHEN  shift 217
	EQ  shift 50
	NE  shift 51
	'<'  shift 46
	LE  shift 47
	'>'  shift 48
	GE  shift 49
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	'/'  shift 44
	'%'  shift 45
	.  error


state 209
	object_for:  kFOR for_vars kIN expr kDO object_fields_opt.kEND 

	kEND  shift 218
	.  error


state 210
	elif:  kELIF expr kTHEN stmts_opt.    (28)

	.  reduce 28 (src line 209)


state 211
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (106)

	.  reduce 106 (src line 568)


state 212
	array_else:  kELSE array_elems_opt.    (115)

	.  reduce 115 (src line 622)


state 213
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (99)

	kFALSE  shift 30
	kFN  shift 58
	kFOR  shift 78
	kIF  shift 77
	kNOT  shift 22
	kTRUE  shift 29
	NUMBER  shift 27
	STRING  shift 26
	ID  shift 28
	'+'  shift 23
	'-'  shift 24
	'('  shift 31
	'['  shift 35
	'{'  shift 36
	.  reduce 99 (src line 542)

	expr  goto 74
	unary_expr  goto 21
	primary_expr  goto 25
	lambda_expr  goto 32
	object_literal  goto 34
	array_literal  goto 33
	array_elems_opt  goto 219
	array_elems  goto 72
	array_elem  goto 73
	array_if  goto 75
	array_for  goto 76

state 214
	array_for:  kFOR for_vars kIN expr kDO array_elems_opt kEND.    (107)

	.  reduce 107 (src line 586)


state 215
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (87)

	.  reduce 87 (src line 475)


state 216
	object_else:  kELSE object_fields_opt.    (96)

	.  reduce 96 (src line 529)


state 217
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (79)

	kFOR  shift 87
	kIF  shift 86
	ID  shift 82
	'['  shift 83
	.  reduce 79 (src line 446)

	object_fields_opt  goto 220
	object_fields  goto 80
	object_field  goto 81
	object_if  goto 84
	object_for  goto 85

state 218
	object_for:  kFOR for_vars kIN expr kDO object_fields_opt kEND.    (88)

	.  reduce 88 (src line 493)


state 219
	array_elif:  kELIF expr kTHEN array_elems_opt.    (112)

	.  reduce 112 (src line 609)


state 220
	object_elif:  kELIF expr kTHEN object_fields_opt.    (93)

	.  reduce 93 (src line 516)


48 terminals, 53 nonterminals
124 grammar rules, 221/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
102 working sets used
memory: parser 668/120000
175 extra closures
1163 shift entries, 37 exceptions
123 goto entries
377 entries saved by goto default
Optimizer space used: output 693/120000
693 table entries, 211 zero
maximum spread: 48, maximum offset: 217
