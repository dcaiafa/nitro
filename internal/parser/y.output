
state 0
	$accept: .program $end 
	opt_stmts: .    (3)

	kVAR  shift 10
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 13
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 3 (src line 50)

	program  goto 1
	opt_stmts  goto 2
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 9
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  opt_stmts.    (1)

	.  reduce 1 (src line 47)


state 3
	opt_stmts:  stmts.    (2)
	stmts:  stmts.stmt ';' 

	kVAR  shift 10
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 13
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 2 (src line 49)

	stmt  goto 28
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 9
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 4
	stmts:  stmt.';' 

	';'  shift 29
	.  error


state 5
	stmt:  assignment_stmt.    (6)

	.  reduce 6 (src line 55)


state 6
	stmt:  var_decl_stmt.    (7)

	.  reduce 7 (src line 56)


state 7
	stmt:  expr.    (8)
	assignment_stmt:  expr.'=' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	'='  shift 30
	.  reduce 8 (src line 57)


state 8
	stmt:  for_stmt.    (9)

	.  reduce 9 (src line 58)


state 9
	stmt:  if_expr.    (10)

	.  reduce 10 (src line 59)


state 10
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 43
	.  error


state 11
	expr:  unary_expr.    (26)

	.  reduce 26 (src line 98)


state 12
	for_stmt:  kFOR.for_args kIN expr kDO opt_stmts kEND 

	ID  shift 45
	.  error

	for_args  goto 44

state 13
	if_expr:  kIF.expr kTHEN opt_stmts elifs_opt else_opt kEND 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 46
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 14
	unary_expr:  kNOT.unary_expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	unary_expr  goto 47
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 15
	unary_expr:  '+'.unary_expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	unary_expr  goto 48
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 16
	unary_expr:  '-'.unary_expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	unary_expr  goto 49
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 17
	unary_expr:  expr3.    (42)
	expr3:  expr3.'[' expr ']' 
	expr3:  expr3.'.' ID 
	expr3:  expr3.'(' ')' 

	'['  shift 50
	'.'  shift 51
	'('  shift 52
	.  reduce 42 (src line 115)


state 18
	expr3:  STRING.    (43)

	.  reduce 43 (src line 117)


state 19
	expr3:  NUMBER.    (44)

	.  reduce 44 (src line 118)


state 20
	expr3:  ID.    (45)

	.  reduce 45 (src line 119)


state 21
	expr3:  kTRUE.    (46)

	.  reduce 46 (src line 120)


state 22
	expr3:  kFALSE.    (47)

	.  reduce 47 (src line 121)


state 23
	expr3:  array_literal.    (48)

	.  reduce 48 (src line 122)


state 24
	expr3:  object_literal.    (49)

	.  reduce 49 (src line 123)


state 25
	expr3:  '('.expr ')' 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 53
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 26
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (74)

	kFALSE  shift 22
	kIF  shift 59
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 74 (src line 169)

	expr  goto 57
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 54
	array_elems  goto 55
	array_elem  goto 56
	array_if  goto 58

state 27
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (56)

	kIF  shift 66
	ID  shift 63
	'['  shift 64
	.  reduce 56 (src line 132)

	object_fields_opt  goto 60
	object_fields  goto 61
	object_field  goto 62
	object_if  goto 65

state 28
	stmts:  stmts stmt.';' 

	';'  shift 67
	.  error


state 29
	stmts:  stmt ';'.    (5)

	.  reduce 5 (src line 53)


state 30
	assignment_stmt:  expr '='.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 68
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 31
	expr:  expr '+'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 69
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 32
	expr:  expr '-'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 70
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 33
	expr:  expr '*'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 71
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 34
	expr:  expr '/'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 72
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 35
	expr:  expr '<'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 73
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 36
	expr:  expr LE.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 74
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 37
	expr:  expr '>'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 75
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 38
	expr:  expr GE.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 76
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 39
	expr:  expr EQ.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 77
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 40
	expr:  expr NE.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 78
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 41
	expr:  expr kAND.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 79
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 42
	expr:  expr kOR.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 80
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 43
	var_decl_stmt:  kVAR ID.    (24)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 81
	.  reduce 24 (src line 95)


state 44
	for_stmt:  kFOR for_args.kIN expr kDO opt_stmts kEND 
	for_args:  for_args.',' ID 

	kIN  shift 82
	','  shift 83
	.  error


state 45
	for_args:  ID.    (22)

	.  reduce 22 (src line 91)


state 46
	if_expr:  kIF expr.kTHEN opt_stmts elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 41
	kOR  shift 42
	kTHEN  shift 84
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 47
	unary_expr:  kNOT unary_expr.    (39)

	.  reduce 39 (src line 112)


state 48
	unary_expr:  '+' unary_expr.    (40)

	.  reduce 40 (src line 113)


state 49
	unary_expr:  '-' unary_expr.    (41)

	.  reduce 41 (src line 114)


state 50
	expr3:  expr3 '['.expr ']' 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 85
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 51
	expr3:  expr3 '.'.ID 

	ID  shift 86
	.  error


state 52
	expr3:  expr3 '('.')' 

	')'  shift 87
	.  error


state 53
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr3:  '(' expr.')' 

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	')'  shift 88
	.  error


state 54
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 89
	.  error


state 55
	array_elems_opt:  array_elems.comma_or_semicollon_opt 
	array_elems:  array_elems.',' array_elem 
	array_elems:  array_elems.';' array_elem 

	';'  shift 92
	','  shift 91
	.  error

	comma_or_semicollon_opt  goto 90

state 56
	array_elems:  array_elem.    (77)

	.  reduce 77 (src line 173)


state 57
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elem:  expr.    (78)

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 78 (src line 175)


state 58
	array_elem:  array_if.    (79)

	.  reduce 79 (src line 176)


state 59
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 93
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 60
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 94
	.  error


state 61
	object_fields_opt:  object_fields.comma_or_semicollon_opt 
	object_fields:  object_fields.',' object_field 
	object_fields:  object_fields.';' object_field 

	';'  shift 97
	','  shift 96
	.  error

	comma_or_semicollon_opt  goto 95

state 62
	object_fields:  object_field.    (59)

	.  reduce 59 (src line 136)


state 63
	object_field:  ID.':' expr 

	':'  shift 98
	.  error


state 64
	object_field:  '['.expr ']' ':' expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 99
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 65
	object_field:  object_if.    (62)

	.  reduce 62 (src line 140)


state 66
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 100
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 67
	stmts:  stmts stmt ';'.    (4)

	.  reduce 4 (src line 52)


state 68
	assignment_stmt:  expr '=' expr.    (23)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 23 (src line 93)


state 69
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (27)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 33
	'/'  shift 34
	.  reduce 27 (src line 99)


state 70
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (28)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 33
	'/'  shift 34
	.  reduce 28 (src line 100)


state 71
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (29)
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 29 (src line 101)


state 72
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (30)
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 30 (src line 102)


state 73
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (31)
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 31 (src line 103)


state 74
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (32)
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 32 (src line 104)


state 75
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr '>' expr.    (33)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 33 (src line 105)


state 76
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (34)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 34 (src line 106)


state 77
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (35)
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 35 (src line 107)


state 78
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (36)
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 36 (src line 108)


state 79
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr kAND expr.    (37)
	expr:  expr.kOR expr 

	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 37 (src line 109)


state 80
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr:  expr kOR expr.    (38)

	kAND  shift 41
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 38 (src line 110)


state 81
	var_decl_stmt:  kVAR ID '='.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 101
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 82
	for_stmt:  kFOR for_args kIN.expr kDO opt_stmts kEND 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 102
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 83
	for_args:  for_args ','.ID 

	ID  shift 103
	.  error


state 84
	if_expr:  kIF expr kTHEN.opt_stmts elifs_opt else_opt kEND 
	opt_stmts: .    (3)

	kVAR  shift 10
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 13
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 3 (src line 50)

	opt_stmts  goto 104
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 9
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 85
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr3:  expr3 '[' expr.']' 

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	']'  shift 105
	.  error


state 86
	expr3:  expr3 '.' ID.    (51)

	.  reduce 51 (src line 125)


state 87
	expr3:  expr3 '(' ')'.    (52)

	.  reduce 52 (src line 126)


state 88
	expr3:  '(' expr ')'.    (53)

	.  reduce 53 (src line 127)


state 89
	array_literal:  '[' array_elems_opt ']'.    (72)

	.  reduce 72 (src line 166)


state 90
	array_elems_opt:  array_elems comma_or_semicollon_opt.    (73)

	.  reduce 73 (src line 168)


state 91
	array_elems:  array_elems ','.array_elem 
	comma_or_semicollon_opt:  ','.    (90)

	kFALSE  shift 22
	kIF  shift 59
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 90 (src line 202)

	expr  goto 57
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24
	array_elem  goto 106
	array_if  goto 58

state 92
	array_elems:  array_elems ';'.array_elem 
	comma_or_semicollon_opt:  ';'.    (89)

	kFALSE  shift 22
	kIF  shift 59
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 89 (src line 202)

	expr  goto 57
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24
	array_elem  goto 107
	array_if  goto 58

state 93
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kAND  shift 41
	kOR  shift 42
	kTHEN  shift 108
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 94
	object_literal:  '{' object_fields_opt '}'.    (54)

	.  reduce 54 (src line 129)


state 95
	object_fields_opt:  object_fields comma_or_semicollon_opt.    (55)

	.  reduce 55 (src line 131)


state 96
	object_fields:  object_fields ','.object_field 
	comma_or_semicollon_opt:  ','.    (90)

	kIF  shift 66
	ID  shift 63
	'['  shift 64
	.  reduce 90 (src line 202)

	object_field  goto 109
	object_if  goto 65

state 97
	object_fields:  object_fields ';'.object_field 
	comma_or_semicollon_opt:  ';'.    (89)

	kIF  shift 66
	ID  shift 63
	'['  shift 64
	.  reduce 89 (src line 202)

	object_field  goto 110
	object_if  goto 65

state 98
	object_field:  ID ':'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 111
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 99
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr.']' ':' expr 

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	']'  shift 112
	.  error


state 100
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kAND  shift 41
	kOR  shift 42
	kTHEN  shift 113
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 101
	var_decl_stmt:  kVAR ID '=' expr.    (25)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 25 (src line 96)


state 102
	for_stmt:  kFOR for_args kIN expr.kDO opt_stmts kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 41
	kDO  shift 114
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 103
	for_args:  for_args ',' ID.    (21)

	.  reduce 21 (src line 90)


state 104
	if_expr:  kIF expr kTHEN opt_stmts.elifs_opt else_opt kEND 
	elifs_opt: .    (13)

	kELIF  shift 118
	.  reduce 13 (src line 69)

	elifs_opt  goto 115
	elifs  goto 116
	elif  goto 117

state 105
	expr3:  expr3 '[' expr ']'.    (50)

	.  reduce 50 (src line 124)


state 106
	array_elems:  array_elems ',' array_elem.    (75)

	.  reduce 75 (src line 171)


state 107
	array_elems:  array_elems ';' array_elem.    (76)

	.  reduce 76 (src line 172)


state 108
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (74)

	kFALSE  shift 22
	kIF  shift 59
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 74 (src line 169)

	expr  goto 57
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 119
	array_elems  goto 55
	array_elem  goto 56
	array_if  goto 58

state 109
	object_fields:  object_fields ',' object_field.    (57)

	.  reduce 57 (src line 134)


state 110
	object_fields:  object_fields ';' object_field.    (58)

	.  reduce 58 (src line 135)


state 111
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  ID ':' expr.    (60)

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 60 (src line 138)


state 112
	object_field:  '[' expr ']'.':' expr 

	':'  shift 120
	.  error


state 113
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (56)

	kIF  shift 66
	ID  shift 63
	'['  shift 64
	.  reduce 56 (src line 132)

	object_fields_opt  goto 121
	object_fields  goto 61
	object_field  goto 62
	object_if  goto 65

state 114
	for_stmt:  kFOR for_args kIN expr kDO.opt_stmts kEND 
	opt_stmts: .    (3)

	kVAR  shift 10
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 13
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 3 (src line 50)

	opt_stmts  goto 122
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 9
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 115
	if_expr:  kIF expr kTHEN opt_stmts elifs_opt.else_opt kEND 
	else_opt: .    (18)

	kELSE  shift 125
	.  reduce 18 (src line 79)

	else_opt  goto 123
	else  goto 124

state 116
	elifs_opt:  elifs.    (12)
	elifs:  elifs.elif 

	kELIF  shift 118
	.  reduce 12 (src line 68)

	elif  goto 126

state 117
	elifs:  elif.    (15)

	.  reduce 15 (src line 72)


state 118
	elif:  kELIF.expr kTHEN opt_stmts 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 127
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 119
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (82)

	kELIF  shift 131
	.  reduce 82 (src line 186)

	array_elifs_opt  goto 128
	array_elifs  goto 129
	array_elif  goto 130

state 120
	object_field:  '[' expr ']' ':'.expr 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 132
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 121
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (65)

	kELIF  shift 136
	.  reduce 65 (src line 150)

	object_elifs_opt  goto 133
	object_elifs  goto 134
	object_elif  goto 135

state 122
	for_stmt:  kFOR for_args kIN expr kDO opt_stmts.kEND 

	kEND  shift 137
	.  error


state 123
	if_expr:  kIF expr kTHEN opt_stmts elifs_opt else_opt.kEND 

	kEND  shift 138
	.  error


state 124
	else_opt:  else.    (17)

	.  reduce 17 (src line 78)


state 125
	else:  kELSE.opt_stmts 
	opt_stmts: .    (3)

	kVAR  shift 10
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 13
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 3 (src line 50)

	opt_stmts  goto 139
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 9
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 126
	elifs:  elifs elif.    (14)

	.  reduce 14 (src line 71)


state 127
	elif:  kELIF expr.kTHEN opt_stmts 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 41
	kOR  shift 42
	kTHEN  shift 140
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 128
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (87)

	kELSE  shift 143
	.  reduce 87 (src line 196)

	array_else_opt  goto 141
	array_else  goto 142

state 129
	array_elifs_opt:  array_elifs.    (81)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 131
	.  reduce 81 (src line 185)

	array_elif  goto 144

state 130
	array_elifs:  array_elif.    (84)

	.  reduce 84 (src line 189)


state 131
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 145
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 132
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field:  '[' expr ']' ':' expr.    (61)

	kAND  shift 41
	kOR  shift 42
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  reduce 61 (src line 139)


state 133
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (70)

	kELSE  shift 148
	.  reduce 70 (src line 160)

	object_else_opt  goto 146
	object_else  goto 147

state 134
	object_elifs_opt:  object_elifs.    (64)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 136
	.  reduce 64 (src line 149)

	object_elif  goto 149

state 135
	object_elifs:  object_elif.    (67)

	.  reduce 67 (src line 153)


state 136
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kFALSE  shift 22
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 150
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 137
	for_stmt:  kFOR for_args kIN expr kDO opt_stmts kEND.    (20)

	.  reduce 20 (src line 85)


state 138
	if_expr:  kIF expr kTHEN opt_stmts elifs_opt else_opt kEND.    (11)

	.  reduce 11 (src line 61)


state 139
	else:  kELSE opt_stmts.    (19)

	.  reduce 19 (src line 81)


state 140
	elif:  kELIF expr kTHEN.opt_stmts 
	opt_stmts: .    (3)

	kVAR  shift 10
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 13
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 3 (src line 50)

	opt_stmts  goto 151
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 9
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24

state 141
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 152
	.  error


state 142
	array_else_opt:  array_else.    (86)

	.  reduce 86 (src line 195)


state 143
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (74)

	kFALSE  shift 22
	kIF  shift 59
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 74 (src line 169)

	expr  goto 57
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 153
	array_elems  goto 55
	array_elem  goto 56
	array_if  goto 58

state 144
	array_elifs:  array_elifs array_elif.    (83)

	.  reduce 83 (src line 188)


state 145
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kAND  shift 41
	kOR  shift 42
	kTHEN  shift 154
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 146
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 155
	.  error


state 147
	object_else_opt:  object_else.    (69)

	.  reduce 69 (src line 159)


state 148
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (56)

	kIF  shift 66
	ID  shift 63
	'['  shift 64
	.  reduce 56 (src line 132)

	object_fields_opt  goto 156
	object_fields  goto 61
	object_field  goto 62
	object_if  goto 65

state 149
	object_elifs:  object_elifs object_elif.    (66)

	.  reduce 66 (src line 152)


state 150
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kAND  shift 41
	kOR  shift 42
	kTHEN  shift 157
	'<'  shift 35
	LE  shift 36
	'>'  shift 37
	GE  shift 38
	EQ  shift 39
	NE  shift 40
	'+'  shift 31
	'-'  shift 32
	'*'  shift 33
	'/'  shift 34
	.  error


state 151
	elif:  kELIF expr kTHEN opt_stmts.    (16)

	.  reduce 16 (src line 74)


state 152
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (80)

	.  reduce 80 (src line 178)


state 153
	array_else:  kELSE array_elems_opt.    (88)

	.  reduce 88 (src line 198)


state 154
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (74)

	kFALSE  shift 22
	kIF  shift 59
	kNOT  shift 14
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 15
	'-'  shift 16
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 74 (src line 169)

	expr  goto 57
	unary_expr  goto 11
	expr3  goto 17
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 158
	array_elems  goto 55
	array_elem  goto 56
	array_if  goto 58

state 155
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (63)

	.  reduce 63 (src line 142)


state 156
	object_else:  kELSE object_fields_opt.    (71)

	.  reduce 71 (src line 162)


state 157
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (56)

	kIF  shift 66
	ID  shift 63
	'['  shift 64
	.  reduce 56 (src line 132)

	object_fields_opt  goto 159
	object_fields  goto 61
	object_field  goto 62
	object_if  goto 65

state 158
	array_elif:  kELIF expr kTHEN array_elems_opt.    (85)

	.  reduce 85 (src line 191)


state 159
	object_elif:  kELIF expr kTHEN object_fields_opt.    (68)

	.  reduce 68 (src line 155)


44 terminals, 39 nonterminals
91 grammar rules, 160/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
88 working sets used
memory: parser 346/120000
68 extra closures
779 shift entries, 37 exceptions
92 goto entries
212 entries saved by goto default
Optimizer space used: output 507/120000
507 table entries, 162 zero
maximum spread: 44, maximum offset: 157
