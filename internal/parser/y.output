
state 0
	$accept: .program $end 
	opt_stmts: .    (3)

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 3 (src line 50)

	program  goto 1
	opt_stmts  goto 2
	stmts  goto 3
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  opt_stmts.    (1)

	.  reduce 1 (src line 47)


state 3
	opt_stmts:  stmts.    (2)
	stmts:  stmts.stmt 

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 2 (src line 49)

	stmt  goto 28
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 4
	stmts:  stmt.    (5)

	.  reduce 5 (src line 53)


state 5
	stmt:  assignment_stmt.';' 

	';'  shift 29
	.  error


state 6
	stmt:  var_decl_stmt.';' 

	';'  shift 30
	.  error


state 7
	stmt:  expr.';' 
	assignment_stmt:  expr.'=' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	';'  shift 31
	'='  shift 32
	.  error


state 8
	stmt:  for_stmt.    (9)

	.  reduce 9 (src line 58)


state 9
	var_decl_stmt:  kVAR.ID 
	var_decl_stmt:  kVAR.ID '=' expr 

	ID  shift 45
	.  error


state 10
	expr:  unary_expr.    (25)

	.  reduce 25 (src line 97)


state 11
	expr:  if_expr.    (26)

	.  reduce 26 (src line 98)


state 12
	for_stmt:  kFOR.for_args kIN expr kDO stmts kEND 

	ID  shift 47
	.  error

	for_args  goto 46

state 13
	unary_expr:  kNOT.unary_expr 

	kFALSE  shift 22
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	unary_expr  goto 48
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 14
	unary_expr:  '+'.unary_expr 

	kFALSE  shift 22
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	unary_expr  goto 49
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 15
	unary_expr:  '-'.unary_expr 

	kFALSE  shift 22
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	unary_expr  goto 50
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 16
	unary_expr:  expr3.    (42)
	expr3:  expr3.'[' expr ']' 
	expr3:  expr3.'.' ID 
	expr3:  expr3.'(' ')' 

	'['  shift 51
	'.'  shift 52
	'('  shift 53
	.  reduce 42 (src line 115)


state 17
	if_expr:  kIF.expr kTHEN stmts elifs_opt else_opt kEND 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 54
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 18
	expr3:  STRING.    (43)

	.  reduce 43 (src line 117)


state 19
	expr3:  NUMBER.    (44)

	.  reduce 44 (src line 118)


state 20
	expr3:  ID.    (45)

	.  reduce 45 (src line 119)


state 21
	expr3:  kTRUE.    (46)

	.  reduce 46 (src line 120)


state 22
	expr3:  kFALSE.    (47)

	.  reduce 47 (src line 121)


state 23
	expr3:  array_literal.    (48)

	.  reduce 48 (src line 122)


state 24
	expr3:  object_literal.    (49)

	.  reduce 49 (src line 123)


state 25
	expr3:  '('.expr ')' 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 55
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 26
	array_literal:  '['.array_elems_opt ']' 
	array_elems_opt: .    (78)

	kFALSE  shift 22
	kIF  shift 61
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 78 (src line 175)

	expr  goto 58
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 56
	array_elems  goto 57
	array_elem  goto 59
	array_if  goto 60

state 27
	object_literal:  '{'.object_fields_opt '}' 
	object_fields_opt: .    (57)

	kIF  shift 69
	ID  shift 66
	'['  shift 67
	.  reduce 57 (src line 133)

	object_fields_opt  goto 62
	object_fields  goto 63
	object_field_simple  goto 64
	object_field  goto 65
	object_if  goto 68

state 28
	stmts:  stmts stmt.    (4)

	.  reduce 4 (src line 52)


state 29
	stmt:  assignment_stmt ';'.    (6)

	.  reduce 6 (src line 55)


state 30
	stmt:  var_decl_stmt ';'.    (7)

	.  reduce 7 (src line 56)


state 31
	stmt:  expr ';'.    (8)

	.  reduce 8 (src line 57)


state 32
	assignment_stmt:  expr '='.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 70
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 33
	expr:  expr '+'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 71
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 34
	expr:  expr '-'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 72
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 35
	expr:  expr '*'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 73
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 36
	expr:  expr '/'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 74
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 37
	expr:  expr '<'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 75
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 38
	expr:  expr LE.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 76
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 39
	expr:  expr '>'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 77
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 40
	expr:  expr GE.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 78
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 41
	expr:  expr EQ.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 79
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 42
	expr:  expr NE.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 80
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 43
	expr:  expr kAND.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 81
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 44
	expr:  expr kOR.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 82
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 45
	var_decl_stmt:  kVAR ID.    (23)
	var_decl_stmt:  kVAR ID.'=' expr 

	'='  shift 83
	.  reduce 23 (src line 94)


state 46
	for_stmt:  kFOR for_args.kIN expr kDO stmts kEND 
	for_args:  for_args.',' ID 

	kIN  shift 84
	','  shift 85
	.  error


state 47
	for_args:  ID.    (21)

	.  reduce 21 (src line 90)


state 48
	unary_expr:  kNOT unary_expr.    (39)

	.  reduce 39 (src line 112)


state 49
	unary_expr:  '+' unary_expr.    (40)

	.  reduce 40 (src line 113)


state 50
	unary_expr:  '-' unary_expr.    (41)

	.  reduce 41 (src line 114)


state 51
	expr3:  expr3 '['.expr ']' 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 86
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 52
	expr3:  expr3 '.'.ID 

	ID  shift 87
	.  error


state 53
	expr3:  expr3 '('.')' 

	')'  shift 88
	.  error


state 54
	if_expr:  kIF expr.kTHEN stmts elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 89
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 55
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr3:  '(' expr.')' 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	')'  shift 90
	.  error


state 56
	array_literal:  '[' array_elems_opt.']' 

	']'  shift 91
	.  error


state 57
	array_elems_opt:  array_elems.expr_opt 
	array_elems:  array_elems.array_elem 
	expr_opt: .    (85)

	kFALSE  shift 22
	kIF  shift 61
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 85 (src line 191)

	expr  goto 94
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24
	expr_opt  goto 92
	array_elem  goto 93
	array_if  goto 60

state 58
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elems_opt:  expr.    (77)
	array_elem:  expr.',' 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	','  shift 95
	.  reduce 77 (src line 174)


state 59
	array_elems:  array_elem.    (80)

	.  reduce 80 (src line 178)


state 60
	array_elem:  array_if.    (82)

	.  reduce 82 (src line 181)


state 61
	if_expr:  kIF.expr kTHEN stmts elifs_opt else_opt kEND 
	array_if:  kIF.expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 96
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 62
	object_literal:  '{' object_fields_opt.'}' 

	'}'  shift 97
	.  error


state 63
	object_fields_opt:  object_fields.object_field_simple_opt 
	object_fields:  object_fields.object_field 
	object_field_simple_opt: .    (61)

	kIF  shift 69
	ID  shift 66
	'['  shift 67
	.  reduce 61 (src line 139)

	object_field_simple_opt  goto 98
	object_field_simple  goto 100
	object_field  goto 99
	object_if  goto 68

state 64
	object_fields_opt:  object_field_simple.    (56)
	object_field:  object_field_simple.',' 

	','  shift 101
	.  reduce 56 (src line 132)


state 65
	object_fields:  object_field.    (59)

	.  reduce 59 (src line 136)


state 66
	object_field_simple:  ID.':' expr 

	':'  shift 102
	.  error


state 67
	object_field_simple:  '['.expr ']' ':' expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 103
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 68
	object_field:  object_if.    (63)

	.  reduce 63 (src line 142)


state 69
	object_if:  kIF.expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 104
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 70
	assignment_stmt:  expr '=' expr.    (22)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 22 (src line 92)


state 71
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (27)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 35
	'/'  shift 36
	.  reduce 27 (src line 99)


state 72
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (28)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'*'  shift 35
	'/'  shift 36
	.  reduce 28 (src line 100)


state 73
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (29)
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 29 (src line 101)


state 74
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (30)
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	.  reduce 30 (src line 102)


state 75
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (31)
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 31 (src line 103)


state 76
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (32)
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 32 (src line 104)


state 77
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr '>' expr.    (33)
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 33 (src line 105)


state 78
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (34)
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 34 (src line 106)


state 79
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (35)
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 35 (src line 107)


state 80
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (36)
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	'<'  error
	LE  error
	'>'  error
	GE  error
	EQ  error
	NE  error
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 36 (src line 108)


state 81
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr kAND expr.    (37)
	expr:  expr.kOR expr 

	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 37 (src line 109)


state 82
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr:  expr kOR expr.    (38)

	kAND  shift 43
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 38 (src line 110)


state 83
	var_decl_stmt:  kVAR ID '='.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 105
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 84
	for_stmt:  kFOR for_args kIN.expr kDO stmts kEND 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 106
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 85
	for_args:  for_args ','.ID 

	ID  shift 107
	.  error


state 86
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	expr3:  expr3 '[' expr.']' 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	']'  shift 108
	.  error


state 87
	expr3:  expr3 '.' ID.    (51)

	.  reduce 51 (src line 125)


state 88
	expr3:  expr3 '(' ')'.    (52)

	.  reduce 52 (src line 126)


state 89
	if_expr:  kIF expr kTHEN.stmts elifs_opt else_opt kEND 

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	stmts  goto 109
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 90
	expr3:  '(' expr ')'.    (53)

	.  reduce 53 (src line 127)


state 91
	array_literal:  '[' array_elems_opt ']'.    (75)

	.  reduce 75 (src line 171)


state 92
	array_elems_opt:  array_elems expr_opt.    (76)

	.  reduce 76 (src line 173)


state 93
	array_elems:  array_elems array_elem.    (79)

	.  reduce 79 (src line 177)


state 94
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elem:  expr.',' 
	expr_opt:  expr.    (84)

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	','  shift 95
	.  reduce 84 (src line 190)


state 95
	array_elem:  expr ','.    (81)

	.  reduce 81 (src line 180)


state 96
	if_expr:  kIF expr.kTHEN stmts elifs_opt else_opt kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_if:  kIF expr.kTHEN array_elems_opt array_elifs_opt array_else_opt kEND 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 110
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 97
	object_literal:  '{' object_fields_opt '}'.    (54)

	.  reduce 54 (src line 129)


state 98
	object_fields_opt:  object_fields object_field_simple_opt.    (55)

	.  reduce 55 (src line 131)


state 99
	object_fields:  object_fields object_field.    (58)

	.  reduce 58 (src line 135)


state 100
	object_field_simple_opt:  object_field_simple.    (60)
	object_field:  object_field_simple.',' 

	','  shift 101
	.  reduce 60 (src line 138)


state 101
	object_field:  object_field_simple ','.    (62)

	.  reduce 62 (src line 141)


state 102
	object_field_simple:  ID ':'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 111
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 103
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field_simple:  '[' expr.']' ':' expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	']'  shift 112
	.  error


state 104
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_if:  kIF expr.kTHEN object_fields_opt object_elifs_opt object_else_opt kEND 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 113
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 105
	var_decl_stmt:  kVAR ID '=' expr.    (24)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 24 (src line 95)


state 106
	for_stmt:  kFOR for_args kIN expr.kDO stmts kEND 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kDO  shift 114
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 107
	for_args:  for_args ',' ID.    (20)

	.  reduce 20 (src line 89)


state 108
	expr3:  expr3 '[' expr ']'.    (50)

	.  reduce 50 (src line 124)


state 109
	stmts:  stmts.stmt 
	if_expr:  kIF expr kTHEN stmts.elifs_opt else_opt kEND 
	elifs_opt: .    (12)

	kVAR  shift 9
	kELIF  shift 118
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 12 (src line 68)

	stmt  goto 28
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	elifs_opt  goto 115
	elifs  goto 116
	elif  goto 117
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 110
	if_expr:  kIF expr kTHEN.stmts elifs_opt else_opt kEND 
	array_if:  kIF expr kTHEN.array_elems_opt array_elifs_opt array_else_opt kEND 
	array_elems_opt: .    (78)

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 61
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 78 (src line 175)

	stmts  goto 109
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 120
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 119
	array_elems  goto 57
	array_elem  goto 59
	array_if  goto 60

state 111
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field_simple:  ID ':' expr.    (64)

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 64 (src line 144)


state 112
	object_field_simple:  '[' expr ']'.':' expr 

	':'  shift 121
	.  error


state 113
	object_if:  kIF expr kTHEN.object_fields_opt object_elifs_opt object_else_opt kEND 
	object_fields_opt: .    (57)

	kIF  shift 69
	ID  shift 66
	'['  shift 67
	.  reduce 57 (src line 133)

	object_fields_opt  goto 122
	object_fields  goto 63
	object_field_simple  goto 64
	object_field  goto 65
	object_if  goto 68

state 114
	for_stmt:  kFOR for_args kIN expr kDO.stmts kEND 

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	stmts  goto 123
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 115
	if_expr:  kIF expr kTHEN stmts elifs_opt.else_opt kEND 
	else_opt: .    (17)

	kELSE  shift 126
	.  reduce 17 (src line 78)

	else_opt  goto 124
	else  goto 125

state 116
	elifs_opt:  elifs.    (11)
	elifs:  elifs.elif 

	kELIF  shift 118
	.  reduce 11 (src line 67)

	elif  goto 127

state 117
	elifs:  elif.    (14)

	.  reduce 14 (src line 71)


state 118
	elif:  kELIF.expr kTHEN stmts 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 128
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 119
	array_if:  kIF expr kTHEN array_elems_opt.array_elifs_opt array_else_opt kEND 
	array_elifs_opt: .    (87)

	kELIF  shift 132
	.  reduce 87 (src line 194)

	array_elifs_opt  goto 129
	array_elifs  goto 130
	array_elif  goto 131

state 120
	stmt:  expr.';' 
	assignment_stmt:  expr.'=' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elems_opt:  expr.    (77)
	array_elem:  expr.',' 

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	';'  shift 31
	','  shift 95
	'='  shift 32
	.  reduce 77 (src line 174)


state 121
	object_field_simple:  '[' expr ']' ':'.expr 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 133
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 122
	object_if:  kIF expr kTHEN object_fields_opt.object_elifs_opt object_else_opt kEND 
	object_elifs_opt: .    (68)

	kELIF  shift 137
	.  reduce 68 (src line 155)

	object_elifs_opt  goto 134
	object_elifs  goto 135
	object_elif  goto 136

state 123
	stmts:  stmts.stmt 
	for_stmt:  kFOR for_args kIN expr kDO stmts.kEND 

	kVAR  shift 9
	kEND  shift 138
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	stmt  goto 28
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 124
	if_expr:  kIF expr kTHEN stmts elifs_opt else_opt.kEND 

	kEND  shift 139
	.  error


state 125
	else_opt:  else.    (16)

	.  reduce 16 (src line 77)


state 126
	else:  kELSE.stmts 

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	stmts  goto 140
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 127
	elifs:  elifs elif.    (13)

	.  reduce 13 (src line 70)


state 128
	elif:  kELIF expr.kTHEN stmts 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 141
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 129
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt.array_else_opt kEND 
	array_else_opt: .    (92)

	kELSE  shift 144
	.  reduce 92 (src line 204)

	array_else_opt  goto 142
	array_else  goto 143

state 130
	array_elifs_opt:  array_elifs.    (86)
	array_elifs:  array_elifs.array_elif 

	kELIF  shift 132
	.  reduce 86 (src line 193)

	array_elif  goto 145

state 131
	array_elifs:  array_elif.    (89)

	.  reduce 89 (src line 197)


state 132
	array_elif:  kELIF.expr kTHEN array_elems_opt 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 146
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 133
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_field_simple:  '[' expr ']' ':' expr.    (65)

	kAND  shift 43
	kOR  shift 44
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  reduce 65 (src line 145)


state 134
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt.object_else_opt kEND 
	object_else_opt: .    (73)

	kELSE  shift 149
	.  reduce 73 (src line 165)

	object_else_opt  goto 147
	object_else  goto 148

state 135
	object_elifs_opt:  object_elifs.    (67)
	object_elifs:  object_elifs.object_elif 

	kELIF  shift 137
	.  reduce 67 (src line 154)

	object_elif  goto 150

state 136
	object_elifs:  object_elif.    (70)

	.  reduce 70 (src line 158)


state 137
	object_elif:  kELIF.expr kTHEN object_fields_opt 

	kFALSE  shift 22
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	expr  goto 151
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 138
	for_stmt:  kFOR for_args kIN expr kDO stmts kEND.    (19)

	.  reduce 19 (src line 84)


state 139
	if_expr:  kIF expr kTHEN stmts elifs_opt else_opt kEND.    (10)

	.  reduce 10 (src line 60)


state 140
	stmts:  stmts.stmt 
	else:  kELSE stmts.    (18)

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 18 (src line 80)

	stmt  goto 28
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 141
	elif:  kELIF expr kTHEN.stmts 

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  error

	stmts  goto 152
	stmt  goto 4
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 142
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt.kEND 

	kEND  shift 153
	.  error


state 143
	array_else_opt:  array_else.    (91)

	.  reduce 91 (src line 203)


state 144
	array_else:  kELSE.array_elems_opt 
	array_elems_opt: .    (78)

	kFALSE  shift 22
	kIF  shift 61
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 78 (src line 175)

	expr  goto 58
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 154
	array_elems  goto 57
	array_elem  goto 59
	array_if  goto 60

state 145
	array_elifs:  array_elifs array_elif.    (88)

	.  reduce 88 (src line 196)


state 146
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	array_elif:  kELIF expr.kTHEN array_elems_opt 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 155
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 147
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt.kEND 

	kEND  shift 156
	.  error


state 148
	object_else_opt:  object_else.    (72)

	.  reduce 72 (src line 164)


state 149
	object_else:  kELSE.object_fields_opt 
	object_fields_opt: .    (57)

	kIF  shift 69
	ID  shift 66
	'['  shift 67
	.  reduce 57 (src line 133)

	object_fields_opt  goto 157
	object_fields  goto 63
	object_field_simple  goto 64
	object_field  goto 65
	object_if  goto 68

state 150
	object_elifs:  object_elifs object_elif.    (69)

	.  reduce 69 (src line 157)


state 151
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'<' expr 
	expr:  expr.LE expr 
	expr:  expr.'>' expr 
	expr:  expr.GE expr 
	expr:  expr.EQ expr 
	expr:  expr.NE expr 
	expr:  expr.kAND expr 
	expr:  expr.kOR expr 
	object_elif:  kELIF expr.kTHEN object_fields_opt 

	kAND  shift 43
	kOR  shift 44
	kTHEN  shift 158
	'<'  shift 37
	LE  shift 38
	'>'  shift 39
	GE  shift 40
	EQ  shift 41
	NE  shift 42
	'+'  shift 33
	'-'  shift 34
	'*'  shift 35
	'/'  shift 36
	.  error


state 152
	stmts:  stmts.stmt 
	elif:  kELIF expr kTHEN stmts.    (15)

	kVAR  shift 9
	kFALSE  shift 22
	kFOR  shift 12
	kIF  shift 17
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 15 (src line 73)

	stmt  goto 28
	assignment_stmt  goto 5
	var_decl_stmt  goto 6
	expr  goto 7
	for_stmt  goto 8
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24

state 153
	array_if:  kIF expr kTHEN array_elems_opt array_elifs_opt array_else_opt kEND.    (83)

	.  reduce 83 (src line 183)


state 154
	array_else:  kELSE array_elems_opt.    (93)

	.  reduce 93 (src line 206)


state 155
	array_elif:  kELIF expr kTHEN.array_elems_opt 
	array_elems_opt: .    (78)

	kFALSE  shift 22
	kIF  shift 61
	kNOT  shift 13
	kTRUE  shift 21
	NUMBER  shift 19
	STRING  shift 18
	ID  shift 20
	'+'  shift 14
	'-'  shift 15
	'['  shift 26
	'('  shift 25
	'{'  shift 27
	.  reduce 78 (src line 175)

	expr  goto 58
	if_expr  goto 11
	unary_expr  goto 10
	expr3  goto 16
	array_literal  goto 23
	object_literal  goto 24
	array_elems_opt  goto 159
	array_elems  goto 57
	array_elem  goto 59
	array_if  goto 60

state 156
	object_if:  kIF expr kTHEN object_fields_opt object_elifs_opt object_else_opt kEND.    (66)

	.  reduce 66 (src line 147)


state 157
	object_else:  kELSE object_fields_opt.    (74)

	.  reduce 74 (src line 167)


state 158
	object_elif:  kELIF expr kTHEN.object_fields_opt 
	object_fields_opt: .    (57)

	kIF  shift 69
	ID  shift 66
	'['  shift 67
	.  reduce 57 (src line 133)

	object_fields_opt  goto 160
	object_fields  goto 63
	object_field_simple  goto 64
	object_field  goto 65
	object_if  goto 68

state 159
	array_elif:  kELIF expr kTHEN array_elems_opt.    (90)

	.  reduce 90 (src line 199)


state 160
	object_elif:  kELIF expr kTHEN object_fields_opt.    (71)

	.  reduce 71 (src line 160)


44 terminals, 41 nonterminals
94 grammar rules, 161/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
90 working sets used
memory: parser 437/120000
124 extra closures
876 shift entries, 37 exceptions
95 goto entries
277 entries saved by goto default
Optimizer space used: output 691/120000
691 table entries, 262 zero
maximum spread: 44, maximum offset: 158
