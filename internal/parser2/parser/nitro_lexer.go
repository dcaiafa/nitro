// Code generated from NitroLexer.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type NitroLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var nitrolexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func nitrolexerLexerInit() {
	staticData := &nitrolexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "QSTR",
	}
	staticData.literalNames = []string{
		"", "'!info'", "'!param'", "'!flag'", "'and'", "'break'", "'catch'",
		"'continue'", "'defer'", "'else'", "'false'", "'for'", "'func'", "'if'",
		"'import'", "'nil'", "'not'", "'or'", "'return'", "'throw'", "'true'",
		"'try'", "'var'", "'while'", "'yield'", "'='", "'+='", "'-='", "'*='",
		"'/='", "'%='", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'+'",
		"'-'", "'*'", "'/'", "'%'", "'++'", "'--'", "'?'", "';'", "','", "':'",
		"'.'", "'('", "')'", "'['", "']'", "'{'", "'}'", "'->'", "'&'", "'|'",
		"'...'",
	}
	staticData.symbolicNames = []string{
		"", "M_INFO", "M_PARAM", "M_FLAG", "AND", "BREAK", "CATCH", "CONTINUE",
		"DEFER", "ELSE", "FALSE", "FOR", "FUNC", "IF", "IMPORT", "NIL", "NOT",
		"OR", "RETURN", "THROW", "TRUE", "TRY", "VAR", "WHILE", "YIELD", "ASSIGN",
		"ASSIGN_ADD", "ASSIGN_SUB", "ASSIGN_MUL", "ASSIGN_DIV", "ASSIGN_MOD",
		"EQ", "NE", "LT", "LE", "GT", "GE", "ADD", "SUB", "MUL", "DIV", "MOD",
		"INC", "DEC", "QUESTION_MARK", "SEMICOLON", "COMMA", "COLON", "PERIOD",
		"OPAREN", "CPAREN", "OBRACKET", "CBRACKET", "OCURLY", "CCURLY", "ARROW",
		"LAMBDA", "PIPE", "EXPAND", "NUMBER", "ID", "REGEX", "NEWLINE", "CHAR",
		"COMMENT", "WS", "STRING", "LDQUOTE",
	}
	staticData.ruleNames = []string{
		"M_INFO", "M_PARAM", "M_FLAG", "AND", "BREAK", "CATCH", "CONTINUE",
		"DEFER", "ELSE", "FALSE", "FOR", "FUNC", "IF", "IMPORT", "NIL", "NOT",
		"OR", "RETURN", "THROW", "TRUE", "TRY", "VAR", "WHILE", "YIELD", "ASSIGN",
		"ASSIGN_ADD", "ASSIGN_SUB", "ASSIGN_MUL", "ASSIGN_DIV", "ASSIGN_MOD",
		"EQ", "NE", "LT", "LE", "GT", "GE", "ADD", "SUB", "MUL", "DIV", "MOD",
		"INC", "DEC", "QUESTION_MARK", "SEMICOLON", "COMMA", "COLON", "PERIOD",
		"OPAREN", "CPAREN", "OBRACKET", "CBRACKET", "OCURLY", "CCURLY", "ARROW",
		"LAMBDA", "PIPE", "EXPAND", "NUMBER", "ID", "REGEX", "NEWLINE", "CHAR",
		"HEX_DIGIT", "COMMENT", "WS", "LDQUOTE", "QUOTED_TEXT", "QUOTED_ESCAPE",
		"STRING",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 67, 442, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7,
		56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61,
		2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2,
		67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
		2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1,
		27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30,
		1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1,
		35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39,
		1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1,
		44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49,
		1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1,
		54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58,
		4, 58, 355, 8, 58, 11, 58, 12, 58, 356, 1, 58, 1, 58, 4, 58, 361, 8, 58,
		11, 58, 12, 58, 362, 3, 58, 365, 8, 58, 1, 59, 1, 59, 5, 59, 369, 8, 59,
		10, 59, 12, 59, 372, 9, 59, 1, 60, 1, 60, 1, 60, 1, 60, 5, 60, 378, 8,
		60, 10, 60, 12, 60, 381, 9, 60, 1, 60, 1, 60, 1, 61, 3, 61, 386, 8, 61,
		1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 4, 62, 394, 8, 62, 11, 62, 12,
		62, 395, 3, 62, 398, 8, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 5,
		64, 406, 8, 64, 10, 64, 12, 64, 409, 9, 64, 1, 64, 1, 64, 1, 65, 4, 65,
		414, 8, 65, 11, 65, 12, 65, 415, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1,
		66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68,
		1, 68, 3, 68, 435, 8, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 69, 1, 69, 0,
		0, 70, 2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8, 18, 9, 20, 10,
		22, 11, 24, 12, 26, 13, 28, 14, 30, 15, 32, 16, 34, 17, 36, 18, 38, 19,
		40, 20, 42, 21, 44, 22, 46, 23, 48, 24, 50, 25, 52, 26, 54, 27, 56, 28,
		58, 29, 60, 30, 62, 31, 64, 32, 66, 33, 68, 34, 70, 35, 72, 36, 74, 37,
		76, 38, 78, 39, 80, 40, 82, 41, 84, 42, 86, 43, 88, 44, 90, 45, 92, 46,
		94, 47, 96, 48, 98, 49, 100, 50, 102, 51, 104, 52, 106, 53, 108, 54, 110,
		55, 112, 56, 114, 57, 116, 58, 118, 59, 120, 60, 122, 61, 124, 62, 126,
		63, 128, 0, 130, 64, 132, 65, 134, 67, 136, 0, 138, 0, 140, 66, 2, 0, 1,
		11, 1, 0, 48, 57, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90,
		95, 95, 97, 122, 1, 0, 96, 96, 5, 0, 39, 39, 92, 92, 110, 110, 114, 114,
		116, 116, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 3, 0, 48, 57, 65, 70, 97,
		102, 1, 0, 10, 10, 2, 0, 9, 9, 32, 32, 4, 0, 10, 10, 13, 13, 34, 34, 92,
		92, 5, 0, 34, 34, 92, 92, 110, 110, 114, 114, 116, 116, 450, 0, 2, 1, 0,
		0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 10, 1, 0,
		0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1, 0, 0, 0, 0, 18, 1,
		0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 26,
		1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 32, 1, 0, 0, 0, 0,
		34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0, 0, 0, 0, 40, 1, 0, 0, 0,
		0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1, 0, 0, 0, 0, 48, 1, 0, 0,
		0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0, 0, 0, 0, 56, 1, 0,
		0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62, 1, 0, 0, 0, 0, 64, 1,
		0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 70, 1, 0, 0, 0, 0, 72,
		1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0, 0, 0, 78, 1, 0, 0, 0, 0,
		80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84, 1, 0, 0, 0, 0, 86, 1, 0, 0, 0,
		0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 92, 1, 0, 0, 0, 0, 94, 1, 0, 0,
		0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 100, 1, 0, 0, 0, 0, 102, 1,
		0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 106, 1, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0,
		110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 114, 1, 0, 0, 0, 0, 116, 1, 0,
		0, 0, 0, 118, 1, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 124,
		1, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 130, 1, 0, 0, 0, 0, 132, 1, 0, 0, 0,
		0, 134, 1, 0, 0, 0, 1, 136, 1, 0, 0, 0, 1, 138, 1, 0, 0, 0, 1, 140, 1,
		0, 0, 0, 2, 142, 1, 0, 0, 0, 4, 148, 1, 0, 0, 0, 6, 155, 1, 0, 0, 0, 8,
		161, 1, 0, 0, 0, 10, 165, 1, 0, 0, 0, 12, 171, 1, 0, 0, 0, 14, 177, 1,
		0, 0, 0, 16, 186, 1, 0, 0, 0, 18, 192, 1, 0, 0, 0, 20, 197, 1, 0, 0, 0,
		22, 203, 1, 0, 0, 0, 24, 207, 1, 0, 0, 0, 26, 212, 1, 0, 0, 0, 28, 215,
		1, 0, 0, 0, 30, 222, 1, 0, 0, 0, 32, 226, 1, 0, 0, 0, 34, 230, 1, 0, 0,
		0, 36, 233, 1, 0, 0, 0, 38, 240, 1, 0, 0, 0, 40, 246, 1, 0, 0, 0, 42, 251,
		1, 0, 0, 0, 44, 255, 1, 0, 0, 0, 46, 259, 1, 0, 0, 0, 48, 265, 1, 0, 0,
		0, 50, 271, 1, 0, 0, 0, 52, 273, 1, 0, 0, 0, 54, 276, 1, 0, 0, 0, 56, 279,
		1, 0, 0, 0, 58, 282, 1, 0, 0, 0, 60, 285, 1, 0, 0, 0, 62, 288, 1, 0, 0,
		0, 64, 291, 1, 0, 0, 0, 66, 294, 1, 0, 0, 0, 68, 296, 1, 0, 0, 0, 70, 299,
		1, 0, 0, 0, 72, 301, 1, 0, 0, 0, 74, 304, 1, 0, 0, 0, 76, 306, 1, 0, 0,
		0, 78, 308, 1, 0, 0, 0, 80, 310, 1, 0, 0, 0, 82, 312, 1, 0, 0, 0, 84, 314,
		1, 0, 0, 0, 86, 317, 1, 0, 0, 0, 88, 320, 1, 0, 0, 0, 90, 322, 1, 0, 0,
		0, 92, 324, 1, 0, 0, 0, 94, 326, 1, 0, 0, 0, 96, 328, 1, 0, 0, 0, 98, 330,
		1, 0, 0, 0, 100, 332, 1, 0, 0, 0, 102, 334, 1, 0, 0, 0, 104, 336, 1, 0,
		0, 0, 106, 338, 1, 0, 0, 0, 108, 340, 1, 0, 0, 0, 110, 342, 1, 0, 0, 0,
		112, 345, 1, 0, 0, 0, 114, 347, 1, 0, 0, 0, 116, 349, 1, 0, 0, 0, 118,
		354, 1, 0, 0, 0, 120, 366, 1, 0, 0, 0, 122, 373, 1, 0, 0, 0, 124, 385,
		1, 0, 0, 0, 126, 389, 1, 0, 0, 0, 128, 401, 1, 0, 0, 0, 130, 403, 1, 0,
		0, 0, 132, 413, 1, 0, 0, 0, 134, 419, 1, 0, 0, 0, 136, 424, 1, 0, 0, 0,
		138, 428, 1, 0, 0, 0, 140, 438, 1, 0, 0, 0, 142, 143, 5, 33, 0, 0, 143,
		144, 5, 105, 0, 0, 144, 145, 5, 110, 0, 0, 145, 146, 5, 102, 0, 0, 146,
		147, 5, 111, 0, 0, 147, 3, 1, 0, 0, 0, 148, 149, 5, 33, 0, 0, 149, 150,
		5, 112, 0, 0, 150, 151, 5, 97, 0, 0, 151, 152, 5, 114, 0, 0, 152, 153,
		5, 97, 0, 0, 153, 154, 5, 109, 0, 0, 154, 5, 1, 0, 0, 0, 155, 156, 5, 33,
		0, 0, 156, 157, 5, 102, 0, 0, 157, 158, 5, 108, 0, 0, 158, 159, 5, 97,
		0, 0, 159, 160, 5, 103, 0, 0, 160, 7, 1, 0, 0, 0, 161, 162, 5, 97, 0, 0,
		162, 163, 5, 110, 0, 0, 163, 164, 5, 100, 0, 0, 164, 9, 1, 0, 0, 0, 165,
		166, 5, 98, 0, 0, 166, 167, 5, 114, 0, 0, 167, 168, 5, 101, 0, 0, 168,
		169, 5, 97, 0, 0, 169, 170, 5, 107, 0, 0, 170, 11, 1, 0, 0, 0, 171, 172,
		5, 99, 0, 0, 172, 173, 5, 97, 0, 0, 173, 174, 5, 116, 0, 0, 174, 175, 5,
		99, 0, 0, 175, 176, 5, 104, 0, 0, 176, 13, 1, 0, 0, 0, 177, 178, 5, 99,
		0, 0, 178, 179, 5, 111, 0, 0, 179, 180, 5, 110, 0, 0, 180, 181, 5, 116,
		0, 0, 181, 182, 5, 105, 0, 0, 182, 183, 5, 110, 0, 0, 183, 184, 5, 117,
		0, 0, 184, 185, 5, 101, 0, 0, 185, 15, 1, 0, 0, 0, 186, 187, 5, 100, 0,
		0, 187, 188, 5, 101, 0, 0, 188, 189, 5, 102, 0, 0, 189, 190, 5, 101, 0,
		0, 190, 191, 5, 114, 0, 0, 191, 17, 1, 0, 0, 0, 192, 193, 5, 101, 0, 0,
		193, 194, 5, 108, 0, 0, 194, 195, 5, 115, 0, 0, 195, 196, 5, 101, 0, 0,
		196, 19, 1, 0, 0, 0, 197, 198, 5, 102, 0, 0, 198, 199, 5, 97, 0, 0, 199,
		200, 5, 108, 0, 0, 200, 201, 5, 115, 0, 0, 201, 202, 5, 101, 0, 0, 202,
		21, 1, 0, 0, 0, 203, 204, 5, 102, 0, 0, 204, 205, 5, 111, 0, 0, 205, 206,
		5, 114, 0, 0, 206, 23, 1, 0, 0, 0, 207, 208, 5, 102, 0, 0, 208, 209, 5,
		117, 0, 0, 209, 210, 5, 110, 0, 0, 210, 211, 5, 99, 0, 0, 211, 25, 1, 0,
		0, 0, 212, 213, 5, 105, 0, 0, 213, 214, 5, 102, 0, 0, 214, 27, 1, 0, 0,
		0, 215, 216, 5, 105, 0, 0, 216, 217, 5, 109, 0, 0, 217, 218, 5, 112, 0,
		0, 218, 219, 5, 111, 0, 0, 219, 220, 5, 114, 0, 0, 220, 221, 5, 116, 0,
		0, 221, 29, 1, 0, 0, 0, 222, 223, 5, 110, 0, 0, 223, 224, 5, 105, 0, 0,
		224, 225, 5, 108, 0, 0, 225, 31, 1, 0, 0, 0, 226, 227, 5, 110, 0, 0, 227,
		228, 5, 111, 0, 0, 228, 229, 5, 116, 0, 0, 229, 33, 1, 0, 0, 0, 230, 231,
		5, 111, 0, 0, 231, 232, 5, 114, 0, 0, 232, 35, 1, 0, 0, 0, 233, 234, 5,
		114, 0, 0, 234, 235, 5, 101, 0, 0, 235, 236, 5, 116, 0, 0, 236, 237, 5,
		117, 0, 0, 237, 238, 5, 114, 0, 0, 238, 239, 5, 110, 0, 0, 239, 37, 1,
		0, 0, 0, 240, 241, 5, 116, 0, 0, 241, 242, 5, 104, 0, 0, 242, 243, 5, 114,
		0, 0, 243, 244, 5, 111, 0, 0, 244, 245, 5, 119, 0, 0, 245, 39, 1, 0, 0,
		0, 246, 247, 5, 116, 0, 0, 247, 248, 5, 114, 0, 0, 248, 249, 5, 117, 0,
		0, 249, 250, 5, 101, 0, 0, 250, 41, 1, 0, 0, 0, 251, 252, 5, 116, 0, 0,
		252, 253, 5, 114, 0, 0, 253, 254, 5, 121, 0, 0, 254, 43, 1, 0, 0, 0, 255,
		256, 5, 118, 0, 0, 256, 257, 5, 97, 0, 0, 257, 258, 5, 114, 0, 0, 258,
		45, 1, 0, 0, 0, 259, 260, 5, 119, 0, 0, 260, 261, 5, 104, 0, 0, 261, 262,
		5, 105, 0, 0, 262, 263, 5, 108, 0, 0, 263, 264, 5, 101, 0, 0, 264, 47,
		1, 0, 0, 0, 265, 266, 5, 121, 0, 0, 266, 267, 5, 105, 0, 0, 267, 268, 5,
		101, 0, 0, 268, 269, 5, 108, 0, 0, 269, 270, 5, 100, 0, 0, 270, 49, 1,
		0, 0, 0, 271, 272, 5, 61, 0, 0, 272, 51, 1, 0, 0, 0, 273, 274, 5, 43, 0,
		0, 274, 275, 5, 61, 0, 0, 275, 53, 1, 0, 0, 0, 276, 277, 5, 45, 0, 0, 277,
		278, 5, 61, 0, 0, 278, 55, 1, 0, 0, 0, 279, 280, 5, 42, 0, 0, 280, 281,
		5, 61, 0, 0, 281, 57, 1, 0, 0, 0, 282, 283, 5, 47, 0, 0, 283, 284, 5, 61,
		0, 0, 284, 59, 1, 0, 0, 0, 285, 286, 5, 37, 0, 0, 286, 287, 5, 61, 0, 0,
		287, 61, 1, 0, 0, 0, 288, 289, 5, 61, 0, 0, 289, 290, 5, 61, 0, 0, 290,
		63, 1, 0, 0, 0, 291, 292, 5, 33, 0, 0, 292, 293, 5, 61, 0, 0, 293, 65,
		1, 0, 0, 0, 294, 295, 5, 60, 0, 0, 295, 67, 1, 0, 0, 0, 296, 297, 5, 60,
		0, 0, 297, 298, 5, 61, 0, 0, 298, 69, 1, 0, 0, 0, 299, 300, 5, 62, 0, 0,
		300, 71, 1, 0, 0, 0, 301, 302, 5, 62, 0, 0, 302, 303, 5, 61, 0, 0, 303,
		73, 1, 0, 0, 0, 304, 305, 5, 43, 0, 0, 305, 75, 1, 0, 0, 0, 306, 307, 5,
		45, 0, 0, 307, 77, 1, 0, 0, 0, 308, 309, 5, 42, 0, 0, 309, 79, 1, 0, 0,
		0, 310, 311, 5, 47, 0, 0, 311, 81, 1, 0, 0, 0, 312, 313, 5, 37, 0, 0, 313,
		83, 1, 0, 0, 0, 314, 315, 5, 43, 0, 0, 315, 316, 5, 43, 0, 0, 316, 85,
		1, 0, 0, 0, 317, 318, 5, 45, 0, 0, 318, 319, 5, 45, 0, 0, 319, 87, 1, 0,
		0, 0, 320, 321, 5, 63, 0, 0, 321, 89, 1, 0, 0, 0, 322, 323, 5, 59, 0, 0,
		323, 91, 1, 0, 0, 0, 324, 325, 5, 44, 0, 0, 325, 93, 1, 0, 0, 0, 326, 327,
		5, 58, 0, 0, 327, 95, 1, 0, 0, 0, 328, 329, 5, 46, 0, 0, 329, 97, 1, 0,
		0, 0, 330, 331, 5, 40, 0, 0, 331, 99, 1, 0, 0, 0, 332, 333, 5, 41, 0, 0,
		333, 101, 1, 0, 0, 0, 334, 335, 5, 91, 0, 0, 335, 103, 1, 0, 0, 0, 336,
		337, 5, 93, 0, 0, 337, 105, 1, 0, 0, 0, 338, 339, 5, 123, 0, 0, 339, 107,
		1, 0, 0, 0, 340, 341, 5, 125, 0, 0, 341, 109, 1, 0, 0, 0, 342, 343, 5,
		45, 0, 0, 343, 344, 5, 62, 0, 0, 344, 111, 1, 0, 0, 0, 345, 346, 5, 38,
		0, 0, 346, 113, 1, 0, 0, 0, 347, 348, 5, 124, 0, 0, 348, 115, 1, 0, 0,
		0, 349, 350, 5, 46, 0, 0, 350, 351, 5, 46, 0, 0, 351, 352, 5, 46, 0, 0,
		352, 117, 1, 0, 0, 0, 353, 355, 7, 0, 0, 0, 354, 353, 1, 0, 0, 0, 355,
		356, 1, 0, 0, 0, 356, 354, 1, 0, 0, 0, 356, 357, 1, 0, 0, 0, 357, 364,
		1, 0, 0, 0, 358, 360, 5, 46, 0, 0, 359, 361, 7, 0, 0, 0, 360, 359, 1, 0,
		0, 0, 361, 362, 1, 0, 0, 0, 362, 360, 1, 0, 0, 0, 362, 363, 1, 0, 0, 0,
		363, 365, 1, 0, 0, 0, 364, 358, 1, 0, 0, 0, 364, 365, 1, 0, 0, 0, 365,
		119, 1, 0, 0, 0, 366, 370, 7, 1, 0, 0, 367, 369, 7, 2, 0, 0, 368, 367,
		1, 0, 0, 0, 369, 372, 1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 370, 371, 1, 0,
		0, 0, 371, 121, 1, 0, 0, 0, 372, 370, 1, 0, 0, 0, 373, 374, 5, 114, 0,
		0, 374, 375, 5, 96, 0, 0, 375, 379, 1, 0, 0, 0, 376, 378, 8, 3, 0, 0, 377,
		376, 1, 0, 0, 0, 378, 381, 1, 0, 0, 0, 379, 377, 1, 0, 0, 0, 379, 380,
		1, 0, 0, 0, 380, 382, 1, 0, 0, 0, 381, 379, 1, 0, 0, 0, 382, 383, 5, 96,
		0, 0, 383, 123, 1, 0, 0, 0, 384, 386, 5, 13, 0, 0, 385, 384, 1, 0, 0, 0,
		385, 386, 1, 0, 0, 0, 386, 387, 1, 0, 0, 0, 387, 388, 5, 10, 0, 0, 388,
		125, 1, 0, 0, 0, 389, 397, 5, 39, 0, 0, 390, 391, 5, 92, 0, 0, 391, 398,
		7, 4, 0, 0, 392, 394, 8, 5, 0, 0, 393, 392, 1, 0, 0, 0, 394, 395, 1, 0,
		0, 0, 395, 393, 1, 0, 0, 0, 395, 396, 1, 0, 0, 0, 396, 398, 1, 0, 0, 0,
		397, 390, 1, 0, 0, 0, 397, 393, 1, 0, 0, 0, 398, 399, 1, 0, 0, 0, 399,
		400, 5, 39, 0, 0, 400, 127, 1, 0, 0, 0, 401, 402, 7, 6, 0, 0, 402, 129,
		1, 0, 0, 0, 403, 407, 5, 35, 0, 0, 404, 406, 8, 7, 0, 0, 405, 404, 1, 0,
		0, 0, 406, 409, 1, 0, 0, 0, 407, 405, 1, 0, 0, 0, 407, 408, 1, 0, 0, 0,
		408, 410, 1, 0, 0, 0, 409, 407, 1, 0, 0, 0, 410, 411, 6, 64, 0, 0, 411,
		131, 1, 0, 0, 0, 412, 414, 7, 8, 0, 0, 413, 412, 1, 0, 0, 0, 414, 415,
		1, 0, 0, 0, 415, 413, 1, 0, 0, 0, 415, 416, 1, 0, 0, 0, 416, 417, 1, 0,
		0, 0, 417, 418, 6, 65, 0, 0, 418, 133, 1, 0, 0, 0, 419, 420, 5, 34, 0,
		0, 420, 421, 1, 0, 0, 0, 421, 422, 6, 66, 1, 0, 422, 423, 6, 66, 2, 0,
		423, 135, 1, 0, 0, 0, 424, 425, 8, 9, 0, 0, 425, 426, 1, 0, 0, 0, 426,
		427, 6, 67, 1, 0, 427, 137, 1, 0, 0, 0, 428, 434, 5, 92, 0, 0, 429, 435,
		7, 10, 0, 0, 430, 431, 5, 120, 0, 0, 431, 432, 3, 128, 63, 0, 432, 433,
		3, 128, 63, 0, 433, 435, 1, 0, 0, 0, 434, 429, 1, 0, 0, 0, 434, 430, 1,
		0, 0, 0, 435, 436, 1, 0, 0, 0, 436, 437, 6, 68, 1, 0, 437, 139, 1, 0, 0,
		0, 438, 439, 5, 34, 0, 0, 439, 440, 1, 0, 0, 0, 440, 441, 6, 69, 3, 0,
		441, 141, 1, 0, 0, 0, 13, 0, 1, 356, 362, 364, 370, 379, 385, 395, 397,
		407, 415, 434, 4, 6, 0, 0, 3, 0, 0, 2, 1, 0, 2, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// NitroLexerInit initializes any static state used to implement NitroLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewNitroLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NitroLexerInit() {
	staticData := &nitrolexerLexerStaticData
	staticData.once.Do(nitrolexerLexerInit)
}

// NewNitroLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewNitroLexer(input antlr.CharStream) *NitroLexer {
	NitroLexerInit()
	l := new(NitroLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &nitrolexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "NitroLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NitroLexer tokens.
const (
	NitroLexerM_INFO        = 1
	NitroLexerM_PARAM       = 2
	NitroLexerM_FLAG        = 3
	NitroLexerAND           = 4
	NitroLexerBREAK         = 5
	NitroLexerCATCH         = 6
	NitroLexerCONTINUE      = 7
	NitroLexerDEFER         = 8
	NitroLexerELSE          = 9
	NitroLexerFALSE         = 10
	NitroLexerFOR           = 11
	NitroLexerFUNC          = 12
	NitroLexerIF            = 13
	NitroLexerIMPORT        = 14
	NitroLexerNIL           = 15
	NitroLexerNOT           = 16
	NitroLexerOR            = 17
	NitroLexerRETURN        = 18
	NitroLexerTHROW         = 19
	NitroLexerTRUE          = 20
	NitroLexerTRY           = 21
	NitroLexerVAR           = 22
	NitroLexerWHILE         = 23
	NitroLexerYIELD         = 24
	NitroLexerASSIGN        = 25
	NitroLexerASSIGN_ADD    = 26
	NitroLexerASSIGN_SUB    = 27
	NitroLexerASSIGN_MUL    = 28
	NitroLexerASSIGN_DIV    = 29
	NitroLexerASSIGN_MOD    = 30
	NitroLexerEQ            = 31
	NitroLexerNE            = 32
	NitroLexerLT            = 33
	NitroLexerLE            = 34
	NitroLexerGT            = 35
	NitroLexerGE            = 36
	NitroLexerADD           = 37
	NitroLexerSUB           = 38
	NitroLexerMUL           = 39
	NitroLexerDIV           = 40
	NitroLexerMOD           = 41
	NitroLexerINC           = 42
	NitroLexerDEC           = 43
	NitroLexerQUESTION_MARK = 44
	NitroLexerSEMICOLON     = 45
	NitroLexerCOMMA         = 46
	NitroLexerCOLON         = 47
	NitroLexerPERIOD        = 48
	NitroLexerOPAREN        = 49
	NitroLexerCPAREN        = 50
	NitroLexerOBRACKET      = 51
	NitroLexerCBRACKET      = 52
	NitroLexerOCURLY        = 53
	NitroLexerCCURLY        = 54
	NitroLexerARROW         = 55
	NitroLexerLAMBDA        = 56
	NitroLexerPIPE          = 57
	NitroLexerEXPAND        = 58
	NitroLexerNUMBER        = 59
	NitroLexerID            = 60
	NitroLexerREGEX         = 61
	NitroLexerNEWLINE       = 62
	NitroLexerCHAR          = 63
	NitroLexerCOMMENT       = 64
	NitroLexerWS            = 65
	NitroLexerSTRING        = 66
	NitroLexerLDQUOTE       = 67
)

// NitroLexerQSTR is the NitroLexer mode.
const NitroLexerQSTR = 1
