// Code generated from NitroLexer.g4 by ANTLR 4.9.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 62, 409,
	8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6,
	4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12,
	9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9,
	17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22,
	4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4,
	28, 9, 28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33,
	9, 33, 4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9,
	38, 4, 39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43,
	4, 44, 9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4,
	49, 9, 49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54,
	9, 54, 4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9,
	59, 4, 60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6,
	3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3,
	15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18,
	3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3,
	20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22,
	3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27,
	3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3,
	31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35,
	3, 36, 3, 36, 3, 37, 3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3,
	41, 3, 41, 3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46,
	3, 46, 3, 47, 3, 47, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3,
	51, 3, 51, 3, 52, 3, 52, 3, 52, 3, 52, 3, 53, 6, 53, 322, 10, 53, 13, 53,
	14, 53, 323, 3, 53, 3, 53, 6, 53, 328, 10, 53, 13, 53, 14, 53, 329, 5,
	53, 332, 10, 53, 3, 54, 3, 54, 7, 54, 336, 10, 54, 12, 54, 14, 54, 339,
	11, 54, 3, 55, 3, 55, 3, 55, 3, 55, 7, 55, 345, 10, 55, 12, 55, 14, 55,
	348, 11, 55, 3, 55, 3, 55, 3, 56, 5, 56, 353, 10, 56, 3, 56, 3, 56, 3,
	57, 3, 57, 3, 57, 3, 57, 6, 57, 361, 10, 57, 13, 57, 14, 57, 362, 5, 57,
	365, 10, 57, 3, 57, 3, 57, 3, 58, 3, 58, 3, 59, 3, 59, 7, 59, 373, 10,
	59, 12, 59, 14, 59, 376, 11, 59, 3, 59, 3, 59, 3, 60, 6, 60, 381, 10, 60,
	13, 60, 14, 60, 382, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3,
	62, 3, 62, 3, 62, 3, 62, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 5, 63,
	402, 10, 63, 3, 63, 3, 63, 3, 64, 3, 64, 3, 64, 3, 64, 2, 2, 65, 4, 3,
	6, 4, 8, 5, 10, 6, 12, 7, 14, 8, 16, 9, 18, 10, 20, 11, 22, 12, 24, 13,
	26, 14, 28, 15, 30, 16, 32, 17, 34, 18, 36, 19, 38, 20, 40, 21, 42, 22,
	44, 23, 46, 24, 48, 25, 50, 26, 52, 27, 54, 28, 56, 29, 58, 30, 60, 31,
	62, 32, 64, 33, 66, 34, 68, 35, 70, 36, 72, 37, 74, 38, 76, 39, 78, 40,
	80, 41, 82, 42, 84, 43, 86, 44, 88, 45, 90, 46, 92, 47, 94, 48, 96, 49,
	98, 50, 100, 51, 102, 52, 104, 53, 106, 54, 108, 55, 110, 56, 112, 57,
	114, 58, 116, 2, 118, 59, 120, 60, 122, 62, 124, 2, 126, 2, 128, 61, 4,
	2, 3, 13, 3, 2, 50, 59, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67,
	92, 97, 97, 99, 124, 3, 2, 98, 98, 7, 2, 41, 41, 94, 94, 112, 112, 116,
	116, 118, 118, 6, 2, 12, 12, 15, 15, 41, 41, 94, 94, 5, 2, 50, 59, 67,
	72, 99, 104, 3, 2, 12, 12, 4, 2, 11, 11, 34, 34, 6, 2, 12, 12, 15, 15,
	36, 36, 94, 94, 7, 2, 36, 36, 94, 94, 112, 112, 116, 116, 118, 118, 2,
	417, 2, 4, 3, 2, 2, 2, 2, 6, 3, 2, 2, 2, 2, 8, 3, 2, 2, 2, 2, 10, 3, 2,
	2, 2, 2, 12, 3, 2, 2, 2, 2, 14, 3, 2, 2, 2, 2, 16, 3, 2, 2, 2, 2, 18, 3,
	2, 2, 2, 2, 20, 3, 2, 2, 2, 2, 22, 3, 2, 2, 2, 2, 24, 3, 2, 2, 2, 2, 26,
	3, 2, 2, 2, 2, 28, 3, 2, 2, 2, 2, 30, 3, 2, 2, 2, 2, 32, 3, 2, 2, 2, 2,
	34, 3, 2, 2, 2, 2, 36, 3, 2, 2, 2, 2, 38, 3, 2, 2, 2, 2, 40, 3, 2, 2, 2,
	2, 42, 3, 2, 2, 2, 2, 44, 3, 2, 2, 2, 2, 46, 3, 2, 2, 2, 2, 48, 3, 2, 2,
	2, 2, 50, 3, 2, 2, 2, 2, 52, 3, 2, 2, 2, 2, 54, 3, 2, 2, 2, 2, 56, 3, 2,
	2, 2, 2, 58, 3, 2, 2, 2, 2, 60, 3, 2, 2, 2, 2, 62, 3, 2, 2, 2, 2, 64, 3,
	2, 2, 2, 2, 66, 3, 2, 2, 2, 2, 68, 3, 2, 2, 2, 2, 70, 3, 2, 2, 2, 2, 72,
	3, 2, 2, 2, 2, 74, 3, 2, 2, 2, 2, 76, 3, 2, 2, 2, 2, 78, 3, 2, 2, 2, 2,
	80, 3, 2, 2, 2, 2, 82, 3, 2, 2, 2, 2, 84, 3, 2, 2, 2, 2, 86, 3, 2, 2, 2,
	2, 88, 3, 2, 2, 2, 2, 90, 3, 2, 2, 2, 2, 92, 3, 2, 2, 2, 2, 94, 3, 2, 2,
	2, 2, 96, 3, 2, 2, 2, 2, 98, 3, 2, 2, 2, 2, 100, 3, 2, 2, 2, 2, 102, 3,
	2, 2, 2, 2, 104, 3, 2, 2, 2, 2, 106, 3, 2, 2, 2, 2, 108, 3, 2, 2, 2, 2,
	110, 3, 2, 2, 2, 2, 112, 3, 2, 2, 2, 2, 114, 3, 2, 2, 2, 2, 118, 3, 2,
	2, 2, 2, 120, 3, 2, 2, 2, 2, 122, 3, 2, 2, 2, 3, 124, 3, 2, 2, 2, 3, 126,
	3, 2, 2, 2, 3, 128, 3, 2, 2, 2, 4, 130, 3, 2, 2, 2, 6, 136, 3, 2, 2, 2,
	8, 143, 3, 2, 2, 2, 10, 149, 3, 2, 2, 2, 12, 153, 3, 2, 2, 2, 14, 159,
	3, 2, 2, 2, 16, 165, 3, 2, 2, 2, 18, 174, 3, 2, 2, 2, 20, 180, 3, 2, 2,
	2, 22, 185, 3, 2, 2, 2, 24, 191, 3, 2, 2, 2, 26, 195, 3, 2, 2, 2, 28, 200,
	3, 2, 2, 2, 30, 203, 3, 2, 2, 2, 32, 210, 3, 2, 2, 2, 34, 214, 3, 2, 2,
	2, 36, 218, 3, 2, 2, 2, 38, 221, 3, 2, 2, 2, 40, 228, 3, 2, 2, 2, 42, 234,
	3, 2, 2, 2, 44, 239, 3, 2, 2, 2, 46, 243, 3, 2, 2, 2, 48, 247, 3, 2, 2,
	2, 50, 253, 3, 2, 2, 2, 52, 259, 3, 2, 2, 2, 54, 261, 3, 2, 2, 2, 56, 264,
	3, 2, 2, 2, 58, 267, 3, 2, 2, 2, 60, 269, 3, 2, 2, 2, 62, 272, 3, 2, 2,
	2, 64, 274, 3, 2, 2, 2, 66, 277, 3, 2, 2, 2, 68, 279, 3, 2, 2, 2, 70, 281,
	3, 2, 2, 2, 72, 283, 3, 2, 2, 2, 74, 285, 3, 2, 2, 2, 76, 287, 3, 2, 2,
	2, 78, 289, 3, 2, 2, 2, 80, 291, 3, 2, 2, 2, 82, 293, 3, 2, 2, 2, 84, 295,
	3, 2, 2, 2, 86, 297, 3, 2, 2, 2, 88, 299, 3, 2, 2, 2, 90, 301, 3, 2, 2,
	2, 92, 303, 3, 2, 2, 2, 94, 305, 3, 2, 2, 2, 96, 307, 3, 2, 2, 2, 98, 309,
	3, 2, 2, 2, 100, 312, 3, 2, 2, 2, 102, 314, 3, 2, 2, 2, 104, 316, 3, 2,
	2, 2, 106, 321, 3, 2, 2, 2, 108, 333, 3, 2, 2, 2, 110, 340, 3, 2, 2, 2,
	112, 352, 3, 2, 2, 2, 114, 356, 3, 2, 2, 2, 116, 368, 3, 2, 2, 2, 118,
	370, 3, 2, 2, 2, 120, 380, 3, 2, 2, 2, 122, 386, 3, 2, 2, 2, 124, 391,
	3, 2, 2, 2, 126, 395, 3, 2, 2, 2, 128, 405, 3, 2, 2, 2, 130, 131, 7, 35,
	2, 2, 131, 132, 7, 107, 2, 2, 132, 133, 7, 112, 2, 2, 133, 134, 7, 104,
	2, 2, 134, 135, 7, 113, 2, 2, 135, 5, 3, 2, 2, 2, 136, 137, 7, 35, 2, 2,
	137, 138, 7, 114, 2, 2, 138, 139, 7, 99, 2, 2, 139, 140, 7, 116, 2, 2,
	140, 141, 7, 99, 2, 2, 141, 142, 7, 111, 2, 2, 142, 7, 3, 2, 2, 2, 143,
	144, 7, 35, 2, 2, 144, 145, 7, 104, 2, 2, 145, 146, 7, 110, 2, 2, 146,
	147, 7, 99, 2, 2, 147, 148, 7, 105, 2, 2, 148, 9, 3, 2, 2, 2, 149, 150,
	7, 99, 2, 2, 150, 151, 7, 112, 2, 2, 151, 152, 7, 102, 2, 2, 152, 11, 3,
	2, 2, 2, 153, 154, 7, 100, 2, 2, 154, 155, 7, 116, 2, 2, 155, 156, 7, 103,
	2, 2, 156, 157, 7, 99, 2, 2, 157, 158, 7, 109, 2, 2, 158, 13, 3, 2, 2,
	2, 159, 160, 7, 101, 2, 2, 160, 161, 7, 99, 2, 2, 161, 162, 7, 118, 2,
	2, 162, 163, 7, 101, 2, 2, 163, 164, 7, 106, 2, 2, 164, 15, 3, 2, 2, 2,
	165, 166, 7, 101, 2, 2, 166, 167, 7, 113, 2, 2, 167, 168, 7, 112, 2, 2,
	168, 169, 7, 118, 2, 2, 169, 170, 7, 107, 2, 2, 170, 171, 7, 112, 2, 2,
	171, 172, 7, 119, 2, 2, 172, 173, 7, 103, 2, 2, 173, 17, 3, 2, 2, 2, 174,
	175, 7, 102, 2, 2, 175, 176, 7, 103, 2, 2, 176, 177, 7, 104, 2, 2, 177,
	178, 7, 103, 2, 2, 178, 179, 7, 116, 2, 2, 179, 19, 3, 2, 2, 2, 180, 181,
	7, 103, 2, 2, 181, 182, 7, 110, 2, 2, 182, 183, 7, 117, 2, 2, 183, 184,
	7, 103, 2, 2, 184, 21, 3, 2, 2, 2, 185, 186, 7, 104, 2, 2, 186, 187, 7,
	99, 2, 2, 187, 188, 7, 110, 2, 2, 188, 189, 7, 117, 2, 2, 189, 190, 7,
	103, 2, 2, 190, 23, 3, 2, 2, 2, 191, 192, 7, 104, 2, 2, 192, 193, 7, 113,
	2, 2, 193, 194, 7, 116, 2, 2, 194, 25, 3, 2, 2, 2, 195, 196, 7, 104, 2,
	2, 196, 197, 7, 119, 2, 2, 197, 198, 7, 112, 2, 2, 198, 199, 7, 101, 2,
	2, 199, 27, 3, 2, 2, 2, 200, 201, 7, 107, 2, 2, 201, 202, 7, 104, 2, 2,
	202, 29, 3, 2, 2, 2, 203, 204, 7, 107, 2, 2, 204, 205, 7, 111, 2, 2, 205,
	206, 7, 114, 2, 2, 206, 207, 7, 113, 2, 2, 207, 208, 7, 116, 2, 2, 208,
	209, 7, 118, 2, 2, 209, 31, 3, 2, 2, 2, 210, 211, 7, 112, 2, 2, 211, 212,
	7, 107, 2, 2, 212, 213, 7, 110, 2, 2, 213, 33, 3, 2, 2, 2, 214, 215, 7,
	112, 2, 2, 215, 216, 7, 113, 2, 2, 216, 217, 7, 118, 2, 2, 217, 35, 3,
	2, 2, 2, 218, 219, 7, 113, 2, 2, 219, 220, 7, 116, 2, 2, 220, 37, 3, 2,
	2, 2, 221, 222, 7, 116, 2, 2, 222, 223, 7, 103, 2, 2, 223, 224, 7, 118,
	2, 2, 224, 225, 7, 119, 2, 2, 225, 226, 7, 116, 2, 2, 226, 227, 7, 112,
	2, 2, 227, 39, 3, 2, 2, 2, 228, 229, 7, 118, 2, 2, 229, 230, 7, 106, 2,
	2, 230, 231, 7, 116, 2, 2, 231, 232, 7, 113, 2, 2, 232, 233, 7, 121, 2,
	2, 233, 41, 3, 2, 2, 2, 234, 235, 7, 118, 2, 2, 235, 236, 7, 116, 2, 2,
	236, 237, 7, 119, 2, 2, 237, 238, 7, 103, 2, 2, 238, 43, 3, 2, 2, 2, 239,
	240, 7, 118, 2, 2, 240, 241, 7, 116, 2, 2, 241, 242, 7, 123, 2, 2, 242,
	45, 3, 2, 2, 2, 243, 244, 7, 120, 2, 2, 244, 245, 7, 99, 2, 2, 245, 246,
	7, 116, 2, 2, 246, 47, 3, 2, 2, 2, 247, 248, 7, 121, 2, 2, 248, 249, 7,
	106, 2, 2, 249, 250, 7, 107, 2, 2, 250, 251, 7, 110, 2, 2, 251, 252, 7,
	103, 2, 2, 252, 49, 3, 2, 2, 2, 253, 254, 7, 123, 2, 2, 254, 255, 7, 107,
	2, 2, 255, 256, 7, 103, 2, 2, 256, 257, 7, 110, 2, 2, 257, 258, 7, 102,
	2, 2, 258, 51, 3, 2, 2, 2, 259, 260, 7, 63, 2, 2, 260, 53, 3, 2, 2, 2,
	261, 262, 7, 63, 2, 2, 262, 263, 7, 63, 2, 2, 263, 55, 3, 2, 2, 2, 264,
	265, 7, 35, 2, 2, 265, 266, 7, 63, 2, 2, 266, 57, 3, 2, 2, 2, 267, 268,
	7, 62, 2, 2, 268, 59, 3, 2, 2, 2, 269, 270, 7, 62, 2, 2, 270, 271, 7, 63,
	2, 2, 271, 61, 3, 2, 2, 2, 272, 273, 7, 64, 2, 2, 273, 63, 3, 2, 2, 2,
	274, 275, 7, 64, 2, 2, 275, 276, 7, 63, 2, 2, 276, 65, 3, 2, 2, 2, 277,
	278, 7, 45, 2, 2, 278, 67, 3, 2, 2, 2, 279, 280, 7, 47, 2, 2, 280, 69,
	3, 2, 2, 2, 281, 282, 7, 44, 2, 2, 282, 71, 3, 2, 2, 2, 283, 284, 7, 49,
	2, 2, 284, 73, 3, 2, 2, 2, 285, 286, 7, 39, 2, 2, 286, 75, 3, 2, 2, 2,
	287, 288, 7, 65, 2, 2, 288, 77, 3, 2, 2, 2, 289, 290, 7, 61, 2, 2, 290,
	79, 3, 2, 2, 2, 291, 292, 7, 46, 2, 2, 292, 81, 3, 2, 2, 2, 293, 294, 7,
	60, 2, 2, 294, 83, 3, 2, 2, 2, 295, 296, 7, 48, 2, 2, 296, 85, 3, 2, 2,
	2, 297, 298, 7, 42, 2, 2, 298, 87, 3, 2, 2, 2, 299, 300, 7, 43, 2, 2, 300,
	89, 3, 2, 2, 2, 301, 302, 7, 93, 2, 2, 302, 91, 3, 2, 2, 2, 303, 304, 7,
	95, 2, 2, 304, 93, 3, 2, 2, 2, 305, 306, 7, 125, 2, 2, 306, 95, 3, 2, 2,
	2, 307, 308, 7, 127, 2, 2, 308, 97, 3, 2, 2, 2, 309, 310, 7, 47, 2, 2,
	310, 311, 7, 64, 2, 2, 311, 99, 3, 2, 2, 2, 312, 313, 7, 40, 2, 2, 313,
	101, 3, 2, 2, 2, 314, 315, 7, 126, 2, 2, 315, 103, 3, 2, 2, 2, 316, 317,
	7, 48, 2, 2, 317, 318, 7, 48, 2, 2, 318, 319, 7, 48, 2, 2, 319, 105, 3,
	2, 2, 2, 320, 322, 9, 2, 2, 2, 321, 320, 3, 2, 2, 2, 322, 323, 3, 2, 2,
	2, 323, 321, 3, 2, 2, 2, 323, 324, 3, 2, 2, 2, 324, 331, 3, 2, 2, 2, 325,
	327, 7, 48, 2, 2, 326, 328, 9, 2, 2, 2, 327, 326, 3, 2, 2, 2, 328, 329,
	3, 2, 2, 2, 329, 327, 3, 2, 2, 2, 329, 330, 3, 2, 2, 2, 330, 332, 3, 2,
	2, 2, 331, 325, 3, 2, 2, 2, 331, 332, 3, 2, 2, 2, 332, 107, 3, 2, 2, 2,
	333, 337, 9, 3, 2, 2, 334, 336, 9, 4, 2, 2, 335, 334, 3, 2, 2, 2, 336,
	339, 3, 2, 2, 2, 337, 335, 3, 2, 2, 2, 337, 338, 3, 2, 2, 2, 338, 109,
	3, 2, 2, 2, 339, 337, 3, 2, 2, 2, 340, 341, 7, 116, 2, 2, 341, 342, 7,
	98, 2, 2, 342, 346, 3, 2, 2, 2, 343, 345, 10, 5, 2, 2, 344, 343, 3, 2,
	2, 2, 345, 348, 3, 2, 2, 2, 346, 344, 3, 2, 2, 2, 346, 347, 3, 2, 2, 2,
	347, 349, 3, 2, 2, 2, 348, 346, 3, 2, 2, 2, 349, 350, 7, 98, 2, 2, 350,
	111, 3, 2, 2, 2, 351, 353, 7, 15, 2, 2, 352, 351, 3, 2, 2, 2, 352, 353,
	3, 2, 2, 2, 353, 354, 3, 2, 2, 2, 354, 355, 7, 12, 2, 2, 355, 113, 3, 2,
	2, 2, 356, 364, 7, 41, 2, 2, 357, 358, 7, 94, 2, 2, 358, 365, 9, 6, 2,
	2, 359, 361, 10, 7, 2, 2, 360, 359, 3, 2, 2, 2, 361, 362, 3, 2, 2, 2, 362,
	360, 3, 2, 2, 2, 362, 363, 3, 2, 2, 2, 363, 365, 3, 2, 2, 2, 364, 357,
	3, 2, 2, 2, 364, 360, 3, 2, 2, 2, 365, 366, 3, 2, 2, 2, 366, 367, 7, 41,
	2, 2, 367, 115, 3, 2, 2, 2, 368, 369, 9, 8, 2, 2, 369, 117, 3, 2, 2, 2,
	370, 374, 7, 37, 2, 2, 371, 373, 10, 9, 2, 2, 372, 371, 3, 2, 2, 2, 373,
	376, 3, 2, 2, 2, 374, 372, 3, 2, 2, 2, 374, 375, 3, 2, 2, 2, 375, 377,
	3, 2, 2, 2, 376, 374, 3, 2, 2, 2, 377, 378, 8, 59, 2, 2, 378, 119, 3, 2,
	2, 2, 379, 381, 9, 10, 2, 2, 380, 379, 3, 2, 2, 2, 381, 382, 3, 2, 2, 2,
	382, 380, 3, 2, 2, 2, 382, 383, 3, 2, 2, 2, 383, 384, 3, 2, 2, 2, 384,
	385, 8, 60, 2, 2, 385, 121, 3, 2, 2, 2, 386, 387, 7, 36, 2, 2, 387, 388,
	3, 2, 2, 2, 388, 389, 8, 61, 3, 2, 389, 390, 8, 61, 4, 2, 390, 123, 3,
	2, 2, 2, 391, 392, 10, 11, 2, 2, 392, 393, 3, 2, 2, 2, 393, 394, 8, 62,
	3, 2, 394, 125, 3, 2, 2, 2, 395, 401, 7, 94, 2, 2, 396, 402, 9, 12, 2,
	2, 397, 398, 7, 122, 2, 2, 398, 399, 5, 116, 58, 2, 399, 400, 5, 116, 58,
	2, 400, 402, 3, 2, 2, 2, 401, 396, 3, 2, 2, 2, 401, 397, 3, 2, 2, 2, 402,
	403, 3, 2, 2, 2, 403, 404, 8, 63, 3, 2, 404, 127, 3, 2, 2, 2, 405, 406,
	7, 36, 2, 2, 406, 407, 3, 2, 2, 2, 407, 408, 8, 64, 5, 2, 408, 129, 3,
	2, 2, 2, 15, 2, 3, 323, 329, 331, 337, 346, 352, 362, 364, 374, 382, 401,
	6, 8, 2, 2, 5, 2, 2, 4, 3, 2, 4, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "QSTR",
}

var lexerLiteralNames = []string{
	"", "'!info'", "'!param'", "'!flag'", "'and'", "'break'", "'catch'", "'continue'",
	"'defer'", "'else'", "'false'", "'for'", "'func'", "'if'", "'import'",
	"'nil'", "'not'", "'or'", "'return'", "'throw'", "'true'", "'try'", "'var'",
	"'while'", "'yield'", "'='", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='",
	"'+'", "'-'", "'*'", "'/'", "'%'", "'?'", "';'", "','", "':'", "'.'", "'('",
	"')'", "'['", "']'", "'{'", "'}'", "'->'", "'&'", "'|'", "'...'",
}

var lexerSymbolicNames = []string{
	"", "M_INFO", "M_PARAM", "M_FLAG", "AND", "BREAK", "CATCH", "CONTINUE",
	"DEFER", "ELSE", "FALSE", "FOR", "FUNC", "IF", "IMPORT", "NIL", "NOT",
	"OR", "RETURN", "THROW", "TRUE", "TRY", "VAR", "WHILE", "YIELD", "ASSIGN",
	"EQ", "NE", "LT", "LE", "GT", "GE", "ADD", "SUB", "MUL", "DIV", "MOD",
	"QUESTION_MARK", "SEMICOLON", "COMMA", "COLON", "PERIOD", "OPAREN", "CPAREN",
	"OBRACKET", "CBRACKET", "OCURLY", "CCURLY", "ARROW", "LAMBDA", "PIPE",
	"EXPAND", "NUMBER", "ID", "REGEX", "NEWLINE", "CHAR", "COMMENT", "WS",
	"STRING", "LDQUOTE",
}

var lexerRuleNames = []string{
	"M_INFO", "M_PARAM", "M_FLAG", "AND", "BREAK", "CATCH", "CONTINUE", "DEFER",
	"ELSE", "FALSE", "FOR", "FUNC", "IF", "IMPORT", "NIL", "NOT", "OR", "RETURN",
	"THROW", "TRUE", "TRY", "VAR", "WHILE", "YIELD", "ASSIGN", "EQ", "NE",
	"LT", "LE", "GT", "GE", "ADD", "SUB", "MUL", "DIV", "MOD", "QUESTION_MARK",
	"SEMICOLON", "COMMA", "COLON", "PERIOD", "OPAREN", "CPAREN", "OBRACKET",
	"CBRACKET", "OCURLY", "CCURLY", "ARROW", "LAMBDA", "PIPE", "EXPAND", "NUMBER",
	"ID", "REGEX", "NEWLINE", "CHAR", "HEX_DIGIT", "COMMENT", "WS", "LDQUOTE",
	"QUOTED_TEXT", "QUOTED_ESCAPE", "STRING",
}

type NitroLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewNitroLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *NitroLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewNitroLexer(input antlr.CharStream) *NitroLexer {
	l := new(NitroLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "NitroLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NitroLexer tokens.
const (
	NitroLexerM_INFO        = 1
	NitroLexerM_PARAM       = 2
	NitroLexerM_FLAG        = 3
	NitroLexerAND           = 4
	NitroLexerBREAK         = 5
	NitroLexerCATCH         = 6
	NitroLexerCONTINUE      = 7
	NitroLexerDEFER         = 8
	NitroLexerELSE          = 9
	NitroLexerFALSE         = 10
	NitroLexerFOR           = 11
	NitroLexerFUNC          = 12
	NitroLexerIF            = 13
	NitroLexerIMPORT        = 14
	NitroLexerNIL           = 15
	NitroLexerNOT           = 16
	NitroLexerOR            = 17
	NitroLexerRETURN        = 18
	NitroLexerTHROW         = 19
	NitroLexerTRUE          = 20
	NitroLexerTRY           = 21
	NitroLexerVAR           = 22
	NitroLexerWHILE         = 23
	NitroLexerYIELD         = 24
	NitroLexerASSIGN        = 25
	NitroLexerEQ            = 26
	NitroLexerNE            = 27
	NitroLexerLT            = 28
	NitroLexerLE            = 29
	NitroLexerGT            = 30
	NitroLexerGE            = 31
	NitroLexerADD           = 32
	NitroLexerSUB           = 33
	NitroLexerMUL           = 34
	NitroLexerDIV           = 35
	NitroLexerMOD           = 36
	NitroLexerQUESTION_MARK = 37
	NitroLexerSEMICOLON     = 38
	NitroLexerCOMMA         = 39
	NitroLexerCOLON         = 40
	NitroLexerPERIOD        = 41
	NitroLexerOPAREN        = 42
	NitroLexerCPAREN        = 43
	NitroLexerOBRACKET      = 44
	NitroLexerCBRACKET      = 45
	NitroLexerOCURLY        = 46
	NitroLexerCCURLY        = 47
	NitroLexerARROW         = 48
	NitroLexerLAMBDA        = 49
	NitroLexerPIPE          = 50
	NitroLexerEXPAND        = 51
	NitroLexerNUMBER        = 52
	NitroLexerID            = 53
	NitroLexerREGEX         = 54
	NitroLexerNEWLINE       = 55
	NitroLexerCHAR          = 56
	NitroLexerCOMMENT       = 57
	NitroLexerWS            = 58
	NitroLexerSTRING        = 59
	NitroLexerLDQUOTE       = 60
)

// NitroLexerQSTR is the NitroLexer mode.
const NitroLexerQSTR = 1
