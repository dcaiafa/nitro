package lib

import (
	"errors"

	"github.com/dcaiafa/nitro"
)

var (
	errNotEnoughArgs = errors.New("not enough arguments")
	errTooManyArgs   = errors.New("too many arguments")
)

func RegisterAll(c *nitro.Compiler) {
	c.AddNativeFn("avg", avg)
	c.AddNativeFn("close", close_)
	c.AddNativeFn("exec", exec)
	c.AddNativeFn("fcopy", fcopy)
	c.AddNativeFn("fcreate", fcreate)
	c.AddNativeFn("fcreatetemp", fcreatetemp)
	c.AddNativeFn("fexists", fexists)
	c.AddNativeFn("filter", filter)
	c.AddNativeFn("fisdir", fisdir)
	c.AddNativeFn("flist", flist)
	c.AddNativeFn("fpathbase", fpathbase)
	c.AddNativeFn("fpathclean", fpathclean)
	c.AddNativeFn("fpathdir", fpathdir)
	c.AddNativeFn("fpathext", fpathext)
	c.AddNativeFn("fpathfromslash", fpathfromslash)
	c.AddNativeFn("fpathjoin", fpathjoin)
	c.AddNativeFn("fremove", fremove)
	c.AddNativeFn("fremoveall", fremoveall)
	c.AddNativeFn("fromjson", fromjson)
	c.AddNativeFn("hasprefix", hasprefix)
	c.AddNativeFn("in", in)
	c.AddNativeFn("lines", lines)
	c.AddNativeFn("log", log)
	c.AddNativeFn("logf", logf)
	c.AddNativeFn("map", fnMap)
	c.AddNativeFn("mapreduce", mapreduce)
	c.AddNativeFn("match", fnMatch)
	c.AddNativeFn("open", open)
	c.AddNativeFn("out", out)
	c.AddNativeFn("parsetime", parsetime)
	c.AddNativeFn("popout", popout)
	c.AddNativeFn("print", print)
	c.AddNativeFn("printall", printall)
	c.AddNativeFn("printf", printf)
	c.AddNativeFn("pushout", pushout)
	c.AddNativeFn("read", read)
	c.AddNativeFn("replace", replace)
	c.AddNativeFn("shuffle", shuffle)
	c.AddNativeFn("skip", skip)
	c.AddNativeFn("sort", sort)
	c.AddNativeFn("split", split)
	c.AddNativeFn("sprintf", sprintf)
	c.AddNativeFn("take", take)
	c.AddNativeFn("timefromunix", timefromunix)
	c.AddNativeFn("timetounix", timetounix)
	c.AddNativeFn("timetounixnano", timetounixnano)
	c.AddNativeFn("toarray", toarray)
	c.AddNativeFn("tojson", tojson)
	c.AddNativeFn("top", top)
	c.AddNativeFn("trim", trim)
	c.AddNativeFn("unique", unique)
	c.AddNativeFn("write", write)
}
